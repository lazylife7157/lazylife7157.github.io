{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it-emoji/lib/render.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/uslug/index.js","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/clone/clone.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/unorm/lib/unorm.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/uslug/lib/Z.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/uslug/lib/L.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/markdown-it-toc-and-anchor/dist/index.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/markdown-it-emoji/index.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/katex/dist/katex.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it-emoji/lib/replace.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it-mark/index.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/markdown-it-abbr/index.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/markdown-it-sub/index.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/uslug/lib/N.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/markdown-it-sup/index.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/uslug/lib/M.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/vue-markdown/dist/vue-markdown.common.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/markdown-it-katex/index.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it-task-lists/index.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/markdown-it-ins/index.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/uslug/lib/uslug.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/markdown-it-footnote/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/core-js/library/fn/array/is-array.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/core-js/modules/es6.object.assign.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it-deflist/index.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","__webpack_require__","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","tokens","idx","content","LIBRARY","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","this","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","undefined","$anyNative","entries","values","P","F","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","skipSpacesBack","skipCharsBack","line","push","markup","map","children","it","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","MarkdownIt","presetName","options","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateInline","md","outTokens","posMax","pending","pendingLevel","cache","delimiters","pushPending","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","toInteger","Math","min","index","dP","anObject","getKeys","defineProperties","Properties","f","$at","iterated","_t","_i","point","done","split","__esModule","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","fn","mapDomain","string","parts","labels","encoded","join","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","input","out","basic","j","oldi","w","t","baseMinusT","inputLength","n","bias","lastIndexOf","splice","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","defer","channel","port","ctx","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","queue","ONREADYSTATECHANGE","run","id","listener","event","data","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","terminate","l","nextLine","terminatorRules","getRules","isEmpty","sCount","blkIndent","skipChars","skipSpaces","getLines","S","isObject","val","valueOf","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","document","is","createElement","iterator","ret","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","arr","curByte","tripletToBase64","num","encodeChunk","uint8","end","extraBytes","maxChunkLength","len2","curr","last","$defineProperty","createDesc","cof","ARG","tryGet","T","B","callee","Buffer","clone","_instanceof","nativeMap","nativeSet","nativePromise","Map","_","Set","parent","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","_clone","child","resolve","reject","err","__isArray","__isRegExp","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","create","keyChild","valueChild","entryChild","add","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","Infinity","__objToStr","o","re","flags","ignoreCase","multiline","clonePrototype","defined","classof","getIteratorMethod","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","d","__webpack_exports__","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","exec","SRC","$toString","TO_STRING","TPL","inspectSource","safe","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","contentWindow","open","write","close","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","parseFloat","isFinite","isPromise","catch","JSON","stringify","toNumber","isNaN","makeMap","expectsLowerCase","isReservedAttribute","remove","item","hasOwn","cached","hit","camelizeRE","camelize","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","boundFn","a","_length","nativeBind","bind","toArray","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeLetters","isReserved","def","writable","configurable","bailRE","parsePath","path","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","opts","get","isServerRendering","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","warn","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","key$1","props","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","def$$1","mergeOptions","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","_props","getType","isSameType","expectedTypes","handleError","cur","$parent","errorCaptured","capture","globalHandleError","invokeWithErrorHandling","handler","logError","console","timerFunc","isUsingMicroTask","callbacks","flushCallbacks","copies","p","MutationObserver","observer","textNode","createTextNode","characterData","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","isStable","$stable","$key","_normalized","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","installRenderHelpers","_o","_n","_s","_l","_q","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","listeners","injections","scopedSlots","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","pre","applyNS","registerDeepBindings","force","class","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","$nextTick","_render","ref","ensureCtor","comp","toStringTag","factory","errorComp","resolved","loading","loadingComp","owner","owners","sync","forceRender","renderCompleted","$forceUpdate","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","$on","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","i$1","cbs","$emit","setActiveInstance","prevActiveInstance","initLifecycle","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","_data","mountComponent","el","updateComponent","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","direct","handlers","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","createEvent","timeStamp","uid$2","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","modified","latest","sealed","sealedOptions","initUse","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","builtInComponents","initGlobalAPI","configDef","util","defineReactive","delete","observable","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","svgContainer","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","getBoundingClientRect","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","store","USE_SYMBOL","$exports","DEFAULT_FEATURE","CACHE_THRESHOLD","SBase","LBase","VBase","TBase","LCount","VCount","TCount","NCount","SCount","UChar","cp","feature","codepoint","cacheCounter","fromCache","needFeature","fromData","dunit","udata","fromCpOnly","fromRuleBasedJamo","SIndex","TIndex","fromCpFilter","strategies","reduceRight","strategy","isHighSurrogate","isLowSurrogate","prepFeature","getDecomp","isCompatibility","isExclude","getCanonicalClass","getComposite","following","UCharIterator","cursor","RecursDecompIterator","cano","canonical","resBuf","recursiveDecomp","uchar","decomp","DecompIterator","cc","inspt","uchar2","cc2","CompIterator","procBuf","lastClass","starter","composite","createIterator","nfd","nfkd","nfc","nfkc","0","60","824","61","62","65","768","769","770","771","772","774","775","776","777","778","780","783","785","803","805","808","66","817","67","807","68","813","69","816","70","71","72","814","73","74","75","76","77","78","79","779","795","80","82","83","806","84","85","804","86","87","88","89","90","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","114","115","116","117","118","119","120","121","122","160","168","834","170","175","178","179","180","181","184","185","186","188","189","190","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","209","210","211","212","213","214","216","217","218","219","220","221","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","241","242","243","244","245","246","248","249","250","251","252","253","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","296","297","298","299","300","301","302","303","304","306","307","308","309","310","311","313","314","315","316","317","318","319","320","323","324","325","326","327","328","329","332","333","334","335","336","337","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","416","417","431","432","439","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","478","479","480","481","482","483","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","504","505","506","507","508","509","510","511","66045","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","542","543","550","551","552","553","554","555","556","557","558","559","560","561","562","563","658","688","689","690","691","692","693","694","695","696","728","729","730","731","732","733","736","737","738","739","740","66272","773","781","782","784","786","787","788","789","790","791","792","793","794","796","797","798","799","800","801","802","809","810","811","812","815","818","819","820","821","822","823","825","826","827","828","829","830","831","832","833","835","836","837","838","839","840","841","842","843","844","845","846","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","884","890","894","900","901","902","903","904","905","906","908","910","911","912","913","917","919","921","927","929","933","937","938","939","940","941","942","943","944","945","949","951","953","959","961","965","969","970","971","972","973","974","976","977","978","979","980","981","982","1008","1009","1010","1012","1013","1017","66422","66423","66424","66425","66426","1024","1025","1027","1030","1031","1036","1037","1038","1040","1043","1045","1046","1047","1048","1049","1050","1054","1059","1063","1067","1069","1072","1075","1077","1078","1079","1080","1081","1082","1086","1091","1095","1099","1101","1104","1105","1107","1110","1111","1116","1117","1118","1140","1141","1142","1143","1155","1156","1157","1158","1159","1217","1218","1232","1233","1234","1235","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1272","1273","1280","1415","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1471","1473","1474","1476","1477","1479","1536","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1570","1571","1572","1573","1574","1575","1619","1620","1621","1608","1610","1611","1612","1613","1614","1615","1616","1617","1618","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1648","1653","1654","1655","1656","1728","1729","1730","1746","1747","1749","1750","1751","1752","1753","1754","1755","1756","1759","1760","1761","1762","1763","1764","1767","1768","1770","1771","1772","1773","1792","1809","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","2027","2028","2029","2030","2031","2032","2033","2034","2035","2048","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2085","2086","2087","2089","2090","2091","2092","2093","2137","2138","2139","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2344","2364","2345","2352","2353","2355","2356","2381","2385","2386","2387","2388","2392","2393","2394","2395","2396","2397","2398","2399","2492","2503","2494","2519","2507","2508","2509","2524","2525","2527","2560","2611","2614","2620","2637","2649","2650","2651","2654","2748","2765","68109","68111","68152","68153","68154","68159","68325","68326","2816","2876","2887","2878","2902","2903","2888","2891","2892","2893","2908","2909","2962","3031","2964","3014","3006","3015","3018","3019","3020","3021","3072","3142","3158","3144","3149","3157","3260","3263","3285","3264","3270","3266","3286","3271","3272","3274","3275","3277","3328","3398","3390","3415","3399","3402","3403","3404","3405","3530","3545","3535","3551","3546","3548","3549","3550","3584","3635","3640","3641","3642","3656","3657","3658","3659","3763","3768","3769","3784","3785","3786","3787","3804","3805","3840","3852","3864","3865","3893","3895","3897","3907","3917","3922","3927","3932","3945","3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3968","3969","3970","3971","3972","3974","3975","3987","3997","4002","4007","4012","4025","4038","4096","4133","4142","4134","4151","4153","4154","4237","4348","69702","69759","69785","69818","69786","69787","69788","69797","69803","69817","4352","69888","69889","69890","69934","69935","69937","69927","69938","69939","69940","70003","70080","4608","70197","70198","70377","70378","4864","4957","4958","4959","70460","70471","70462","70487","70475","70476","70477","70502","70503","70504","70505","70506","70507","70508","70512","70513","70514","70515","70516","5120","70841","70832","70842","70845","70843","70844","70846","70850","70851","5376","71096","71087","71097","71098","71099","71103","71104","5632","71231","71350","71351","5888","5908","5940","6098","6109","6144","6313","6400","6457","6458","6459","6656","6679","6680","6752","6773","6774","6775","6776","6777","6778","6779","6780","6783","6832","6833","6834","6835","6836","6837","6838","6839","6840","6841","6842","6843","6844","6845","6912","6917","6965","6918","6919","6920","6921","6922","6923","6924","6925","6926","6929","6930","6964","6970","6971","6972","6973","6974","6975","6976","6977","6978","6979","6980","7019","7020","7021","7022","7023","7024","7025","7026","7027","7082","7083","7142","7154","7155","7168","7223","7376","7377","7378","7380","7381","7382","7383","7384","7385","7386","7387","7388","7389","7390","7391","7392","7394","7395","7396","7397","7398","7399","7400","7405","7412","7416","7417","7424","7468","7469","7470","7472","7473","7474","7475","7476","7477","7478","7479","7480","7481","7482","7484","7485","7486","7487","7488","7489","7490","7491","7492","7493","7494","7495","7496","7497","7498","7499","7500","7501","7503","7504","7505","7506","7507","7508","7509","7510","7511","7512","7513","7514","7515","7516","7517","7518","7519","7520","7521","7522","7523","7524","7525","7526","7527","7528","7529","7530","7544","7579","7580","7581","7582","7583","7584","7585","7586","7587","7588","7589","7590","7591","7592","7593","7594","7595","7596","7597","7598","7599","7600","7601","7602","7603","7604","7605","7606","7607","7608","7609","7610","7611","7612","7613","7614","7615","7616","7617","7618","7619","7620","7621","7622","7623","7624","7625","7626","7627","7628","7629","7630","7631","7632","7633","7634","7635","7636","7637","7638","7639","7640","7641","7642","7643","7644","7645","7646","7647","7648","7649","7650","7651","7652","7653","7654","7655","7656","7657","7658","7659","7660","7661","7662","7663","7664","7665","7666","7667","7668","7669","7676","7677","7678","7679","7680","7681","7682","7683","7684","7685","7686","7687","7688","7689","7690","7691","7692","7693","7694","7695","7696","7697","7698","7699","7700","7701","7702","7703","7704","7705","7706","7707","7708","7709","7710","7711","7712","7713","7714","7715","7716","7717","7718","7719","7720","7721","7722","7723","7724","7725","7726","7727","7728","7729","7730","7731","7732","7733","7734","7735","7736","7737","7738","7739","7740","7741","7742","7743","7744","7745","7746","7747","7748","7749","7750","7751","7752","7753","7754","7755","7756","7757","7758","7759","7760","7761","7762","7763","7764","7765","7766","7767","7768","7769","7770","7771","7772","7773","7774","7775","7776","7777","7778","7779","7780","7781","7782","7783","7784","7785","7786","7787","7788","7789","7790","7791","7792","7793","7794","7795","7796","7797","7798","7799","7800","7801","7802","7803","7804","7805","7806","7807","7808","7809","7810","7811","7812","7813","7814","7815","7816","7817","7818","7819","7820","7821","7822","7823","7824","7825","7826","7827","7828","7829","7830","7831","7832","7833","7834","7835","7840","7841","7842","7843","7844","7845","7846","7847","7848","7849","7850","7851","7852","7853","7854","7855","7856","7857","7858","7859","7860","7861","7862","7863","7864","7865","7866","7867","7868","7869","7870","7871","7872","7873","7874","7875","7876","7877","7878","7879","7880","7881","7882","7883","7884","7885","7886","7887","7888","7889","7890","7891","7892","7893","7894","7895","7896","7897","7898","7899","7900","7901","7902","7903","7904","7905","7906","7907","7908","7909","7910","7911","7912","7913","7914","7915","7916","7917","7918","7919","7920","7921","7922","7923","7924","7925","7926","7927","7928","7929","7936","7937","7938","7939","7940","7941","7942","7943","7944","7945","7946","7947","7948","7949","7950","7951","7952","7953","7954","7955","7956","7957","7960","7961","7962","7963","7964","7965","7968","7969","7970","7971","7972","7973","7974","7975","7976","7977","7978","7979","7980","7981","7982","7983","7984","7985","7986","7987","7988","7989","7990","7991","7992","7993","7994","7995","7996","7997","7998","7999","8000","8001","8002","8003","8004","8005","8008","8009","8010","8011","8012","8013","8016","8017","8018","8019","8020","8021","8022","8023","8025","8027","8029","8031","8032","8033","8034","8035","8036","8037","8038","8039","8040","8041","8042","8043","8044","8045","8046","8047","8048","8049","8050","8051","8052","8053","8054","8055","8056","8057","8058","8059","8060","8061","8064","8065","8066","8067","8068","8069","8070","8071","8072","8073","8074","8075","8076","8077","8078","8079","8080","8081","8082","8083","8084","8085","8086","8087","8088","8089","8090","8091","8092","8093","8094","8095","8096","8097","8098","8099","8100","8101","8102","8103","8104","8105","8106","8107","8108","8109","8110","8111","8112","8113","8114","8115","8116","8118","8119","8120","8121","8122","8123","8124","8125","8126","8127","8128","8129","8130","8131","8132","8134","8135","8136","8137","8138","8139","8140","8141","8142","8143","8144","8145","8146","8147","8150","8151","8152","8153","8154","8155","8157","8158","8159","8160","8161","8162","8163","8164","8165","8166","8167","8168","8169","8170","8171","8172","8173","8174","8175","8178","8179","8180","8182","8183","8184","8185","8186","8187","8188","8189","8190","8192","8193","8194","8195","8196","8197","8198","8199","8200","8201","8202","8209","8215","8228","8229","8230","8239","8243","8244","8246","8247","8252","8254","8263","8264","8265","8279","8287","8304","8305","8308","8309","8310","8311","8312","8313","8314","8315","8316","8317","8318","8319","8320","8321","8322","8323","8324","8325","8326","8327","8328","8329","8330","8331","8332","8333","8334","8336","8337","8338","8339","8340","8341","8342","8343","8344","8345","8346","8347","8348","8360","8400","8401","8402","8403","8404","8405","8406","8407","8408","8409","8410","8411","8412","8417","8421","8422","8423","8424","8425","8426","8427","8428","8429","8430","8431","8432","8448","8449","8450","8451","8453","8454","8455","8457","8458","8459","8460","8461","8462","8463","8464","8465","8466","8467","8469","8470","8473","8474","8475","8476","8477","8480","8481","8482","8484","8486","8488","8490","8491","8492","8493","8495","8496","8497","8499","8500","8501","8502","8503","8504","8505","8507","8508","8509","8510","8511","8512","8517","8518","8519","8520","8521","8528","8529","8530","8531","8532","8533","8534","8535","8536","8537","8538","8539","8540","8541","8542","8543","8544","8545","8546","8547","8548","8549","8550","8551","8552","8553","8554","8555","8556","8557","8558","8559","8560","8561","8562","8563","8564","8565","8566","8567","8568","8569","8570","8571","8572","8573","8574","8575","8585","8592","8594","8596","8602","8603","8622","8653","8654","8655","8656","8658","8660","8704","8707","8708","8712","8713","8715","8716","8739","8740","8741","8742","8748","8749","8751","8752","8764","8769","8771","8772","8773","8775","8776","8777","8781","8800","8801","8802","8804","8805","8813","8814","8815","8816","8817","8818","8819","8820","8821","8822","8823","8824","8825","8826","8827","8828","8829","8832","8833","8834","8835","8836","8837","8838","8839","8840","8841","8849","8850","8866","8872","8873","8875","8876","8877","8878","8879","8882","8883","8884","8885","8928","8929","8930","8931","8938","8939","8940","8941","8960","9001","9002","9216","9312","9313","9314","9315","9316","9317","9318","9319","9320","9321","9322","9323","9324","9325","9326","9327","9328","9329","9330","9331","9332","9333","9334","9335","9336","9337","9338","9339","9340","9341","9342","9343","9344","9345","9346","9347","9348","9349","9350","9351","9352","9353","9354","9355","9356","9357","9358","9359","9360","9361","9362","9363","9364","9365","9366","9367","9368","9369","9370","9371","9372","9373","9374","9375","9376","9377","9378","9379","9380","9381","9382","9383","9384","9385","9386","9387","9388","9389","9390","9391","9392","9393","9394","9395","9396","9397","9398","9399","9400","9401","9402","9403","9404","9405","9406","9407","9408","9409","9410","9411","9412","9413","9414","9415","9416","9417","9418","9419","9420","9421","9422","9423","9424","9425","9426","9427","9428","9429","9430","9431","9432","9433","9434","9435","9436","9437","9438","9439","9440","9441","9442","9443","9444","9445","9446","9447","9448","9449","9450","10752","10764","10868","10869","10870","10972","11264","11388","11389","11503","11504","11505","11520","11631","11647","11744","11745","11746","11747","11748","11749","11750","11751","11752","11753","11754","11755","11756","11757","11758","11759","11760","11761","11762","11763","11764","11765","11766","11767","11768","11769","11770","11771","11772","11773","11774","11775","11776","11935","12019","12032","12033","12034","12035","12036","12037","12038","12039","12040","12041","12042","12043","12044","12045","12046","12047","12048","12049","12050","12051","12052","12053","12054","12055","12056","12057","12058","12059","12060","12061","12062","12063","12064","12065","12066","12067","12068","12069","12070","12071","12072","12073","12074","12075","12076","12077","12078","12079","12080","12081","12082","12083","12084","12085","12086","12087","12088","12089","12090","12091","12092","12093","12094","12095","12096","12097","12098","12099","12100","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","12111","12112","12113","12114","12115","12116","12117","12118","12119","12120","12121","12122","12123","12124","12125","12126","12127","12128","12129","12130","12131","12132","12133","12134","12135","12136","12137","12138","12139","12140","12141","12142","12143","12144","12145","12146","12147","12148","12149","12150","12151","12152","12153","12154","12155","12156","12157","12158","12159","12160","12161","12162","12163","12164","12165","12166","12167","12168","12169","12170","12171","12172","12173","12174","12175","12176","12177","12178","12179","12180","12181","12182","12183","12184","12185","12186","12187","12188","12189","12190","12191","12192","12193","12194","12195","12196","12197","12198","12199","12200","12201","12202","12203","12204","12205","12206","12207","12208","12209","12210","12211","12212","12213","12214","12215","12216","12217","12218","12219","12220","12221","12222","12223","12224","12225","12226","12227","12228","12229","12230","12231","12232","12233","12234","12235","12236","12237","12238","12239","12240","12241","12242","12243","12244","12245","12288","12330","12331","12332","12333","12334","12335","12342","12344","12345","12346","12358","12441","12363","12364","12365","12366","12367","12368","12369","12370","12371","12372","12373","12374","12375","12376","12377","12378","12379","12380","12381","12382","12383","12384","12385","12386","12388","12389","12390","12391","12392","12393","12399","12442","12400","12401","12402","12403","12404","12405","12406","12407","12408","12409","12410","12411","12412","12413","12436","12443","12444","12445","12446","12447","12454","12459","12460","12461","12462","12463","12464","12465","12466","12467","12468","12469","12470","12471","12472","12473","12474","12475","12476","12477","12478","12479","12480","12481","12482","12484","12485","12486","12487","12488","12489","12495","12496","12497","12498","12499","12500","12501","12502","12503","12504","12505","12506","12507","12508","12509","12527","12528","12529","12530","12532","12535","12536","12537","12538","12541","12542","12543","12544","12593","12594","12595","12596","12597","12598","12599","12600","12601","12602","12603","12604","12605","12606","12607","12608","12609","12610","12611","12612","12613","12614","12615","12616","12617","12618","12619","12620","12621","12622","12623","12624","12625","12626","12627","12628","12629","12630","12631","12632","12633","12634","12635","12636","12637","12638","12639","12640","12641","12642","12643","12644","12645","12646","12647","12648","12649","12650","12651","12652","12653","12654","12655","12656","12657","12658","12659","12660","12661","12662","12663","12664","12665","12666","12667","12668","12669","12670","12671","12672","12673","12674","12675","12676","12677","12678","12679","12680","12681","12682","12683","12684","12685","12686","12690","12691","12692","12693","12694","12695","12696","12697","12698","12699","12700","12701","12702","12703","12800","12801","12802","12803","12804","12805","12806","12807","12808","12809","12810","12811","12812","12813","12814","12815","12816","12817","12818","12819","12820","12821","12822","12823","12824","12825","12826","12827","12828","12829","12830","12832","12833","12834","12835","12836","12837","12838","12839","12840","12841","12842","12843","12844","12845","12846","12847","12848","12849","12850","12851","12852","12853","12854","12855","12856","12857","12858","12859","12860","12861","12862","12863","12864","12865","12866","12867","12868","12869","12870","12871","12880","12881","12882","12883","12884","12885","12886","12887","12888","12889","12890","12891","12892","12893","12894","12895","12896","12897","12898","12899","12900","12901","12902","12903","12904","12905","12906","12907","12908","12909","12910","12911","12912","12913","12914","12915","12916","12917","12918","12919","12920","12921","12922","12923","12924","12925","12926","12928","12929","12930","12931","12932","12933","12934","12935","12936","12937","12938","12939","12940","12941","12942","12943","12944","12945","12946","12947","12948","12949","12950","12951","12952","12953","12954","12955","12956","12957","12958","12959","12960","12961","12962","12963","12964","12965","12966","12967","12968","12969","12970","12971","12972","12973","12974","12975","12976","12977","12978","12979","12980","12981","12982","12983","12984","12985","12986","12987","12988","12989","12990","12991","12992","12993","12994","12995","12996","12997","12998","12999","13000","13001","13002","13003","13004","13005","13006","13007","13008","13009","13010","13011","13012","13013","13014","13015","13016","13017","13018","13019","13020","13021","13022","13023","13024","13025","13026","13027","13028","13029","13030","13031","13032","13033","13034","13035","13036","13037","13038","13039","13040","13041","13042","13043","13044","13045","13046","13047","13048","13049","13050","13051","13052","13053","13054","13056","13057","13058","13059","13060","13061","13062","13063","13064","13065","13066","13067","13068","13069","13070","13071","13072","13073","13074","13075","13076","13077","13078","13079","13080","13081","13082","13083","13084","13085","13086","13087","13088","13089","13090","13091","13092","13093","13094","13095","13096","13097","13098","13099","13100","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13111","13112","13113","13114","13115","13116","13117","13118","13119","13120","13121","13122","13123","13124","13125","13126","13127","13128","13129","13130","13131","13132","13133","13134","13135","13136","13137","13138","13139","13140","13141","13142","13143","13144","13145","13146","13147","13148","13149","13150","13151","13152","13153","13154","13155","13156","13157","13158","13159","13160","13161","13162","13163","13164","13165","13166","13167","13168","13169","13170","13171","13172","13173","13174","13175","13176","13177","13178","13179","13180","13181","13182","13183","13184","13185","13186","13187","13188","13189","13190","13191","13192","13193","13194","13195","13196","13197","13198","13199","13200","13201","13202","13203","13204","13205","13206","13207","13208","13209","13210","13211","13212","13213","13214","13215","13216","13217","13218","13219","13220","13221","13222","13223","13224","13225","13226","13227","13228","13229","13230","13231","13232","13233","13234","13235","13236","13237","13238","13239","13240","13241","13242","13243","13244","13245","13246","13247","13248","13249","13250","13251","13252","13253","13254","13255","13256","13257","13258","13259","13260","13261","13262","13263","13264","13265","13266","13267","13268","13269","13270","13271","13272","13273","13274","13275","13276","13277","13278","13279","13280","13281","13282","13283","13284","13285","13286","13287","13288","13289","13290","13291","13292","13293","13294","13295","13296","13297","13298","13299","13300","13301","13302","13303","13304","13305","13306","13307","13308","13309","13310","13311","27136","92912","92913","92914","92915","92916","27392","92976","92977","92978","92979","92980","92981","92982","42496","42607","42612","42613","42614","42615","42616","42617","42618","42619","42620","42621","42652","42653","42655","42736","42737","42752","42864","43000","43001","43008","43014","43204","43232","43233","43234","43235","43236","43237","43238","43239","43240","43241","43242","43243","43244","43245","43246","43247","43248","43249","43264","43307","43308","43309","43347","43443","43456","43520","43696","43698","43699","43700","43703","43704","43710","43711","43713","43766","43776","43868","43869","43870","43871","44013","48128","113822","53504","119134","119135","119136","119137","119138","119139","119140","119141","119142","119143","119144","119145","119149","119150","119151","119152","119153","119154","119163","119164","119165","119166","119167","119168","119169","119170","119173","119174","119175","119176","119177","119178","119179","119210","119211","119212","119213","119227","119228","119229","119230","119231","119232","53760","119362","119363","119364","54272","119808","119809","119810","119811","119812","119813","119814","119815","119816","119817","119818","119819","119820","119821","119822","119823","119824","119825","119826","119827","119828","119829","119830","119831","119832","119833","119834","119835","119836","119837","119838","119839","119840","119841","119842","119843","119844","119845","119846","119847","119848","119849","119850","119851","119852","119853","119854","119855","119856","119857","119858","119859","119860","119861","119862","119863","119864","119865","119866","119867","119868","119869","119870","119871","119872","119873","119874","119875","119876","119877","119878","119879","119880","119881","119882","119883","119884","119885","119886","119887","119888","119889","119890","119891","119892","119894","119895","119896","119897","119898","119899","119900","119901","119902","119903","119904","119905","119906","119907","119908","119909","119910","119911","119912","119913","119914","119915","119916","119917","119918","119919","119920","119921","119922","119923","119924","119925","119926","119927","119928","119929","119930","119931","119932","119933","119934","119935","119936","119937","119938","119939","119940","119941","119942","119943","119944","119945","119946","119947","119948","119949","119950","119951","119952","119953","119954","119955","119956","119957","119958","119959","119960","119961","119962","119963","119964","119966","119967","119970","119973","119974","119977","119978","119979","119980","119982","119983","119984","119985","119986","119987","119988","119989","119990","119991","119992","119993","119995","119997","119998","119999","120000","120001","120002","120003","120005","120006","120007","120008","120009","120010","120011","120012","120013","120014","120015","120016","120017","120018","120019","120020","120021","120022","120023","120024","120025","120026","120027","120028","120029","120030","120031","120032","120033","120034","120035","120036","120037","120038","120039","120040","120041","120042","120043","120044","120045","120046","120047","120048","120049","120050","120051","120052","120053","120054","120055","120056","120057","120058","120059","120060","120061","120062","120063","54528","120064","120065","120066","120067","120068","120069","120071","120072","120073","120074","120077","120078","120079","120080","120081","120082","120083","120084","120086","120087","120088","120089","120090","120091","120092","120094","120095","120096","120097","120098","120099","120100","120101","120102","120103","120104","120105","120106","120107","120108","120109","120110","120111","120112","120113","120114","120115","120116","120117","120118","120119","120120","120121","120123","120124","120125","120126","120128","120129","120130","120131","120132","120134","120138","120139","120140","120141","120142","120143","120144","120146","120147","120148","120149","120150","120151","120152","120153","120154","120155","120156","120157","120158","120159","120160","120161","120162","120163","120164","120165","120166","120167","120168","120169","120170","120171","120172","120173","120174","120175","120176","120177","120178","120179","120180","120181","120182","120183","120184","120185","120186","120187","120188","120189","120190","120191","120192","120193","120194","120195","120196","120197","120198","120199","120200","120201","120202","120203","120204","120205","120206","120207","120208","120209","120210","120211","120212","120213","120214","120215","120216","120217","120218","120219","120220","120221","120222","120223","120224","120225","120226","120227","120228","120229","120230","120231","120232","120233","120234","120235","120236","120237","120238","120239","120240","120241","120242","120243","120244","120245","120246","120247","120248","120249","120250","120251","120252","120253","120254","120255","120256","120257","120258","120259","120260","120261","120262","120263","120264","120265","120266","120267","120268","120269","120270","120271","120272","120273","120274","120275","120276","120277","120278","120279","120280","120281","120282","120283","120284","120285","120286","120287","120288","120289","120290","120291","120292","120293","120294","120295","120296","120297","120298","120299","120300","120301","120302","120303","120304","120305","120306","120307","120308","120309","120310","120311","120312","120313","120314","120315","120316","120317","120318","120319","54784","120320","120321","120322","120323","120324","120325","120326","120327","120328","120329","120330","120331","120332","120333","120334","120335","120336","120337","120338","120339","120340","120341","120342","120343","120344","120345","120346","120347","120348","120349","120350","120351","120352","120353","120354","120355","120356","120357","120358","120359","120360","120361","120362","120363","120364","120365","120366","120367","120368","120369","120370","120371","120372","120373","120374","120375","120376","120377","120378","120379","120380","120381","120382","120383","120384","120385","120386","120387","120388","120389","120390","120391","120392","120393","120394","120395","120396","120397","120398","120399","120400","120401","120402","120403","120404","120405","120406","120407","120408","120409","120410","120411","120412","120413","120414","120415","120416","120417","120418","120419","120420","120421","120422","120423","120424","120425","120426","120427","120428","120429","120430","120431","120432","120433","120434","120435","120436","120437","120438","120439","120440","120441","120442","120443","120444","120445","120446","120447","120448","120449","120450","120451","120452","120453","120454","120455","120456","120457","120458","120459","120460","120461","120462","120463","120464","120465","120466","120467","120468","120469","120470","120471","120472","120473","120474","120475","120476","120477","120478","120479","120480","120481","120482","120483","120484","120485","120488","120489","120490","120491","120492","120493","120494","120495","120496","120497","120498","120499","120500","120501","120502","120503","120504","120505","120506","120507","120508","120509","120510","120511","120512","120513","120514","120515","120516","120517","120518","120519","120520","120521","120522","120523","120524","120525","120526","120527","120528","120529","120530","120531","120532","120533","120534","120535","120536","120537","120538","120539","120540","120541","120542","120543","120544","120545","120546","120547","120548","120549","120550","120551","120552","120553","120554","120555","120556","120557","120558","120559","120560","120561","120562","120563","120564","120565","120566","120567","120568","120569","120570","120571","120572","120573","120574","120575","55040","120576","120577","120578","120579","120580","120581","120582","120583","120584","120585","120586","120587","120588","120589","120590","120591","120592","120593","120594","120595","120596","120597","120598","120599","120600","120601","120602","120603","120604","120605","120606","120607","120608","120609","120610","120611","120612","120613","120614","120615","120616","120617","120618","120619","120620","120621","120622","120623","120624","120625","120626","120627","120628","120629","120630","120631","120632","120633","120634","120635","120636","120637","120638","120639","120640","120641","120642","120643","120644","120645","120646","120647","120648","120649","120650","120651","120652","120653","120654","120655","120656","120657","120658","120659","120660","120661","120662","120663","120664","120665","120666","120667","120668","120669","120670","120671","120672","120673","120674","120675","120676","120677","120678","120679","120680","120681","120682","120683","120684","120685","120686","120687","120688","120689","120690","120691","120692","120693","120694","120695","120696","120697","120698","120699","120700","120701","120702","120703","120704","120705","120706","120707","120708","120709","120710","120711","120712","120713","120714","120715","120716","120717","120718","120719","120720","120721","120722","120723","120724","120725","120726","120727","120728","120729","120730","120731","120732","120733","120734","120735","120736","120737","120738","120739","120740","120741","120742","120743","120744","120745","120746","120747","120748","120749","120750","120751","120752","120753","120754","120755","120756","120757","120758","120759","120760","120761","120762","120763","120764","120765","120766","120767","120768","120769","120770","120771","120772","120773","120774","120775","120776","120777","120778","120779","120782","120783","120784","120785","120786","120787","120788","120789","120790","120791","120792","120793","120794","120795","120796","120797","120798","120799","120800","120801","120802","120803","120804","120805","120806","120807","120808","120809","120810","120811","120812","120813","120814","120815","120816","120817","120818","120819","120820","120821","120822","120823","120824","120825","120826","120827","120828","120829","120830","120831","59392","125136","125137","125138","125139","125140","125141","125142","60928","126464","126465","126466","126467","126469","126470","126471","126472","126473","126474","126475","126476","126477","126478","126479","126480","126481","126482","126483","126484","126485","126486","126487","126488","126489","126490","126491","126492","126493","126494","126495","126497","126498","126500","126503","126505","126506","126507","126508","126509","126510","126511","126512","126513","126514","126516","126517","126518","126519","126521","126523","126530","126535","126537","126539","126541","126542","126543","126545","126546","126548","126551","126553","126555","126557","126559","126561","126562","126564","126567","126568","126569","126570","126572","126573","126574","126575","126576","126577","126578","126580","126581","126582","126583","126585","126586","126587","126588","126590","126592","126593","126594","126595","126596","126597","126598","126599","126600","126601","126603","126604","126605","126606","126607","126608","126609","126610","126611","126612","126613","126614","126615","126616","126617","126618","126619","126625","126626","126627","126629","126630","126631","126632","126633","126635","126636","126637","126638","126639","126640","126641","126642","126643","126644","126645","126646","126647","126648","126649","126650","126651","61696","127232","127233","127234","127235","127236","127237","127238","127239","127240","127241","127242","127248","127249","127250","127251","127252","127253","127254","127255","127256","127257","127258","127259","127260","127261","127262","127263","127264","127265","127266","127267","127268","127269","127270","127271","127272","127273","127274","127275","127276","127277","127278","127280","127281","127282","127283","127284","127285","127286","127287","127288","127289","127290","127291","127292","127293","127294","127295","127296","127297","127298","127299","127300","127301","127302","127303","127304","127305","127306","127307","127308","127309","127310","127311","127338","127339","127376","61952","127488","127489","127490","127504","127505","127506","127507","127508","127509","127510","127511","127512","127513","127514","127515","127516","127517","127518","127519","127520","127521","127522","127523","127524","127525","127526","127527","127528","127529","127530","127531","127532","127533","127534","127535","127536","127537","127538","127539","127540","127541","127542","127543","127544","127545","127546","127552","127553","127554","127555","127556","127557","127558","127559","127560","127568","127569","63488","194560","194561","194562","194563","194564","194565","194566","194567","194568","194569","194570","194571","194572","194573","194574","194575","194576","194577","194578","194579","194580","194581","194582","194583","194584","194585","194586","194587","194588","194589","194590","194591","194592","194593","194594","194595","194596","194597","194598","194599","194600","194601","194602","194603","194604","194605","194606","194607","194608","194609","194610","194611","194612","194613","194614","194615","194616","194617","194618","194619","194620","194621","194622","194623","194624","194625","194626","194627","194628","194629","194630","194631","194632","194633","194634","194635","194636","194637","194638","194639","194640","194641","194642","194643","194644","194645","194646","194647","194648","194649","194650","194651","194652","194653","194654","194655","194656","194657","194658","194659","194660","194661","194662","194663","194664","194665","194666","194667","194668","194669","194670","194671","194672","194673","194674","194675","194676","194677","194678","194679","194680","194681","194682","194683","194684","194685","194686","194687","194688","194689","194690","194691","194692","194693","194694","194695","194696","194697","194698","194699","194700","194701","194702","194703","194704","194705","194706","194707","194708","194709","194710","194711","194712","194713","194714","194715","194716","194717","194718","194719","194720","194721","194722","194723","194724","194725","194726","194727","194728","194729","194730","194731","194732","194733","194734","194735","194736","194737","194738","194739","194740","194741","194742","194743","194744","194745","194746","194747","194748","194749","194750","194751","194752","194753","194754","194755","194756","194757","194758","194759","194760","194761","194762","194763","194764","194765","194766","194767","194768","194769","194770","194771","194772","194773","194774","194775","194776","194777","194778","194779","194780","194781","194782","194783","194784","194785","194786","194787","194788","194789","194790","194791","194792","194793","194794","194795","194796","194797","194798","194799","194800","194801","194802","194803","194804","194805","194806","194807","194808","194809","194810","194811","194812","194813","194814","194815","63744","63745","63746","63747","63748","63749","63750","63751","63752","63753","63754","63755","63756","63757","63758","63759","63760","63761","63762","63763","63764","63765","63766","63767","63768","63769","63770","63771","63772","63773","63774","63775","63776","63777","63778","63779","63780","63781","63782","63783","63784","63785","63786","63787","63788","63789","63790","63791","63792","63793","63794","63795","63796","63797","63798","63799","63800","63801","63802","63803","63804","63805","63806","63807","63808","63809","63810","63811","63812","63813","63814","63815","63816","63817","63818","63819","63820","63821","63822","63823","63824","63825","63826","63827","63828","63829","63830","63831","63832","63833","63834","63835","63836","63837","63838","63839","63840","63841","63842","63843","63844","63845","63846","63847","63848","63849","63850","63851","63852","63853","63854","63855","63856","63857","63858","63859","63860","63861","63862","63863","63864","63865","63866","63867","63868","63869","63870","63871","63872","63873","63874","63875","63876","63877","63878","63879","63880","63881","63882","63883","63884","63885","63886","63887","63888","63889","63890","63891","63892","63893","63894","63895","63896","63897","63898","63899","63900","63901","63902","63903","63904","63905","63906","63907","63908","63909","63910","63911","63912","63913","63914","63915","63916","63917","63918","63919","63920","63921","63922","63923","63924","63925","63926","63927","63928","63929","63930","63931","63932","63933","63934","63935","63936","63937","63938","63939","63940","63941","63942","63943","63944","63945","63946","63947","63948","63949","63950","63951","63952","63953","63954","63955","63956","63957","63958","63959","63960","63961","63962","63963","63964","63965","63966","63967","63968","63969","63970","63971","63972","63973","63974","63975","63976","63977","63978","63979","63980","63981","63982","63983","63984","63985","63986","63987","63988","63989","63990","63991","63992","63993","63994","63995","63996","63997","63998","63999","194816","194817","194818","194819","194820","194821","194822","194823","194824","194825","194826","194827","194828","194829","194830","194831","194832","194833","194834","194835","194836","194837","194838","194839","194840","194841","194842","194843","194844","194845","194846","194847","194848","194849","194850","194851","194852","194853","194854","194855","194856","194857","194858","194859","194860","194861","194862","194863","194864","194865","194866","194867","194868","194869","194870","194871","194872","194873","194874","194875","194876","194877","194878","194879","194880","194881","194882","194883","194884","194885","194886","194887","194888","194889","194890","194891","194892","194893","194894","194895","194896","194897","194898","194899","194900","194901","194902","194903","194904","194905","194906","194907","194908","194909","194910","194911","194912","194913","194914","194915","194916","194917","194918","194919","194920","194921","194922","194923","194924","194925","194926","194927","194928","194929","194930","194931","194932","194933","194934","194935","194936","194937","194938","194939","194940","194941","194942","194943","194944","194945","194946","194947","194948","194949","194950","194951","194952","194953","194954","194955","194956","194957","194958","194959","194960","194961","194962","194963","194964","194965","194966","194967","194968","194969","194970","194971","194972","194973","194974","194975","194976","194977","194978","194979","194980","194981","194982","194983","194984","194985","194986","194987","194988","194989","194990","194991","194992","194993","194994","194995","194996","194997","194998","194999","195000","195001","195002","195003","195004","195005","195006","195007","195008","195009","195010","195011","195012","195013","195014","195015","195016","195017","195018","195019","195020","195021","195022","195023","195024","195025","195026","195027","195028","195029","195030","195031","195032","195033","195034","195035","195036","195037","195038","195039","195040","195041","195042","195043","195044","195045","195046","195047","195048","195049","195050","195051","195052","195053","195054","195055","195056","195057","195058","195059","195060","195061","195062","195063","195064","195065","195066","195067","195068","195069","195070","195071","64000","64001","64002","64003","64004","64005","64006","64007","64008","64009","64010","64011","64012","64013","64016","64018","64021","64022","64023","64024","64025","64026","64027","64028","64029","64030","64032","64034","64037","64038","64042","64043","64044","64045","64046","64047","64048","64049","64050","64051","64052","64053","64054","64055","64056","64057","64058","64059","64060","64061","64062","64063","64064","64065","64066","64067","64068","64069","64070","64071","64072","64073","64074","64075","64076","64077","64078","64079","64080","64081","64082","64083","64084","64085","64086","64087","64088","64089","64090","64091","64092","64093","64094","64095","64096","64097","64098","64099","64100","64101","64102","64103","64104","64105","64106","64107","64108","64109","64112","64113","64114","64115","64116","64117","64118","64119","64120","64121","64122","64123","64124","64125","64126","64127","64128","64129","64130","64131","64132","64133","64134","64135","64136","64137","64138","64139","64140","64141","64142","64143","64144","64145","64146","64147","64148","64149","64150","64151","64152","64153","64154","64155","64156","64157","64158","64159","64160","64161","64162","64163","64164","64165","64166","64167","64168","64169","64170","64171","64172","64173","64174","64175","64176","64177","64178","64179","64180","64181","64182","64183","64184","64185","64186","64187","64188","64189","64190","64191","64192","64193","64194","64195","64196","64197","64198","64199","64200","64201","64202","64203","64204","64205","64206","64207","64208","64209","64210","64211","64212","64213","64214","64215","64216","64217","195072","195073","195074","195075","195076","195077","195078","195079","195080","195081","195082","195083","195084","195085","195086","195087","195088","195089","195090","195091","195092","195093","195094","195095","195096","195097","195098","195099","195100","195101","64256","64257","64258","64259","64260","64261","64262","64275","64276","64277","64278","64279","64285","64286","64287","64288","64289","64290","64291","64292","64293","64294","64295","64296","64297","64298","64299","64300","64301","64302","64303","64304","64305","64306","64307","64308","64309","64310","64312","64313","64314","64315","64316","64318","64320","64321","64323","64324","64326","64327","64328","64329","64330","64331","64332","64333","64334","64335","64336","64337","64338","64339","64340","64341","64342","64343","64344","64345","64346","64347","64348","64349","64350","64351","64352","64353","64354","64355","64356","64357","64358","64359","64360","64361","64362","64363","64364","64365","64366","64367","64368","64369","64370","64371","64372","64373","64374","64375","64376","64377","64378","64379","64380","64381","64382","64383","64384","64385","64386","64387","64388","64389","64390","64391","64392","64393","64394","64395","64396","64397","64398","64399","64400","64401","64402","64403","64404","64405","64406","64407","64408","64409","64410","64411","64412","64413","64414","64415","64416","64417","64418","64419","64420","64421","64422","64423","64424","64425","64426","64427","64428","64429","64430","64431","64432","64433","64467","64468","64469","64470","64471","64472","64473","64474","64475","64476","64477","64478","64479","64480","64481","64482","64483","64484","64485","64486","64487","64488","64489","64490","64491","64492","64493","64494","64495","64496","64497","64498","64499","64500","64501","64502","64503","64504","64505","64506","64507","64508","64509","64510","64511","64512","64513","64514","64515","64516","64517","64518","64519","64520","64521","64522","64523","64524","64525","64526","64527","64528","64529","64530","64531","64532","64533","64534","64535","64536","64537","64538","64539","64540","64541","64542","64543","64544","64545","64546","64547","64548","64549","64550","64551","64552","64553","64554","64555","64556","64557","64558","64559","64560","64561","64562","64563","64564","64565","64566","64567","64568","64569","64570","64571","64572","64573","64574","64575","64576","64577","64578","64579","64580","64581","64582","64583","64584","64585","64586","64587","64588","64589","64590","64591","64592","64593","64594","64595","64596","64597","64598","64599","64600","64601","64602","64603","64604","64605","64606","64607","64608","64609","64610","64611","64612","64613","64614","64615","64616","64617","64618","64619","64620","64621","64622","64623","64624","64625","64626","64627","64628","64629","64630","64631","64632","64633","64634","64635","64636","64637","64638","64639","64640","64641","64642","64643","64644","64645","64646","64647","64648","64649","64650","64651","64652","64653","64654","64655","64656","64657","64658","64659","64660","64661","64662","64663","64664","64665","64666","64667","64668","64669","64670","64671","64672","64673","64674","64675","64676","64677","64678","64679","64680","64681","64682","64683","64684","64685","64686","64687","64688","64689","64690","64691","64692","64693","64694","64695","64696","64697","64698","64699","64700","64701","64702","64703","64704","64705","64706","64707","64708","64709","64710","64711","64712","64713","64714","64715","64716","64717","64718","64719","64720","64721","64722","64723","64724","64725","64726","64727","64728","64729","64730","64731","64732","64733","64734","64735","64736","64737","64738","64739","64740","64741","64742","64743","64744","64745","64746","64747","64748","64749","64750","64751","64752","64753","64754","64755","64756","64757","64758","64759","64760","64761","64762","64763","64764","64765","64766","64767","64768","64769","64770","64771","64772","64773","64774","64775","64776","64777","64778","64779","64780","64781","64782","64783","64784","64785","64786","64787","64788","64789","64790","64791","64792","64793","64794","64795","64796","64797","64798","64799","64800","64801","64802","64803","64804","64805","64806","64807","64808","64809","64810","64811","64812","64813","64814","64815","64816","64817","64818","64819","64820","64821","64822","64823","64824","64825","64826","64827","64828","64829","64848","64849","64850","64851","64852","64853","64854","64855","64856","64857","64858","64859","64860","64861","64862","64863","64864","64865","64866","64867","64868","64869","64870","64871","64872","64873","64874","64875","64876","64877","64878","64879","64880","64881","64882","64883","64884","64885","64886","64887","64888","64889","64890","64891","64892","64893","64894","64895","64896","64897","64898","64899","64900","64901","64902","64903","64904","64905","64906","64907","64908","64909","64910","64911","64914","64915","64916","64917","64918","64919","64920","64921","64922","64923","64924","64925","64926","64927","64928","64929","64930","64931","64932","64933","64934","64935","64936","64937","64938","64939","64940","64941","64942","64943","64944","64945","64946","64947","64948","64949","64950","64951","64952","64953","64954","64955","64956","64957","64958","64959","64960","64961","64962","64963","64964","64965","64966","64967","65008","65009","65010","65011","65012","65013","65014","65015","65016","65017","65018","65019","65020","65024","65040","65041","65042","65043","65044","65045","65046","65047","65048","65049","65056","65057","65058","65059","65060","65061","65062","65063","65064","65065","65066","65067","65068","65069","65072","65073","65074","65075","65076","65077","65078","65079","65080","65081","65082","65083","65084","65085","65086","65087","65088","65089","65090","65091","65092","65095","65096","65097","65098","65099","65100","65101","65102","65103","65104","65105","65106","65108","65109","65110","65111","65112","65113","65114","65115","65116","65117","65118","65119","65120","65121","65122","65123","65124","65125","65126","65128","65129","65130","65131","65136","65137","65138","65140","65142","65143","65144","65145","65146","65147","65148","65149","65150","65151","65152","65153","65154","65155","65156","65157","65158","65159","65160","65161","65162","65163","65164","65165","65166","65167","65168","65169","65170","65171","65172","65173","65174","65175","65176","65177","65178","65179","65180","65181","65182","65183","65184","65185","65186","65187","65188","65189","65190","65191","65192","65193","65194","65195","65196","65197","65198","65199","65200","65201","65202","65203","65204","65205","65206","65207","65208","65209","65210","65211","65212","65213","65214","65215","65216","65217","65218","65219","65220","65221","65222","65223","65224","65225","65226","65227","65228","65229","65230","65231","65232","65233","65234","65235","65236","65237","65238","65239","65240","65241","65242","65243","65244","65245","65246","65247","65248","65249","65250","65251","65252","65253","65254","65255","65256","65257","65258","65259","65260","65261","65262","65263","65264","65265","65266","65267","65268","65269","65270","65271","65272","65273","65274","65275","65276","65280","65281","65282","65283","65284","65285","65286","65287","65288","65289","65290","65291","65292","65293","65294","65295","65296","65297","65298","65299","65300","65301","65302","65303","65304","65305","65306","65307","65308","65309","65310","65311","65312","65313","65314","65315","65316","65317","65318","65319","65320","65321","65322","65323","65324","65325","65326","65327","65328","65329","65330","65331","65332","65333","65334","65335","65336","65337","65338","65339","65340","65341","65342","65343","65344","65345","65346","65347","65348","65349","65350","65351","65352","65353","65354","65355","65356","65357","65358","65359","65360","65361","65362","65363","65364","65365","65366","65367","65368","65369","65370","65371","65372","65373","65374","65375","65376","65377","65378","65379","65380","65381","65382","65383","65384","65385","65386","65387","65388","65389","65390","65391","65392","65393","65394","65395","65396","65397","65398","65399","65400","65401","65402","65403","65404","65405","65406","65407","65408","65409","65410","65411","65412","65413","65414","65415","65416","65417","65418","65419","65420","65421","65422","65423","65424","65425","65426","65427","65428","65429","65430","65431","65432","65433","65434","65435","65436","65437","65438","65439","65440","65441","65442","65443","65444","65445","65446","65447","65448","65449","65450","65451","65452","65453","65454","65455","65456","65457","65458","65459","65460","65461","65462","65463","65464","65465","65466","65467","65468","65469","65470","65474","65475","65476","65477","65478","65479","65482","65483","65484","65485","65486","65487","65490","65491","65492","65493","65494","65495","65498","65499","65500","65504","65505","65506","65507","65508","65509","65510","65512","65513","65514","65515","65516","65517","65518","unorm","shimApplied","form","Z","that","un","documentElement","propertyIsEnumerable","L","ArrayProto","_default","_interopRequireDefault","_uslug","_token","_typeof","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","arr2","_objectSpread","sym","_defineProperty","TOC","TOC_RE","markdownItSecondInstance","headingIds","tocHtml","repeat","makeSafe","slugifyFn","space","renderAnchorLinkSymbol","anchorLinkSymbolClassName","anchorLinkSymbol","renderAnchorLink","anchor","anchorClassName","openLinkToken","closeLinkToken","wrapHeadingTextInAnchor","_tokens$children","linkTokens","actionOnArray","false","true","anchorLinkSpace","anchorLinkBefore","treeToMarkdownBulletList","indent","indentation","heading","contentWithoutAnchor","generateTocMarkdownFromArray","headings","tocFirstLevel","tocLastLevel","lastItem","toc","tocClassName","tocCallback","anchorLink","resetIds","tocArray","tocMarkdown","tocTokens","slugify","heading_close","_tocAnchor","reduce","acc","anchorLinkPrefix","substr","after","originalHeadingOpen","heading_open","_len","_key","renderToken","_len2","_key2","toc_open","toc_close","toc_body","emojies_defs","emojies_shortcuts","emoji_html","emoji_replace","normalize_opts","defaults","defs","shortcuts","enabled","emoji","scanRE","replaceRE","IObject","quoteRE","emojies","alias","names","reverse","ObjectProto","ceil","installedModules","moduleId","r","SourceLocation","lexer","range","first","second","loc","Token_Token","_proto","endToken","ParseError","message","position","right","underlined","src_ParseError","contains","elem","deflt","setting","defaultIfUndefined","uppercase","ESCAPE_LOOKUP","'","ESCAPE_REGEX","utils_escape","getBaseElem","group","utils_isCharacterBox","baseElem","assert","escape","isCharacterBox","Settings_Settings","Settings","displayMode","leqno","fleqn","throwOnError","errorColor","macros","colorIsTextColor","strict","maxSize","maxExpand","allowedProtocols","reportNonstrict","errorCode","errorMsg","useStrictBehavior","src_Settings","Style","size","cramped","sup","Style_styles","_sup","_sub","fracNum","_fracNum","fracDen","_fracDen","cramp","_cramp","_text","isTight","D","Dc","Tc","Sc","SS","SSc","src_Style","DISPLAY","TEXT","SCRIPT","SCRIPTSCRIPT","scriptData","blocks","scriptFromCodepoint","script","allBlocks","supportedCodepoint","hLinePad","svgGeometry_path","sqrtMain","sqrtSize1","sqrtSize2","sqrtSize3","sqrtSize4","doubleleftarrow","doublerightarrow","leftarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondown","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","oiintSize1","oiintSize2","oiiintSize1","oiiintSize2","rightarrow","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondown","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","twoheadleftarrow","twoheadrightarrow","tilde1","tilde2","tilde3","tilde4","vec","widehat1","widehat2","widehat3","widehat4","widecheck1","widecheck2","widecheck3","widecheck4","baraboveleftarrow","rightarrowabovebar","baraboveshortleftharpoon","rightharpoonaboveshortbar","shortbaraboveleftharpoon","shortrightharpoonabovebar","svgGeometry","tree_DocumentFragment","DocumentFragment","classes","height","maxFontSize","hasClass","className","toNode","frag","createDocumentFragment","toMarkup","toText","createClass","initNode","attributes","color","getColor","_toNode","_toMarkup","domTree_Span","Span","width","attribute","domTree_Anchor","Anchor","href","_proto2","iCombinations","î","ï","í","ì","domTree_SymbolNode","SymbolNode","italic","_proto3","span","marginRight","needsSpan","SvgNode","_proto4","svgNS","domTree_PathNode","PathNode","pathName","alternate","_proto5","LineNode","_proto6","assertSymbolDomNode","assertSpan","fontMetricsData","AMS-Regular","81","165","174","240","295","710","989","8245","8487","8498","8513","8606","8608","8610","8611","8619","8620","8621","8624","8625","8630","8631","8634","8635","8638","8639","8642","8643","8644","8646","8647","8648","8649","8650","8651","8652","8666","8667","8669","8672","8674","8705","8709","8717","8722","8724","8726","8733","8736","8737","8738","8756","8757","8765","8770","8774","8778","8782","8783","8785","8786","8787","8790","8791","8796","8806","8807","8808","8809","8812","8830","8831","8842","8843","8847","8848","8858","8859","8861","8862","8863","8864","8865","8874","8888","8890","8891","8892","8901","8903","8905","8906","8907","8908","8909","8910","8911","8912","8913","8914","8915","8916","8918","8919","8920","8921","8922","8923","8926","8927","8934","8935","8936","8937","8994","8995","9484","9488","9492","9496","9585","9586","9632","9633","9650","9651","9654","9660","9661","9664","9674","9733","10003","10016","10731","10846","10877","10878","10885","10886","10887","10888","10889","10890","10891","10892","10901","10902","10933","10934","10935","10936","10937","10938","10949","10950","10955","10956","57350","57351","57352","57353","57356","57357","57358","57359","57360","57361","57366","57367","57368","57369","57370","57371","Caligraphic-Regular","48","49","50","51","52","53","54","55","56","57","Fraktur-Regular","33","34","38","39","40","41","42","43","44","45","46","47","58","59","63","91","93","94","113","8216","8217","58112","58113","58114","58115","58116","58117","58118","58119","Main-Bold","35","36","37","64","92","95","123","124","125","126","172","176","177","215","223","247","305","338","339","567","711","713","714","715","915","916","920","923","926","928","931","934","936","8211","8212","8220","8221","8224","8225","8242","8472","8593","8595","8597","8598","8599","8600","8601","8636","8637","8640","8641","8657","8659","8661","8706","8711","8723","8725","8727","8728","8729","8730","8734","8743","8744","8745","8746","8747","8768","8810","8811","8846","8851","8852","8853","8854","8855","8856","8857","8867","8868","8869","8900","8902","8968","8969","8970","8971","9657","9667","9711","9824","9825","9826","9827","9837","9838","9839","10216","10217","10815","10927","10928","57376","Main-BoldItalic","163","Main-Italic","Main-Regular","32","167","182","8614","8617","8618","8784","8904","8942","8943","8945","9136","9137","10222","10223","10229","10230","10231","10232","10233","10234","10236","Math-BoldItalic","946","947","948","950","952","954","955","956","957","958","960","962","963","964","966","967","968","Math-Italic","Math-Regular","SansSerif-Bold","SansSerif-Italic","SansSerif-Regular","Script-Regular","Size1-Regular","8214","8719","8720","8721","8750","8896","8897","8898","8899","9168","10753","10754","10756","10758","Size2-Regular","Size3-Regular","Size4-Regular","9115","9116","9117","9118","9119","9120","9121","9122","9123","9124","9125","9126","9127","9128","9129","9130","9131","9132","9133","9143","57344","57345","57680","57681","57682","57683","Typewriter-Regular","96","127","9251","sigmasAndXis","slant","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","sqrtRuleThickness","ptPerEm","doubleRuleSep","extraCharacterMap","Å","Ç","Ð","Þ","å","ç","ð","þ","А","Б","В","Г","Д","Е","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","а","б","в","г","д","е","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","setFontMetrics","fontName","metrics","getCharacterMetrics","character","font","fontMetricsBySizeIndex","getGlobalMetrics","sizeIndex","cssEmPerMu","ATOMS","bin","inner","punct","rel","NON_ATOMS","accent-token","mathord","op-token","spacing","textord","src_symbols","defineSymbol","acceptUnicodeChar","symbols_math","symbols_text","main","ams","symbols_accent","symbols_close","symbols_inner","op","symbols_open","symbols_textord","ligatures","--","---","``","''","mathTextSymbols","symbols_i","symbols_ch","textSymbols","src_symbols_i","_ch","letters","symbols_i2","_ch2","symbols_wideChar","_i3","_ch3","_i4","_ch4","extraLatin","_i5","_ch5","wideLatinLetterData","wideNumeralData","wide_character_wideCharacterFont","wideChar","H","sizeStyleMap","sizeMultipliers","sizeAtStyle","Options_Options","Options","textSize","phantom","fontFamily","fontWeight","fontShape","sizeMultiplier","_fontMetrics","BASESIZE","extension","havingStyle","havingCrampedStyle","havingSize","havingBaseStyle","wantSize","havingBaseSizing","withColor","withPhantom","withFont","withTextFontFamily","withTextFontWeight","withTextFontShape","sizingClasses","oldOptions","baseSizingClasses","fontMetrics","colorMap","katex-blue","katex-orange","katex-pink","katex-red","katex-green","katex-gray","katex-purple","katex-blueA","katex-blueB","katex-blueC","katex-blueD","katex-blueE","katex-tealA","katex-tealB","katex-tealC","katex-tealD","katex-tealE","katex-greenA","katex-greenB","katex-greenC","katex-greenD","katex-greenE","katex-goldA","katex-goldB","katex-goldC","katex-goldD","katex-goldE","katex-redA","katex-redB","katex-redC","katex-redD","katex-redE","katex-maroonA","katex-maroonB","katex-maroonC","katex-maroonD","katex-maroonE","katex-purpleA","katex-purpleB","katex-purpleC","katex-purpleD","katex-purpleE","katex-mintA","katex-mintB","katex-mintC","katex-grayA","katex-grayB","katex-grayC","katex-grayD","katex-grayE","katex-grayF","katex-grayG","katex-grayH","katex-grayI","katex-kaBlue","katex-kaGreen","src_Options","ptPerUnit","pt","mm","cm","in","bp","pc","dd","nd","nc","sp","px","relativeUnit","ex","em","mu","validUnit","unit","units_calculateSize","sizeValue","scale","unitOptions","mathitLetters","buildCommon_lookupSymbol","buildCommon_makeSymbol","symbolNode","buildCommon_mathsym","buildCommon_mathdefault","fontClass","buildCommon_mathnormal","boldsymbol","buildCommon_makeOrd","isFont","fontOrFamily","_wideCharacterFont","wideFontName","wideFontClass","fontClasses","fontData","fontMap","retrieveTextFontName","buildCommon_makeFragment","fontLookup","_fontName","_fontName3","_fontName2","buildCommon_canCombine","prev","_style","buildCommon_tryCombineChars","chars","sizeElementFromChildren","buildCommon_makeSpan","buildCommon_makeSvgSpan","makeLineSpan","thickness","borderBottomWidth","buildCommon_makeAnchor","fragment","buildCommon_wrapFragment","getVListChildrenAndDepth","positionType","oldChildren","_depth","currPos","diff","bottom","positionData","buildCommon_makeVList","_getVListChildrenAndD","pstrutSize","pstrut","realChildren","minPos","maxPos","_i2","_child","_elem","wrapperClasses","wrapperStyle","childWrap","marginLeft","rows","vlist","emptySpan","depthStrut","topStrut","vtable","buildCommon_makeGlue","measurement","rule","fontStylesName","baseFontName","mathbf","variant","mathrm","textit","mathit","mathbb","mathcal","mathfrak","mathscr","mathsf","mathtt","svgData","buildCommon_staticSvg","_svgData$value","svgNode","viewBox","preserveAspectRatio","buildCommon","makeSymbol","mathsym","makeSpan","makeSvgSpan","makeAnchor","makeFragment","wrapFragment","makeVList","makeOrd","makeGlue","staticSvg","tryCombineChars","assertNodeType","typedNode","checkNodeType","assertAtomFamily","family","checkAtomFamily","assertSymbolNodeType","checkSymbolNodeType","thinspace","mediumspace","thickspace","spacings","mord","mop","mbin","mrel","minner","mopen","mclose","mpunct","tightSpacings","_functions","_htmlGroupBuilders","_mathmlGroupBuilders","defineFunction","_ref","htmlBuilder","mathmlBuilder","numArgs","argTypes","greediness","allowedInText","allowedInMath","numOptionalArgs","infix","consumeMode","defineFunctionBuilders","_ref2","defineFunction_ordargument","buildHTML_makeSpan","binLeftCanceller","binRightCanceller","buildHTML_styleMap","scriptscript","DomEnum","buildHTML_buildExpression","isRealGroup","surrounding","groups","buildHTML_buildGroup","glueOptions","dummyPrev","dummyNext","traverseNonSpaceNodes","prevType","getTypeOfDomTree","partialGroup","buildHTML_checkPartialGroup","insertAfter","getOutermostNode","side","makeNullDelimiter","moreClasses","baseOptions","groupNode","multiplier","buildHTMLUnbreakable","strut","verticalAlign","buildHTML","tagChild","nobreak","htmlNode","newDocumentFragment","mathMLTree_MathNode","MathNode","mathMLTree_TextNode","TextNode","SpaceNode","mathMLTree","buildMathML_makeText","buildMathML_makeRow","buildMathML_getVariant","buildMathML_buildExpression","lastGroup","buildMathML_buildGroup","_lastGroup$children","_lastGroup$children2","_lastGroup$children3","buildExpressionRow","buildMathML","texExpression","wrapper","annotation","semantics","buildTree_optionsFromSettings","settings","buildTree_displayWrap","buildTree_buildTree","mathMLNode","katexNode","buildTree_buildHTMLTree","stretchyCodePoint","widehat","widecheck","widetilde","utilde","overleftarrow","underleftarrow","xleftarrow","overrightarrow","underrightarrow","xrightarrow","underbrace","overbrace","overleftrightarrow","underleftrightarrow","xleftrightarrow","Overrightarrow","xRightarrow","overleftharpoon","xleftharpoonup","overrightharpoon","xrightharpoonup","xLeftarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xmapsto","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xleftrightharpoons","xtwoheadleftarrow","xtwoheadrightarrow","xlongequal","xtofrom","xrightleftarrows","xrightequilibrium","xleftequilibrium","stretchy_mathMLnode","label","katexImagesData","overlinesegment","underlinesegment","overgroup","undergroup","groupLength","stretchy_svgSpan","buildSvgSpan_","viewBoxWidth","viewBoxHeight","_height","grp","numChars","imgIndex","minWidth","widthClasses","aligns","spans","paths","_minWidth","_viewBoxHeight","_height2","numSvgChildren","align1","_path","_svgNode","_span","_buildSvgSpan_","stretchy_encloseSpan","pad","img","totalHeight","borderColor","lines","x1","y1","x2","y2","stroke-width","stretchy","encloseSpan","mathMLnode","svgSpan","accent_htmlBuilder","supSubGroup","supSub","mustShift","isShifty","baseChar","baseGroup","accentBody","clearance","isStretchy","accent","accentFull","accentWrap","accent_mathmlBuilder","accentNode","NON_STRETCHY_ACCENT_REGEX","funcName","parser","innerGroup","kern","optArgs","below","lowerGroup","newOptions","upperGroup","arrowBody","arrowShift","upperShift","lowerShift","lowerNode","arrowNode","upperNode","color_htmlBuilder","elements","color_mathmlBuilder","_ref3","breakOnTokenText","parseExpression","newRow","newLine","marginTop","delimiter_getMetrics","delimiter_styleWrap","delim","toStyle","delimSizeMultiplier","centerSpan","delimiter_makeSmallDelim","center","delimiter_mathrmSize","delimiter_makeLargeDelim","delimiter_makeInner","sizeClass","delimiter_makeStackedDelim","heightTotal","middle","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","realHeightTotal","inners","vbPad","emPad","delimiter_sqrtSvg","sqrtName","vertSegment","pathNode","makeSqrtImage","advanceWidth","traverseSequence","stackLargeDelimiterSequence","spanHeight","texHeight","sizeToMaxHeight","ruleWidth","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","delimiter_makeSizedDelim","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","delimTypeToFont","sequence","heightDepth","delimiter_makeCustomSizedDelim","delimType","makeLeftRightDelim","delimiterFactor","delimiterExtend","maxDistFromAxis","sqrtImage","sizedDelim","customSizedDelim","leftRightDelim","delimiterSizes","\\bigl","mclass","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg","checkDelimiter","symDelim","assertParsed","leftrightDepth","parseFunction","leftDelim","rightDelim","innerHeight","innerDepth","hadMiddle","isMiddle","middleDelim","leftNode","rightNode","middleNode","enclose_htmlBuilder","imgShift","isSingleChar","vertPad","backgroundColor","enclose_mathmlBuilder","_ref4","_environments","defineEnvironment","getHLines","hlineInfo","consumeSpaces","nxt","nextToken","consume","parseArray","hskipBeforeAndAfter","addJot","cols","arraystretch","gullet","beginGroup","expandMacroAsText","row","rowGaps","hLinesBeforeRow","cell","cr","endGroup","dCellStyle","envName","array_htmlBuilder","nr","hlines","arraycolsep","baselineskip","jot","arrayskip","arstrutHeight","arstrutDepth","setHLinePos","hlinesInGap","isDashed","inrow","outrow","elt","rowGap","gap","colSep","colDescrNum","offset","colDescriptions","colDescr","firstSeparator","separator","_separator","sepwidth","pregap","col","align","postgap","dashes","vListElems","hline","lineShift","array_mathmlBuilder","array_alignedHandler","numMaths","numCols","emptyGroup","ordgroup","arg0","isAligned","styling","_ordgroup","curMaths","symNode","colalign","nde","ca","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","payload","environments","src_environments","nameGroup","_parser$parseArgument","parseArguments","_args","endNameToken","mclass_makeSpan","mclass_htmlBuilder","mclass_mathmlBuilder","binrelClass","atom","baseArg","shiftedArg","baseOp","limits","alwaysHandleSupSub","suppressBaseShift","supsub","font_htmlBuilder","font_mathmlBuilder","fontAliases","\\Bbb","\\bold","\\frak","\\bm","func","genfrac_htmlBuilder","nstyle","dstyle","numerm","numer","continued","hStrut","dStrut","ruleSpacing","numShift","denomShift","frac","delimSize","denomm","denom","hasBarLine","barSize","midShift","candidateClearance","genfrac_mathmlBuilder","withDelims","leftOp","rightOp","replaceWith","stylArray","delimFromValue","delimString","barNode","isBlank","styl","textOrd","_ref5","horizBrace_htmlBuilder","braceBody","isOver","vSpan","horizBrace_mathmlBuilder","mathml","mathFunction","muUnit","dimension","alignment","fix","outerMode","switchMode","mathchoice_chooseMathStyle","op_htmlBuilder","supGroup","subGroup","hasLimits","noSuccessor","large","stash","oval","baseShift","finalGroup","_bottom","op_mathmlBuilder","operator","singleCharBigOps","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆","fName","singleCharIntegrals","∫","∬","∭","∮","∯","∰","sizingGroup","childText","isAllString","word","identifier","semisimple","sizeFuncs","sizing_htmlBuilder","amount","sizedText","borderRightWidth","borderTopWidth","smashHeight","smashDepth","tbArg","letter","smashedNode","theta","phi","lineClearance","minDelimiterHeight","_delimiter$sqrtImage","delimDepth","paddingLeft","rootm","toShift","rootVList","rootVListWrap","styling_styleMap","styleMap","styleAttributes","supsub_htmlBuilderDelegate","delegate","isSup","builderDelegate","supm","subm","minSupShift","valueBase","valueSup","valueSub","supShift","subShift","_newOptions","isOiint","maxWidth","psi","vlistElem","_vlistElem","isBrace","horizBrace","_base2","defaultVariant","mi","mn","mtext","cssSpace","\\nobreak","\\allowbreak","regularSpace"," ","\\ ","~","\\space","\\nobreakspace","ord","table","textFontFamilies","\\text","\\textrm","\\textsf","\\texttt","\\textnormal","textFontWeights","\\textbf","textFontShapes","\\textit","optionsWithFont","makeVerb","star","functions","src_functions","spaceRegexString","controlWordRegexString","controlSymbolRegexString","controlWordWhitespaceRegexString","controlWordWhitespaceRegex","combiningDiacriticalMarkString","combiningDiacriticalMarksEndRegex","tokenRegexString","Lexer_Lexer","Lexer","tokenRegex","catcodes","%","setCatcode","char","lex","nlIndex","controlMatch","Namespace_Namespace","Namespace","builtins","globalMacros","undefStack","undefs","undef","builtinMacros","defineMacro","consumeArgs","future","digitToNumber","1","2","3","4","5","6","7","8","9","A","E","popToken","macros_def","command","macros_newcommand","existsOK","nonexistsOK","exists","isDefined","argText","expandNextToken","dotsByToken",",","\\not","+","=","-","*",":","\\DOTSB","\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\And","\\longrightarrow","\\Longrightarrow","\\longleftarrow","\\Longleftarrow","\\longleftrightarrow","\\Longleftrightarrow","\\mapsto","\\longmapsto","\\hookrightarrow","\\doteq","\\mathbin","\\mathrel","\\relbar","\\Relbar","\\xrightarrow","\\xleftarrow","\\DOTSI","\\int","\\oint","\\iint","\\iiint","\\iiiint","\\idotsint","\\DOTSX","thedots","expandAfterFuture","spaceAfterDots",")","]","\\rbrack","\\}","\\rbrace","\\rangle","\\rceil","\\rfloor","\\rgroup","\\rmoustache","\\right","$",";",".","latexRaiseA","implicitCommands","\\relax","^","\\limits","\\nolimits","MacroExpander_MacroExpander","MacroExpander","expansionCount","stack","feed","newMode","pushToken","pushTokens","_this$stack","startOfArg","tok","expandOnce","topToken","expansion","_getExpansion","_tokens","expanded","expandMacro","oldStackLength","stripped","bodyLexer","unicodeAccents","́","̀","̈","̃","̄","̆","̌","̂","̇","̊","̋","unicodeSymbols","á","à","ä","ǟ","ã","ā","ă","ắ","ằ","ẵ","ǎ","â","ấ","ầ","ẫ","ȧ","ǡ","ǻ","ḃ","ć","č","ĉ","ċ","ď","ḋ","é","è","ë","ẽ","ē","ḗ","ḕ","ĕ","ě","ê","ế","ề","ễ","ė","ḟ","ǵ","ḡ","ğ","ǧ","ĝ","ġ","ḧ","ȟ","ĥ","ḣ","ḯ","ĩ","ī","ĭ","ǐ","ǰ","ĵ","ḱ","ǩ","ĺ","ľ","ḿ","ṁ","ń","ǹ","ñ","ň","ṅ","ó","ò","ö","ȫ","õ","ṍ","ṏ","ȭ","ō","ṓ","ṑ","ŏ","ǒ","ô","ố","ồ","ỗ","ȯ","ȱ","ő","ṕ","ṗ","ŕ","ř","ṙ","ś","ṥ","š","ṧ","ŝ","ṡ","ẗ","ť","ṫ","ú","ù","ü","ǘ","ǜ","ǖ","ǚ","ũ","ṹ","ū","ṻ","ŭ","ǔ","û","ů","ű","ṽ","ẃ","ẁ","ẅ","ŵ","ẇ","ẘ","ẍ","ẋ","ý","ỳ","ÿ","ỹ","ȳ","ŷ","ẏ","ẙ","ź","ž","ẑ","ż","Á","À","Ä","Ǟ","Ã","Ā","Ă","Ắ","Ằ","Ẵ","Ǎ","Â","Ấ","Ầ","Ẫ","Ȧ","Ǡ","Ǻ","Ḃ","Ć","Č","Ĉ","Ċ","Ď","Ḋ","É","È","Ë","Ẽ","Ē","Ḗ","Ḕ","Ĕ","Ě","Ê","Ế","Ề","Ễ","Ė","Ḟ","Ǵ","Ḡ","Ğ","Ǧ","Ĝ","Ġ","Ḧ","Ȟ","Ĥ","Ḣ","Í","Ì","Ï","Ḯ","Ĩ","Ī","Ĭ","Ǐ","Î","İ","Ĵ","Ḱ","Ǩ","Ĺ","Ľ","Ḿ","Ṁ","Ń","Ǹ","Ñ","Ň","Ṅ","Ó","Ò","Ö","Ȫ","Õ","Ṍ","Ṏ","Ȭ","Ō","Ṓ","Ṑ","Ŏ","Ǒ","Ô","Ố","Ồ","Ỗ","Ȯ","Ȱ","Ő","Ṕ","Ṗ","Ŕ","Ř","Ṙ","Ś","Ṥ","Š","Ṧ","Ŝ","Ṡ","Ť","Ṫ","Ú","Ù","Ü","Ǘ","Ǜ","Ǖ","Ǚ","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ǔ","Û","Ů","Ű","Ṽ","Ẃ","Ẁ","Ẅ","Ŵ","Ẇ","Ẍ","Ẋ","Ý","Ỳ","Ÿ","Ỹ","Ȳ","Ŷ","Ẏ","Ź","Ž","Ẑ","Ż","ά","ὰ","ᾱ","ᾰ","έ","ὲ","ή","ὴ","ί","ὶ","ϊ","ΐ","ῒ","ῑ","ῐ","ό","ὸ","ύ","ὺ","ϋ","ΰ","ῢ","ῡ","ῠ","ώ","ὼ","Ύ","Ὺ","Ϋ","Ῡ","Ῠ","Ώ","Ὼ","Parser_Parser","Parser","breakOnInfix","endOfExpression","parseAtom","formLigatures","handleInfixNodes","overIndex","numerNode","denomNode","_node","numerBody","denomBody","callFunction","handleSupSubscript","symbolToken","parseGroup","SUPSUB_GREEDINESS","handleUnsupportedCmd","textordArray","colorNode","superscript","subscript","opNode","prime","primes","funcData","oldMode","_this$parseArguments","totalArgs","baseGreediness","argType","isOptional","parseGroupOfType","optional","parseColorGroup","parseSizeGroup","parseUrlGroup","parseStringGroup","modeName","groupBegin","groupEnd","firstToken","lastToken","parseRegexGroup","regex","allowed","endOfGroup","parseSymbol","nucleus","substring","[","{","\\begingroup","parseTree_parseTree","toParse","src_parseTree","katex_render","baseNode","katex_renderToDomTree","compatMode","renderToString","katex_generateParseTree","katex_renderError","katex_renderToHTMLTree","katex_0","__parse","__renderToDomTree","__renderToHTMLTree","__setFontMetrics","__defineSymbol","__defineMacro","__domTree","pmax","slashes","auth","pathname","search","lineMax","stat","bitmap","Ruler","__rules__","__cache__","__find__","__compile__","chains","alt","altName","at","opt","beforeName","ruleName","afterName","chainName","ucm","ZPCc","Cc","splitTextToken","last_pos","emoji_name","blockTokens","autolinkLevel","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","step","iterFn","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","oldTShift","oldIndent","oldLIndent","oldTight","oldParentType","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","tight","parentType","tokenize","scanned","jump","postProcess","startDelim","endDelim","loneMarkers","NEWLINES_RE","NULL_RE","_rules","_rules2","skipToken","ok","SAFE_CLOSING","riter","skipClosing","OTHER_CHARS","UNICODE_SPACE_RE","abbr_def","title","labelStart","labelEnd","abbreviations","abbr_replace","reg","regText","regSimple","currentToken","createProperty","arrayLike","aLen","mapfn","mapping","UNESCAPE_RE","found","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","task","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","FakePromise","PromiseRejectionEvent","isThenable","isReject","reaction","exited","fail","domain","_h","onHandleUnhandled","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","G","W","capability","$$reject","all","remaining","$index","alreadyCalled","race","SHARED","copyright","shared","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","__e","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","DIGITAL_RE","NAMED_RE","own","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","block_names","HTML_SEQUENCES","lineText","random","webpackPolyfill","deprecate","IS_WRAP","virtual","N","TO_STRING_TAG","DOMIterables","Collection","ESCAPED","StateCore","gOPS","pIE","$assign","K","getSymbols","isEnum","is_array_default","is_iterable_default","from_default","hasEmptyLines","skipEmptyLines","__g","DESCRIPTORS","SPECIES","KEY","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","image","renderInlineAsText","hardbreak","softbreak","html_block","html_inline","needLf","getIterator","M","FProto","nameRE","macrotask","WebKitMutationObserver","head","flush","standalone","toggle","getLine","escapedSplit","escapes","lastPos","backTicked","lastBackTick","columns","columnCount","tableLines","tbodyLines","StateBlock","indent_found","ddIndent","begin","keepLastLF","lineIndent","lineStart","lastDelim","currDelim","IE8_DOM_DEFINE","toPrimitive","Attributes","condition","isError","View","routerView","route","$route","_routerViewCache","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encodeURIComponent","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","stringifyQuery","val2","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","_Vue","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","segment","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","defaultDelimiter","prefix","modifier","asterisk","partial","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","attachKeys","sensitive","regexpToRegexp","arrayToRegexp","regexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","compileRouteRegex","redirect","childMatchAs","aliases","aliasRoute","normalizeLocation","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","replaceState","getStateKey","origin","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","y","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","Time","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","flatten","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","decodeURI","HashHistory","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","decodeCache","getDecodeCache","defaultChars","seq","b1","b2","b3","b4","chr","componentChars","read","buffer","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","pow","rt","abs","log","LN2","references","isIterable","isLinkOpen","isLinkClose","ln","htmlLinkLevel","urlText","links","pretest","schema","emptyLines","UNSCOPABLES","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_11__","__WEBPACK_EXTERNAL_MODULE_12__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_14__","loaded","_getIterator2","_getIterator3","_keys","_keys2","_markdownIt","_markdownIt2","_markdownItEmoji","_markdownItEmoji2","_markdownItSub","_markdownItSub2","_markdownItSup","_markdownItSup2","_markdownItFootnote","_markdownItFootnote2","_markdownItDeflist","_markdownItDeflist2","_markdownItAbbr","_markdownItAbbr2","_markdownItIns","_markdownItIns2","_markdownItMark","_markdownItMark2","_markdownItTocAndAnchor","_markdownItTocAndAnchor2","_markdownItKatex","_markdownItKatex2","_markdownItTaskLists","_markdownItTaskLists2","template","sourceData","watches","tableClass","taskLists","tocId","tocClass","tocAnchorLink","tocAnchorClass","tocAnchorLinkSymbol","tocAnchorLinkSpace","tocAnchorLinkClass","anchorAttributes","prerender","postrender","htmlData","tocLastLevelComputed","_this","table_open","defaultLinkRenderer","link_open","aIndex","getElementById","outHtml","_this2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","PromiseCapability","$$resolve","katex","isValidDelim","prevChar","math_inline","math_block","firstLine","lastLine","katexInline","latex","inlineRenderer","katexBlock","blockRenderer","Core","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","blkIdx","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","base64","ieee754","typedArraySupport","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","encodingOrOffset","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","fromArrayLike","byteOffset","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","dst","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","replace_rare","promiseCapability","disableCheckboxes","useLabelWrapper","useLabelAfter","parentToken","targetLevel","isTodoItem","isInline","isParagraph","isListItem","startsWithTodoMarkdown","todoify","TokenConstructor","makeCheckbox","afterLabel","beginLabel","endLabel","checkbox","disabledAttr","for","labelAfter","mem","haveEndMarker","isLetter","lc","addToUnscopables","Arguments","encodeCache","getEncodeCache","keepEscaped","nextCode","isStrong","g","fails","Any","Cf","_endLine","destEndPos","destEndLineNo","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","javascript:","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","qm","disableNested","prevPos","_unicodeCategory","allowedChars","lower","spaces","rv","slug","_footnote_ref","subId","_footnote_block_open","_footnote_block_close","_footnote_open","_footnote_close","_footnote_anchor","footnote_def","oldBMark","oldSCount","posAfterColon","footnotes","footnote_inline","footnoteId","footnote_ref","footnoteSubId","footnote_tail","lastParagraph","currentLabel","insideRef","refTokens","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","lastLineEmpty","oldBMarks","forbiddenField","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","defaultSchemas","validate","//","no_http","mailto:","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","tlds","__tlds__","untpl","tpl","src_tlds","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","schemaError","__compiled__","__schemas__","compiled","link","slist","schema_test","schema_search","Match","__last_index__","__schema__","createMatch","schemas","__opts__","ml","me","tld_pos","at_pos","testSchemaAt","keepOld","cnt","skipMarker","deflist","ddLine","dtLine","oldDDIndent"],"mappings":"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,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,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AAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,iBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,iCAAAC,MAAA,4BAAAC,MAAA,kBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,eAAAC,MAAA,oBAAAC,MAAA,eAAAC,MAAA,iBAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,eACPC,MAAA,CAAOA,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,4CAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,sCAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,oBAAAC,MAAA,gCAAAC,MAAA,gCAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,0BAAAC,MAAA,gCAAAC,MAAA,oBAAAC,MAAA,sCAAAC,MAAA,0BAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,iBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,oBAAA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AAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aaACPC,MAAA,CAAOC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aACPC,MAAA,CAAOC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,aAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,YAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,YACPC,MAAA,CAAOC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,OAAAC,OAAA,QACPC,MAAA,CAAOC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,aAAAC,OAAA,cACPC,MAAA,CAAOC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,iBAAAC,OAAA,uBAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,iBAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,eACPC,MAAA,CAAOC,OAAA,oBAAAC,OAAA,oBAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,cAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,0BAAAC,OAAA,cAAAC,OAAA,eACPC,MAAA,CAAOC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,SAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WACPC,MAAA,CAAOA,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,SAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WACPC,MAAA,CAAOA,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,UAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,UAAAC,MAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,QAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,WAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,UAAAC,OAAA,YACPC,MAAA,CAAOA,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,oBAAAC,MAAA,oBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,MAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mBAAAC,MAAA,mBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,cACPC,MAAA,CAAOA,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mBACPC,MAAA,CAAOA,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,uBAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,4BAAAC,MAAA,uBAAAC,MAAA,4FAAAC,MAAA,8CAAAC,MAAA,6BACPC,MAAA,CAAOC,MAAA,WAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,aAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,aAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,WAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,gBAAAC,MAAA,kBAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,mcAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAAA,aAAAC,MAA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","file":"js/chunk-vendors.df67577f.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = helpers;\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = {};        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  this.delimiters = [];   // Emphasis-like delimiters\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  return true;\n};\n","module.exports = require('./lib/uslug');","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// Merge adjacent text nodes into one, and re-calculate all token levels\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels\n    level += tokens[curr].nesting;\n    tokens[curr].level = level;\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/*!\n * Vue.js v2.6.7\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeLetters = 'a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + unicodeLetters + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + unicodeLetters + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res)) {\n      // issue #9511\n      // reassign to res to avoid catch triggering multiple times when nested calls\n      res = res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var isStable = slots ? !!slots.$stable : true;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    Object.keys(normalSlots).length === 0\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && res.length === 0\n      ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        if (!(key in hash) && !(camelizedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + camelizedKey)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  var owner = currentRenderingInstance;\n  if (isDef(factory.owners)) {\n    // already pending\n    factory.owners.push(owner);\n  } else {\n    var owners = factory.owners = [owner];\n    var sync = true;\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\nif (inBrowser && getNow() > document.createEvent('Event').timeStamp) {\n  // if the low-res timestamp which is bigger than the event timestamp\n  // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n  // and we need to use the hi-res version for event listeners as well.\n  getNow = function () { return performance.now(); };\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.7';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // #9462 bail for iOS 9 bug: event.timeStamp is 0 after history.pushState\n        e.timeStamp === 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      String.prototype.normalize = function(form) {\n         var str = \"\" + this;\n         form =  form === undefined ? \"NFC\" : form;\n\n         if (form === \"NFC\") {\n            return unorm.nfc(str);\n         } else if (form === \"NFD\") {\n            return unorm.nfd(str);\n         } else if (form === \"NFKC\") {\n            return unorm.nfkc(str);\n         } else if (form === \"NFKD\") {\n            return unorm.nfkd(str);\n         } else {\n            throw new RangeError(\"Invalid normalization form: \" + form);\n         }\n      };\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","module.exports = false;\n","/*\n * List of Unicode code that are flagged as separator.\n *\n * Contains Unicode code of:\n * - Zs = Separator, space\n * - Zl = Separator, line\n * - Zp = Separator, paragraph\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Zs;|;Zl;|;Zp;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.Z = [32, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","/* \n * List of Unicode code that are flagged as letter.\n *\n * Contains Unicode code of:\n * - Lu = Letter, uppercase\n * - Ll = Letter, lowercase\n * - Lt = Letter, titlecase\n * - Lm = Letter, modifier\n * - Lo = Letter, other\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n *\n */\n\nexports.L = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 170, 181, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 736, 737, 738, 739, 740, 748, 750, 880, 881, 882, 883, 884, 886, 887, 890, 891, 892, 893, 895, 902, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1765, 1766, 1774, 1775, 1786, 1787, 1788, 1791, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1969, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2036, 2037, 2042, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2074, 2084, 2088, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2365, 2384, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2447, 2448, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2482, 2486, 2487, 2488, 2489, 2493, 2510, 2524, 2525, 2527, 2528, 2529, 2544, 2545, 2565, 2566, 2567, 2568, 2569, 2570, 2575, 2576, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2650, 2651, 2652, 2654, 2674, 2675, 2676, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2703, 2704, 2705, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2738, 2739, 2741, 2742, 2743, 2744, 2745, 2749, 2768, 2784, 2785, 2809, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2831, 2832, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2877, 2908, 2909, 2911, 2912, 2913, 2929, 2947, 2949, 2950, 2951, 2952, 2953, 2954, 2958, 2959, 2960, 2962, 2963, 2964, 2965, 2969, 2970, 2972, 2974, 2975, 2979, 2980, 2984, 2985, 2986, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3024, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3133, 3160, 3161, 3162, 3168, 3169, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3214, 3215, 3216, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3253, 3254, 3255, 3256, 3257, 3261, 3294, 3296, 3297, 3313, 3314, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3342, 3343, 3344, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3389, 3406, 3423, 3424, 3425, 3450, 3451, 3452, 3453, 3454, 3455, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3517, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3713, 3714, 3716, 3719, 3720, 3722, 3725, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3749, 3751, 3754, 3755, 3757, 3758, 3759, 3760, 3762, 3763, 3773, 3776, 3777, 3778, 3779, 3780, 3782, 3804, 3805, 3806, 3807, 3840, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3976, 3977, 3978, 3979, 3980, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4159, 4176, 4177, 4178, 4179, 4180, 4181, 4186, 4187, 4188, 4189, 4193, 4197, 4198, 4206, 4207, 4208, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4238, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4295, 4301, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4682, 4683, 4684, 4685, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4696, 4698, 4699, 4700, 4701, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4746, 4747, 4748, 4749, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4786, 4787, 4788, 4789, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4800, 4802, 4803, 4804, 4805, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4882, 4883, 4884, 4885, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5112, 5113, 5114, 5115, 5116, 5117, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5902, 5903, 5904, 5905, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5998, 5999, 6000, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6103, 6108, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6314, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6512, 6513, 6514, 6515, 6516, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6823, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7086, 7087, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7245, 7246, 7247, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7401, 7402, 7403, 7404, 7406, 7407, 7408, 7409, 7413, 7414, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7960, 7961, 7962, 7963, 7964, 7965, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8008, 8009, 8010, 8011, 8012, 8013, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8025, 8027, 8029, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8126, 8130, 8131, 8132, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8144, 8145, 8146, 8147, 8150, 8151, 8152, 8153, 8154, 8155, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8178, 8179, 8180, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8305, 8319, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8450, 8455, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8469, 8473, 8474, 8475, 8476, 8477, 8484, 8486, 8488, 8490, 8491, 8492, 8493, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8508, 8509, 8510, 8511, 8517, 8518, 8519, 8520, 8521, 8526, 8579, 8580, 11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, 11303, 11304, 11305, 11306, 11307, 11308, 11309, 11310, 11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327, 11328, 11329, 11330, 11331, 11332, 11333, 11334, 11335, 11336, 11337, 11338, 11339, 11340, 11341, 11342, 11343, 11344, 11345, 11346, 11347, 11348, 11349, 11350, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 11360, 11361, 11362, 11363, 11364, 11365, 11366, 11367, 11368, 11369, 11370, 11371, 11372, 11373, 11374, 11375, 11376, 11377, 11378, 11379, 11380, 11381, 11382, 11383, 11384, 11385, 11386, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11394, 11395, 11396, 11397, 11398, 11399, 11400, 11401, 11402, 11403, 11404, 11405, 11406, 11407, 11408, 11409, 11410, 11411, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421, 11422, 11423, 11424, 11425, 11426, 11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11437, 11438, 11439, 11440, 11441, 11442, 11443, 11444, 11445, 11446, 11447, 11448, 11449, 11450, 11451, 11452, 11453, 11454, 11455, 11456, 11457, 11458, 11459, 11460, 11461, 11462, 11463, 11464, 11465, 11466, 11467, 11468, 11469, 11470, 11471, 11472, 11473, 11474, 11475, 11476, 11477, 11478, 11479, 11480, 11481, 11482, 11483, 11484, 11485, 11486, 11487, 11488, 11489, 11490, 11491, 11492, 11499, 11500, 11501, 11502, 11506, 11507, 11520, 11521, 11522, 11523, 11524, 11525, 11526, 11527, 11528, 11529, 11530, 11531, 11532, 11533, 11534, 11535, 11536, 11537, 11538, 11539, 11540, 11541, 11542, 11543, 11544, 11545, 11546, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 11554, 11555, 11556, 11557, 11559, 11565, 11568, 11569, 11570, 11571, 11572, 11573, 11574, 11575, 11576, 11577, 11578, 11579, 11580, 11581, 11582, 11583, 11584, 11585, 11586, 11587, 11588, 11589, 11590, 11591, 11592, 11593, 11594, 11595, 11596, 11597, 11598, 11599, 11600, 11601, 11602, 11603, 11604, 11605, 11606, 11607, 11608, 11609, 11610, 11611, 11612, 11613, 11614, 11615, 11616, 11617, 11618, 11619, 11620, 11621, 11622, 11623, 11631, 11648, 11649, 11650, 11651, 11652, 11653, 11654, 11655, 11656, 11657, 11658, 11659, 11660, 11661, 11662, 11663, 11664, 11665, 11666, 11667, 11668, 11669, 11670, 11680, 11681, 11682, 11683, 11684, 11685, 11686, 11688, 11689, 11690, 11691, 11692, 11693, 11694, 11696, 11697, 11698, 11699, 11700, 11701, 11702, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11712, 11713, 11714, 11715, 11716, 11717, 11718, 11720, 11721, 11722, 11723, 11724, 11725, 11726, 11728, 11729, 11730, 11731, 11732, 11733, 11734, 11736, 11737, 11738, 11739, 11740, 11741, 11742, 11823, 12293, 12294, 12337, 12338, 12339, 12340, 12341, 12347, 12348, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12436, 12437, 12438, 12445, 12446, 12447, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 12535, 12536, 12537, 12538, 12540, 12541, 12542, 12543, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 12586, 12587, 12588, 12589, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681, 12682, 12683, 12684, 12685, 12686, 12704, 12705, 12706, 12707, 12708, 12709, 12710, 12711, 12712, 12713, 12714, 12715, 12716, 12717, 12718, 12719, 12720, 12721, 12722, 12723, 12724, 12725, 12726, 12727, 12728, 12729, 12730, 12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12793, 12794, 12795, 12796, 12797, 12798, 12799, 13312, 19893, 19968, 40917, 40960, 40961, 40962, 40963, 40964, 40965, 40966, 40967, 40968, 40969, 40970, 40971, 40972, 40973, 40974, 40975, 40976, 40977, 40978, 40979, 40980, 40981, 40982, 40983, 40984, 40985, 40986, 40987, 40988, 40989, 40990, 40991, 40992, 40993, 40994, 40995, 40996, 40997, 40998, 40999, 41000, 41001, 41002, 41003, 41004, 41005, 41006, 41007, 41008, 41009, 41010, 41011, 41012, 41013, 41014, 41015, 41016, 41017, 41018, 41019, 41020, 41021, 41022, 41023, 41024, 41025, 41026, 41027, 41028, 41029, 41030, 41031, 41032, 41033, 41034, 41035, 41036, 41037, 41038, 41039, 41040, 41041, 41042, 41043, 41044, 41045, 41046, 41047, 41048, 41049, 41050, 41051, 41052, 41053, 41054, 41055, 41056, 41057, 41058, 41059, 41060, 41061, 41062, 41063, 41064, 41065, 41066, 41067, 41068, 41069, 41070, 41071, 41072, 41073, 41074, 41075, 41076, 41077, 41078, 41079, 41080, 41081, 41082, 41083, 41084, 41085, 41086, 41087, 41088, 41089, 41090, 41091, 41092, 41093, 41094, 41095, 41096, 41097, 41098, 41099, 41100, 41101, 41102, 41103, 41104, 41105, 41106, 41107, 41108, 41109, 41110, 41111, 41112, 41113, 41114, 41115, 41116, 41117, 41118, 41119, 41120, 41121, 41122, 41123, 41124, 41125, 41126, 41127, 41128, 41129, 41130, 41131, 41132, 41133, 41134, 41135, 41136, 41137, 41138, 41139, 41140, 41141, 41142, 41143, 41144, 41145, 41146, 41147, 41148, 41149, 41150, 41151, 41152, 41153, 41154, 41155, 41156, 41157, 41158, 41159, 41160, 41161, 41162, 41163, 41164, 41165, 41166, 41167, 41168, 41169, 41170, 41171, 41172, 41173, 41174, 41175, 41176, 41177, 41178, 41179, 41180, 41181, 41182, 41183, 41184, 41185, 41186, 41187, 41188, 41189, 41190, 41191, 41192, 41193, 41194, 41195, 41196, 41197, 41198, 41199, 41200, 41201, 41202, 41203, 41204, 41205, 41206, 41207, 41208, 41209, 41210, 41211, 41212, 41213, 41214, 41215, 41216, 41217, 41218, 41219, 41220, 41221, 41222, 41223, 41224, 41225, 41226, 41227, 41228, 41229, 41230, 41231, 41232, 41233, 41234, 41235, 41236, 41237, 41238, 41239, 41240, 41241, 41242, 41243, 41244, 41245, 41246, 41247, 41248, 41249, 41250, 41251, 41252, 41253, 41254, 41255, 41256, 41257, 41258, 41259, 41260, 41261, 41262, 41263, 41264, 41265, 41266, 41267, 41268, 41269, 41270, 41271, 41272, 41273, 41274, 41275, 41276, 41277, 41278, 41279, 41280, 41281, 41282, 41283, 41284, 41285, 41286, 41287, 41288, 41289, 41290, 41291, 41292, 41293, 41294, 41295, 41296, 41297, 41298, 41299, 41300, 41301, 41302, 41303, 41304, 41305, 41306, 41307, 41308, 41309, 41310, 41311, 41312, 41313, 41314, 41315, 41316, 41317, 41318, 41319, 41320, 41321, 41322, 41323, 41324, 41325, 41326, 41327, 41328, 41329, 41330, 41331, 41332, 41333, 41334, 41335, 41336, 41337, 41338, 41339, 41340, 41341, 41342, 41343, 41344, 41345, 41346, 41347, 41348, 41349, 41350, 41351, 41352, 41353, 41354, 41355, 41356, 41357, 41358, 41359, 41360, 41361, 41362, 41363, 41364, 41365, 41366, 41367, 41368, 41369, 41370, 41371, 41372, 41373, 41374, 41375, 41376, 41377, 41378, 41379, 41380, 41381, 41382, 41383, 41384, 41385, 41386, 41387, 41388, 41389, 41390, 41391, 41392, 41393, 41394, 41395, 41396, 41397, 41398, 41399, 41400, 41401, 41402, 41403, 41404, 41405, 41406, 41407, 41408, 41409, 41410, 41411, 41412, 41413, 41414, 41415, 41416, 41417, 41418, 41419, 41420, 41421, 41422, 41423, 41424, 41425, 41426, 41427, 41428, 41429, 41430, 41431, 41432, 41433, 41434, 41435, 41436, 41437, 41438, 41439, 41440, 41441, 41442, 41443, 41444, 41445, 41446, 41447, 41448, 41449, 41450, 41451, 41452, 41453, 41454, 41455, 41456, 41457, 41458, 41459, 41460, 41461, 41462, 41463, 41464, 41465, 41466, 41467, 41468, 41469, 41470, 41471, 41472, 41473, 41474, 41475, 41476, 41477, 41478, 41479, 41480, 41481, 41482, 41483, 41484, 41485, 41486, 41487, 41488, 41489, 41490, 41491, 41492, 41493, 41494, 41495, 41496, 41497, 41498, 41499, 41500, 41501, 41502, 41503, 41504, 41505, 41506, 41507, 41508, 41509, 41510, 41511, 41512, 41513, 41514, 41515, 41516, 41517, 41518, 41519, 41520, 41521, 41522, 41523, 41524, 41525, 41526, 41527, 41528, 41529, 41530, 41531, 41532, 41533, 41534, 41535, 41536, 41537, 41538, 41539, 41540, 41541, 41542, 41543, 41544, 41545, 41546, 41547, 41548, 41549, 41550, 41551, 41552, 41553, 41554, 41555, 41556, 41557, 41558, 41559, 41560, 41561, 41562, 41563, 41564, 41565, 41566, 41567, 41568, 41569, 41570, 41571, 41572, 41573, 41574, 41575, 41576, 41577, 41578, 41579, 41580, 41581, 41582, 41583, 41584, 41585, 41586, 41587, 41588, 41589, 41590, 41591, 41592, 41593, 41594, 41595, 41596, 41597, 41598, 41599, 41600, 41601, 41602, 41603, 41604, 41605, 41606, 41607, 41608, 41609, 41610, 41611, 41612, 41613, 41614, 41615, 41616, 41617, 41618, 41619, 41620, 41621, 41622, 41623, 41624, 41625, 41626, 41627, 41628, 41629, 41630, 41631, 41632, 41633, 41634, 41635, 41636, 41637, 41638, 41639, 41640, 41641, 41642, 41643, 41644, 41645, 41646, 41647, 41648, 41649, 41650, 41651, 41652, 41653, 41654, 41655, 41656, 41657, 41658, 41659, 41660, 41661, 41662, 41663, 41664, 41665, 41666, 41667, 41668, 41669, 41670, 41671, 41672, 41673, 41674, 41675, 41676, 41677, 41678, 41679, 41680, 41681, 41682, 41683, 41684, 41685, 41686, 41687, 41688, 41689, 41690, 41691, 41692, 41693, 41694, 41695, 41696, 41697, 41698, 41699, 41700, 41701, 41702, 41703, 41704, 41705, 41706, 41707, 41708, 41709, 41710, 41711, 41712, 41713, 41714, 41715, 41716, 41717, 41718, 41719, 41720, 41721, 41722, 41723, 41724, 41725, 41726, 41727, 41728, 41729, 41730, 41731, 41732, 41733, 41734, 41735, 41736, 41737, 41738, 41739, 41740, 41741, 41742, 41743, 41744, 41745, 41746, 41747, 41748, 41749, 41750, 41751, 41752, 41753, 41754, 41755, 41756, 41757, 41758, 41759, 41760, 41761, 41762, 41763, 41764, 41765, 41766, 41767, 41768, 41769, 41770, 41771, 41772, 41773, 41774, 41775, 41776, 41777, 41778, 41779, 41780, 41781, 41782, 41783, 41784, 41785, 41786, 41787, 41788, 41789, 41790, 41791, 41792, 41793, 41794, 41795, 41796, 41797, 41798, 41799, 41800, 41801, 41802, 41803, 41804, 41805, 41806, 41807, 41808, 41809, 41810, 41811, 41812, 41813, 41814, 41815, 41816, 41817, 41818, 41819, 41820, 41821, 41822, 41823, 41824, 41825, 41826, 41827, 41828, 41829, 41830, 41831, 41832, 41833, 41834, 41835, 41836, 41837, 41838, 41839, 41840, 41841, 41842, 41843, 41844, 41845, 41846, 41847, 41848, 41849, 41850, 41851, 41852, 41853, 41854, 41855, 41856, 41857, 41858, 41859, 41860, 41861, 41862, 41863, 41864, 41865, 41866, 41867, 41868, 41869, 41870, 41871, 41872, 41873, 41874, 41875, 41876, 41877, 41878, 41879, 41880, 41881, 41882, 41883, 41884, 41885, 41886, 41887, 41888, 41889, 41890, 41891, 41892, 41893, 41894, 41895, 41896, 41897, 41898, 41899, 41900, 41901, 41902, 41903, 41904, 41905, 41906, 41907, 41908, 41909, 41910, 41911, 41912, 41913, 41914, 41915, 41916, 41917, 41918, 41919, 41920, 41921, 41922, 41923, 41924, 41925, 41926, 41927, 41928, 41929, 41930, 41931, 41932, 41933, 41934, 41935, 41936, 41937, 41938, 41939, 41940, 41941, 41942, 41943, 41944, 41945, 41946, 41947, 41948, 41949, 41950, 41951, 41952, 41953, 41954, 41955, 41956, 41957, 41958, 41959, 41960, 41961, 41962, 41963, 41964, 41965, 41966, 41967, 41968, 41969, 41970, 41971, 41972, 41973, 41974, 41975, 41976, 41977, 41978, 41979, 41980, 41981, 41982, 41983, 41984, 41985, 41986, 41987, 41988, 41989, 41990, 41991, 41992, 41993, 41994, 41995, 41996, 41997, 41998, 41999, 42000, 42001, 42002, 42003, 42004, 42005, 42006, 42007, 42008, 42009, 42010, 42011, 42012, 42013, 42014, 42015, 42016, 42017, 42018, 42019, 42020, 42021, 42022, 42023, 42024, 42025, 42026, 42027, 42028, 42029, 42030, 42031, 42032, 42033, 42034, 42035, 42036, 42037, 42038, 42039, 42040, 42041, 42042, 42043, 42044, 42045, 42046, 42047, 42048, 42049, 42050, 42051, 42052, 42053, 42054, 42055, 42056, 42057, 42058, 42059, 42060, 42061, 42062, 42063, 42064, 42065, 42066, 42067, 42068, 42069, 42070, 42071, 42072, 42073, 42074, 42075, 42076, 42077, 42078, 42079, 42080, 42081, 42082, 42083, 42084, 42085, 42086, 42087, 42088, 42089, 42090, 42091, 42092, 42093, 42094, 42095, 42096, 42097, 42098, 42099, 42100, 42101, 42102, 42103, 42104, 42105, 42106, 42107, 42108, 42109, 42110, 42111, 42112, 42113, 42114, 42115, 42116, 42117, 42118, 42119, 42120, 42121, 42122, 42123, 42124, 42192, 42193, 42194, 42195, 42196, 42197, 42198, 42199, 42200, 42201, 42202, 42203, 42204, 42205, 42206, 42207, 42208, 42209, 42210, 42211, 42212, 42213, 42214, 42215, 42216, 42217, 42218, 42219, 42220, 42221, 42222, 42223, 42224, 42225, 42226, 42227, 42228, 42229, 42230, 42231, 42232, 42233, 42234, 42235, 42236, 42237, 42240, 42241, 42242, 42243, 42244, 42245, 42246, 42247, 42248, 42249, 42250, 42251, 42252, 42253, 42254, 42255, 42256, 42257, 42258, 42259, 42260, 42261, 42262, 42263, 42264, 42265, 42266, 42267, 42268, 42269, 42270, 42271, 42272, 42273, 42274, 42275, 42276, 42277, 42278, 42279, 42280, 42281, 42282, 42283, 42284, 42285, 42286, 42287, 42288, 42289, 42290, 42291, 42292, 42293, 42294, 42295, 42296, 42297, 42298, 42299, 42300, 42301, 42302, 42303, 42304, 42305, 42306, 42307, 42308, 42309, 42310, 42311, 42312, 42313, 42314, 42315, 42316, 42317, 42318, 42319, 42320, 42321, 42322, 42323, 42324, 42325, 42326, 42327, 42328, 42329, 42330, 42331, 42332, 42333, 42334, 42335, 42336, 42337, 42338, 42339, 42340, 42341, 42342, 42343, 42344, 42345, 42346, 42347, 42348, 42349, 42350, 42351, 42352, 42353, 42354, 42355, 42356, 42357, 42358, 42359, 42360, 42361, 42362, 42363, 42364, 42365, 42366, 42367, 42368, 42369, 42370, 42371, 42372, 42373, 42374, 42375, 42376, 42377, 42378, 42379, 42380, 42381, 42382, 42383, 42384, 42385, 42386, 42387, 42388, 42389, 42390, 42391, 42392, 42393, 42394, 42395, 42396, 42397, 42398, 42399, 42400, 42401, 42402, 42403, 42404, 42405, 42406, 42407, 42408, 42409, 42410, 42411, 42412, 42413, 42414, 42415, 42416, 42417, 42418, 42419, 42420, 42421, 42422, 42423, 42424, 42425, 42426, 42427, 42428, 42429, 42430, 42431, 42432, 42433, 42434, 42435, 42436, 42437, 42438, 42439, 42440, 42441, 42442, 42443, 42444, 42445, 42446, 42447, 42448, 42449, 42450, 42451, 42452, 42453, 42454, 42455, 42456, 42457, 42458, 42459, 42460, 42461, 42462, 42463, 42464, 42465, 42466, 42467, 42468, 42469, 42470, 42471, 42472, 42473, 42474, 42475, 42476, 42477, 42478, 42479, 42480, 42481, 42482, 42483, 42484, 42485, 42486, 42487, 42488, 42489, 42490, 42491, 42492, 42493, 42494, 42495, 42496, 42497, 42498, 42499, 42500, 42501, 42502, 42503, 42504, 42505, 42506, 42507, 42508, 42512, 42513, 42514, 42515, 42516, 42517, 42518, 42519, 42520, 42521, 42522, 42523, 42524, 42525, 42526, 42527, 42538, 42539, 42560, 42561, 42562, 42563, 42564, 42565, 42566, 42567, 42568, 42569, 42570, 42571, 42572, 42573, 42574, 42575, 42576, 42577, 42578, 42579, 42580, 42581, 42582, 42583, 42584, 42585, 42586, 42587, 42588, 42589, 42590, 42591, 42592, 42593, 42594, 42595, 42596, 42597, 42598, 42599, 42600, 42601, 42602, 42603, 42604, 42605, 42606, 42623, 42624, 42625, 42626, 42627, 42628, 42629, 42630, 42631, 42632, 42633, 42634, 42635, 42636, 42637, 42638, 42639, 42640, 42641, 42642, 42643, 42644, 42645, 42646, 42647, 42648, 42649, 42650, 42651, 42652, 42653, 42656, 42657, 42658, 42659, 42660, 42661, 42662, 42663, 42664, 42665, 42666, 42667, 42668, 42669, 42670, 42671, 42672, 42673, 42674, 42675, 42676, 42677, 42678, 42679, 42680, 42681, 42682, 42683, 42684, 42685, 42686, 42687, 42688, 42689, 42690, 42691, 42692, 42693, 42694, 42695, 42696, 42697, 42698, 42699, 42700, 42701, 42702, 42703, 42704, 42705, 42706, 42707, 42708, 42709, 42710, 42711, 42712, 42713, 42714, 42715, 42716, 42717, 42718, 42719, 42720, 42721, 42722, 42723, 42724, 42725, 42775, 42776, 42777, 42778, 42779, 42780, 42781, 42782, 42783, 42786, 42787, 42788, 42789, 42790, 42791, 42792, 42793, 42794, 42795, 42796, 42797, 42798, 42799, 42800, 42801, 42802, 42803, 42804, 42805, 42806, 42807, 42808, 42809, 42810, 42811, 42812, 42813, 42814, 42815, 42816, 42817, 42818, 42819, 42820, 42821, 42822, 42823, 42824, 42825, 42826, 42827, 42828, 42829, 42830, 42831, 42832, 42833, 42834, 42835, 42836, 42837, 42838, 42839, 42840, 42841, 42842, 42843, 42844, 42845, 42846, 42847, 42848, 42849, 42850, 42851, 42852, 42853, 42854, 42855, 42856, 42857, 42858, 42859, 42860, 42861, 42862, 42863, 42864, 42865, 42866, 42867, 42868, 42869, 42870, 42871, 42872, 42873, 42874, 42875, 42876, 42877, 42878, 42879, 42880, 42881, 42882, 42883, 42884, 42885, 42886, 42887, 42888, 42891, 42892, 42893, 42894, 42895, 42896, 42897, 42898, 42899, 42900, 42901, 42902, 42903, 42904, 42905, 42906, 42907, 42908, 42909, 42910, 42911, 42912, 42913, 42914, 42915, 42916, 42917, 42918, 42919, 42920, 42921, 42922, 42923, 42924, 42925, 42928, 42929, 42930, 42931, 42932, 42933, 42934, 42935, 42999, 43000, 43001, 43002, 43003, 43004, 43005, 43006, 43007, 43008, 43009, 43011, 43012, 43013, 43015, 43016, 43017, 43018, 43020, 43021, 43022, 43023, 43024, 43025, 43026, 43027, 43028, 43029, 43030, 43031, 43032, 43033, 43034, 43035, 43036, 43037, 43038, 43039, 43040, 43041, 43042, 43072, 43073, 43074, 43075, 43076, 43077, 43078, 43079, 43080, 43081, 43082, 43083, 43084, 43085, 43086, 43087, 43088, 43089, 43090, 43091, 43092, 43093, 43094, 43095, 43096, 43097, 43098, 43099, 43100, 43101, 43102, 43103, 43104, 43105, 43106, 43107, 43108, 43109, 43110, 43111, 43112, 43113, 43114, 43115, 43116, 43117, 43118, 43119, 43120, 43121, 43122, 43123, 43138, 43139, 43140, 43141, 43142, 43143, 43144, 43145, 43146, 43147, 43148, 43149, 43150, 43151, 43152, 43153, 43154, 43155, 43156, 43157, 43158, 43159, 43160, 43161, 43162, 43163, 43164, 43165, 43166, 43167, 43168, 43169, 43170, 43171, 43172, 43173, 43174, 43175, 43176, 43177, 43178, 43179, 43180, 43181, 43182, 43183, 43184, 43185, 43186, 43187, 43250, 43251, 43252, 43253, 43254, 43255, 43259, 43261, 43274, 43275, 43276, 43277, 43278, 43279, 43280, 43281, 43282, 43283, 43284, 43285, 43286, 43287, 43288, 43289, 43290, 43291, 43292, 43293, 43294, 43295, 43296, 43297, 43298, 43299, 43300, 43301, 43312, 43313, 43314, 43315, 43316, 43317, 43318, 43319, 43320, 43321, 43322, 43323, 43324, 43325, 43326, 43327, 43328, 43329, 43330, 43331, 43332, 43333, 43334, 43360, 43361, 43362, 43363, 43364, 43365, 43366, 43367, 43368, 43369, 43370, 43371, 43372, 43373, 43374, 43375, 43376, 43377, 43378, 43379, 43380, 43381, 43382, 43383, 43384, 43385, 43386, 43387, 43388, 43396, 43397, 43398, 43399, 43400, 43401, 43402, 43403, 43404, 43405, 43406, 43407, 43408, 43409, 43410, 43411, 43412, 43413, 43414, 43415, 43416, 43417, 43418, 43419, 43420, 43421, 43422, 43423, 43424, 43425, 43426, 43427, 43428, 43429, 43430, 43431, 43432, 43433, 43434, 43435, 43436, 43437, 43438, 43439, 43440, 43441, 43442, 43471, 43488, 43489, 43490, 43491, 43492, 43494, 43495, 43496, 43497, 43498, 43499, 43500, 43501, 43502, 43503, 43514, 43515, 43516, 43517, 43518, 43520, 43521, 43522, 43523, 43524, 43525, 43526, 43527, 43528, 43529, 43530, 43531, 43532, 43533, 43534, 43535, 43536, 43537, 43538, 43539, 43540, 43541, 43542, 43543, 43544, 43545, 43546, 43547, 43548, 43549, 43550, 43551, 43552, 43553, 43554, 43555, 43556, 43557, 43558, 43559, 43560, 43584, 43585, 43586, 43588, 43589, 43590, 43591, 43592, 43593, 43594, 43595, 43616, 43617, 43618, 43619, 43620, 43621, 43622, 43623, 43624, 43625, 43626, 43627, 43628, 43629, 43630, 43631, 43632, 43633, 43634, 43635, 43636, 43637, 43638, 43642, 43646, 43647, 43648, 43649, 43650, 43651, 43652, 43653, 43654, 43655, 43656, 43657, 43658, 43659, 43660, 43661, 43662, 43663, 43664, 43665, 43666, 43667, 43668, 43669, 43670, 43671, 43672, 43673, 43674, 43675, 43676, 43677, 43678, 43679, 43680, 43681, 43682, 43683, 43684, 43685, 43686, 43687, 43688, 43689, 43690, 43691, 43692, 43693, 43694, 43695, 43697, 43701, 43702, 43705, 43706, 43707, 43708, 43709, 43712, 43714, 43739, 43740, 43741, 43744, 43745, 43746, 43747, 43748, 43749, 43750, 43751, 43752, 43753, 43754, 43762, 43763, 43764, 43777, 43778, 43779, 43780, 43781, 43782, 43785, 43786, 43787, 43788, 43789, 43790, 43793, 43794, 43795, 43796, 43797, 43798, 43808, 43809, 43810, 43811, 43812, 43813, 43814, 43816, 43817, 43818, 43819, 43820, 43821, 43822, 43824, 43825, 43826, 43827, 43828, 43829, 43830, 43831, 43832, 43833, 43834, 43835, 43836, 43837, 43838, 43839, 43840, 43841, 43842, 43843, 43844, 43845, 43846, 43847, 43848, 43849, 43850, 43851, 43852, 43853, 43854, 43855, 43856, 43857, 43858, 43859, 43860, 43861, 43862, 43863, 43864, 43865, 43866, 43868, 43869, 43870, 43871, 43872, 43873, 43874, 43875, 43876, 43877, 43888, 43889, 43890, 43891, 43892, 43893, 43894, 43895, 43896, 43897, 43898, 43899, 43900, 43901, 43902, 43903, 43904, 43905, 43906, 43907, 43908, 43909, 43910, 43911, 43912, 43913, 43914, 43915, 43916, 43917, 43918, 43919, 43920, 43921, 43922, 43923, 43924, 43925, 43926, 43927, 43928, 43929, 43930, 43931, 43932, 43933, 43934, 43935, 43936, 43937, 43938, 43939, 43940, 43941, 43942, 43943, 43944, 43945, 43946, 43947, 43948, 43949, 43950, 43951, 43952, 43953, 43954, 43955, 43956, 43957, 43958, 43959, 43960, 43961, 43962, 43963, 43964, 43965, 43966, 43967, 43968, 43969, 43970, 43971, 43972, 43973, 43974, 43975, 43976, 43977, 43978, 43979, 43980, 43981, 43982, 43983, 43984, 43985, 43986, 43987, 43988, 43989, 43990, 43991, 43992, 43993, 43994, 43995, 43996, 43997, 43998, 43999, 44000, 44001, 44002, 44032, 55203, 55216, 55217, 55218, 55219, 55220, 55221, 55222, 55223, 55224, 55225, 55226, 55227, 55228, 55229, 55230, 55231, 55232, 55233, 55234, 55235, 55236, 55237, 55238, 55243, 55244, 55245, 55246, 55247, 55248, 55249, 55250, 55251, 55252, 55253, 55254, 55255, 55256, 55257, 55258, 55259, 55260, 55261, 55262, 55263, 55264, 55265, 55266, 55267, 55268, 55269, 55270, 55271, 55272, 55273, 55274, 55275, 55276, 55277, 55278, 55279, 55280, 55281, 55282, 55283, 55284, 55285, 55286, 55287, 55288, 55289, 55290, 55291, 63744, 63745, 63746, 63747, 63748, 63749, 63750, 63751, 63752, 63753, 63754, 63755, 63756, 63757, 63758, 63759, 63760, 63761, 63762, 63763, 63764, 63765, 63766, 63767, 63768, 63769, 63770, 63771, 63772, 63773, 63774, 63775, 63776, 63777, 63778, 63779, 63780, 63781, 63782, 63783, 63784, 63785, 63786, 63787, 63788, 63789, 63790, 63791, 63792, 63793, 63794, 63795, 63796, 63797, 63798, 63799, 63800, 63801, 63802, 63803, 63804, 63805, 63806, 63807, 63808, 63809, 63810, 63811, 63812, 63813, 63814, 63815, 63816, 63817, 63818, 63819, 63820, 63821, 63822, 63823, 63824, 63825, 63826, 63827, 63828, 63829, 63830, 63831, 63832, 63833, 63834, 63835, 63836, 63837, 63838, 63839, 63840, 63841, 63842, 63843, 63844, 63845, 63846, 63847, 63848, 63849, 63850, 63851, 63852, 63853, 63854, 63855, 63856, 63857, 63858, 63859, 63860, 63861, 63862, 63863, 63864, 63865, 63866, 63867, 63868, 63869, 63870, 63871, 63872, 63873, 63874, 63875, 63876, 63877, 63878, 63879, 63880, 63881, 63882, 63883, 63884, 63885, 63886, 63887, 63888, 63889, 63890, 63891, 63892, 63893, 63894, 63895, 63896, 63897, 63898, 63899, 63900, 63901, 63902, 63903, 63904, 63905, 63906, 63907, 63908, 63909, 63910, 63911, 63912, 63913, 63914, 63915, 63916, 63917, 63918, 63919, 63920, 63921, 63922, 63923, 63924, 63925, 63926, 63927, 63928, 63929, 63930, 63931, 63932, 63933, 63934, 63935, 63936, 63937, 63938, 63939, 63940, 63941, 63942, 63943, 63944, 63945, 63946, 63947, 63948, 63949, 63950, 63951, 63952, 63953, 63954, 63955, 63956, 63957, 63958, 63959, 63960, 63961, 63962, 63963, 63964, 63965, 63966, 63967, 63968, 63969, 63970, 63971, 63972, 63973, 63974, 63975, 63976, 63977, 63978, 63979, 63980, 63981, 63982, 63983, 63984, 63985, 63986, 63987, 63988, 63989, 63990, 63991, 63992, 63993, 63994, 63995, 63996, 63997, 63998, 63999, 64000, 64001, 64002, 64003, 64004, 64005, 64006, 64007, 64008, 64009, 64010, 64011, 64012, 64013, 64014, 64015, 64016, 64017, 64018, 64019, 64020, 64021, 64022, 64023, 64024, 64025, 64026, 64027, 64028, 64029, 64030, 64031, 64032, 64033, 64034, 64035, 64036, 64037, 64038, 64039, 64040, 64041, 64042, 64043, 64044, 64045, 64046, 64047, 64048, 64049, 64050, 64051, 64052, 64053, 64054, 64055, 64056, 64057, 64058, 64059, 64060, 64061, 64062, 64063, 64064, 64065, 64066, 64067, 64068, 64069, 64070, 64071, 64072, 64073, 64074, 64075, 64076, 64077, 64078, 64079, 64080, 64081, 64082, 64083, 64084, 64085, 64086, 64087, 64088, 64089, 64090, 64091, 64092, 64093, 64094, 64095, 64096, 64097, 64098, 64099, 64100, 64101, 64102, 64103, 64104, 64105, 64106, 64107, 64108, 64109, 64112, 64113, 64114, 64115, 64116, 64117, 64118, 64119, 64120, 64121, 64122, 64123, 64124, 64125, 64126, 64127, 64128, 64129, 64130, 64131, 64132, 64133, 64134, 64135, 64136, 64137, 64138, 64139, 64140, 64141, 64142, 64143, 64144, 64145, 64146, 64147, 64148, 64149, 64150, 64151, 64152, 64153, 64154, 64155, 64156, 64157, 64158, 64159, 64160, 64161, 64162, 64163, 64164, 64165, 64166, 64167, 64168, 64169, 64170, 64171, 64172, 64173, 64174, 64175, 64176, 64177, 64178, 64179, 64180, 64181, 64182, 64183, 64184, 64185, 64186, 64187, 64188, 64189, 64190, 64191, 64192, 64193, 64194, 64195, 64196, 64197, 64198, 64199, 64200, 64201, 64202, 64203, 64204, 64205, 64206, 64207, 64208, 64209, 64210, 64211, 64212, 64213, 64214, 64215, 64216, 64217, 64256, 64257, 64258, 64259, 64260, 64261, 64262, 64275, 64276, 64277, 64278, 64279, 64285, 64287, 64288, 64289, 64290, 64291, 64292, 64293, 64294, 64295, 64296, 64298, 64299, 64300, 64301, 64302, 64303, 64304, 64305, 64306, 64307, 64308, 64309, 64310, 64312, 64313, 64314, 64315, 64316, 64318, 64320, 64321, 64323, 64324, 64326, 64327, 64328, 64329, 64330, 64331, 64332, 64333, 64334, 64335, 64336, 64337, 64338, 64339, 64340, 64341, 64342, 64343, 64344, 64345, 64346, 64347, 64348, 64349, 64350, 64351, 64352, 64353, 64354, 64355, 64356, 64357, 64358, 64359, 64360, 64361, 64362, 64363, 64364, 64365, 64366, 64367, 64368, 64369, 64370, 64371, 64372, 64373, 64374, 64375, 64376, 64377, 64378, 64379, 64380, 64381, 64382, 64383, 64384, 64385, 64386, 64387, 64388, 64389, 64390, 64391, 64392, 64393, 64394, 64395, 64396, 64397, 64398, 64399, 64400, 64401, 64402, 64403, 64404, 64405, 64406, 64407, 64408, 64409, 64410, 64411, 64412, 64413, 64414, 64415, 64416, 64417, 64418, 64419, 64420, 64421, 64422, 64423, 64424, 64425, 64426, 64427, 64428, 64429, 64430, 64431, 64432, 64433, 64467, 64468, 64469, 64470, 64471, 64472, 64473, 64474, 64475, 64476, 64477, 64478, 64479, 64480, 64481, 64482, 64483, 64484, 64485, 64486, 64487, 64488, 64489, 64490, 64491, 64492, 64493, 64494, 64495, 64496, 64497, 64498, 64499, 64500, 64501, 64502, 64503, 64504, 64505, 64506, 64507, 64508, 64509, 64510, 64511, 64512, 64513, 64514, 64515, 64516, 64517, 64518, 64519, 64520, 64521, 64522, 64523, 64524, 64525, 64526, 64527, 64528, 64529, 64530, 64531, 64532, 64533, 64534, 64535, 64536, 64537, 64538, 64539, 64540, 64541, 64542, 64543, 64544, 64545, 64546, 64547, 64548, 64549, 64550, 64551, 64552, 64553, 64554, 64555, 64556, 64557, 64558, 64559, 64560, 64561, 64562, 64563, 64564, 64565, 64566, 64567, 64568, 64569, 64570, 64571, 64572, 64573, 64574, 64575, 64576, 64577, 64578, 64579, 64580, 64581, 64582, 64583, 64584, 64585, 64586, 64587, 64588, 64589, 64590, 64591, 64592, 64593, 64594, 64595, 64596, 64597, 64598, 64599, 64600, 64601, 64602, 64603, 64604, 64605, 64606, 64607, 64608, 64609, 64610, 64611, 64612, 64613, 64614, 64615, 64616, 64617, 64618, 64619, 64620, 64621, 64622, 64623, 64624, 64625, 64626, 64627, 64628, 64629, 64630, 64631, 64632, 64633, 64634, 64635, 64636, 64637, 64638, 64639, 64640, 64641, 64642, 64643, 64644, 64645, 64646, 64647, 64648, 64649, 64650, 64651, 64652, 64653, 64654, 64655, 64656, 64657, 64658, 64659, 64660, 64661, 64662, 64663, 64664, 64665, 64666, 64667, 64668, 64669, 64670, 64671, 64672, 64673, 64674, 64675, 64676, 64677, 64678, 64679, 64680, 64681, 64682, 64683, 64684, 64685, 64686, 64687, 64688, 64689, 64690, 64691, 64692, 64693, 64694, 64695, 64696, 64697, 64698, 64699, 64700, 64701, 64702, 64703, 64704, 64705, 64706, 64707, 64708, 64709, 64710, 64711, 64712, 64713, 64714, 64715, 64716, 64717, 64718, 64719, 64720, 64721, 64722, 64723, 64724, 64725, 64726, 64727, 64728, 64729, 64730, 64731, 64732, 64733, 64734, 64735, 64736, 64737, 64738, 64739, 64740, 64741, 64742, 64743, 64744, 64745, 64746, 64747, 64748, 64749, 64750, 64751, 64752, 64753, 64754, 64755, 64756, 64757, 64758, 64759, 64760, 64761, 64762, 64763, 64764, 64765, 64766, 64767, 64768, 64769, 64770, 64771, 64772, 64773, 64774, 64775, 64776, 64777, 64778, 64779, 64780, 64781, 64782, 64783, 64784, 64785, 64786, 64787, 64788, 64789, 64790, 64791, 64792, 64793, 64794, 64795, 64796, 64797, 64798, 64799, 64800, 64801, 64802, 64803, 64804, 64805, 64806, 64807, 64808, 64809, 64810, 64811, 64812, 64813, 64814, 64815, 64816, 64817, 64818, 64819, 64820, 64821, 64822, 64823, 64824, 64825, 64826, 64827, 64828, 64829, 64848, 64849, 64850, 64851, 64852, 64853, 64854, 64855, 64856, 64857, 64858, 64859, 64860, 64861, 64862, 64863, 64864, 64865, 64866, 64867, 64868, 64869, 64870, 64871, 64872, 64873, 64874, 64875, 64876, 64877, 64878, 64879, 64880, 64881, 64882, 64883, 64884, 64885, 64886, 64887, 64888, 64889, 64890, 64891, 64892, 64893, 64894, 64895, 64896, 64897, 64898, 64899, 64900, 64901, 64902, 64903, 64904, 64905, 64906, 64907, 64908, 64909, 64910, 64911, 64914, 64915, 64916, 64917, 64918, 64919, 64920, 64921, 64922, 64923, 64924, 64925, 64926, 64927, 64928, 64929, 64930, 64931, 64932, 64933, 64934, 64935, 64936, 64937, 64938, 64939, 64940, 64941, 64942, 64943, 64944, 64945, 64946, 64947, 64948, 64949, 64950, 64951, 64952, 64953, 64954, 64955, 64956, 64957, 64958, 64959, 64960, 64961, 64962, 64963, 64964, 64965, 64966, 64967, 65008, 65009, 65010, 65011, 65012, 65013, 65014, 65015, 65016, 65017, 65018, 65019, 65136, 65137, 65138, 65139, 65140, 65142, 65143, 65144, 65145, 65146, 65147, 65148, 65149, 65150, 65151, 65152, 65153, 65154, 65155, 65156, 65157, 65158, 65159, 65160, 65161, 65162, 65163, 65164, 65165, 65166, 65167, 65168, 65169, 65170, 65171, 65172, 65173, 65174, 65175, 65176, 65177, 65178, 65179, 65180, 65181, 65182, 65183, 65184, 65185, 65186, 65187, 65188, 65189, 65190, 65191, 65192, 65193, 65194, 65195, 65196, 65197, 65198, 65199, 65200, 65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208, 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216, 65217, 65218, 65219, 65220, 65221, 65222, 65223, 65224, 65225, 65226, 65227, 65228, 65229, 65230, 65231, 65232, 65233, 65234, 65235, 65236, 65237, 65238, 65239, 65240, 65241, 65242, 65243, 65244, 65245, 65246, 65247, 65248, 65249, 65250, 65251, 65252, 65253, 65254, 65255, 65256, 65257, 65258, 65259, 65260, 65261, 65262, 65263, 65264, 65265, 65266, 65267, 65268, 65269, 65270, 65271, 65272, 65273, 65274, 65275, 65276, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65382, 65383, 65384, 65385, 65386, 65387, 65388, 65389, 65390, 65391, 65392, 65393, 65394, 65395, 65396, 65397, 65398, 65399, 65400, 65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416, 65417, 65418, 65419, 65420, 65421, 65422, 65423, 65424, 65425, 65426, 65427, 65428, 65429, 65430, 65431, 65432, 65433, 65434, 65435, 65436, 65437, 65438, 65439, 65440, 65441, 65442, 65443, 65444, 65445, 65446, 65447, 65448, 65449, 65450, 65451, 65452, 65453, 65454, 65455, 65456, 65457, 65458, 65459, 65460, 65461, 65462, 65463, 65464, 65465, 65466, 65467, 65468, 65469, 65470, 65474, 65475, 65476, 65477, 65478, 65479, 65482, 65483, 65484, 65485, 65486, 65487, 65490, 65491, 65492, 65493, 65494, 65495, 65498, 65499, 65500, 65536, 65537, 65538, 65539, 65540, 65541, 65542, 65543, 65544, 65545, 65546, 65547, 65549, 65550, 65551, 65552, 65553, 65554, 65555, 65556, 65557, 65558, 65559, 65560, 65561, 65562, 65563, 65564, 65565, 65566, 65567, 65568, 65569, 65570, 65571, 65572, 65573, 65574, 65576, 65577, 65578, 65579, 65580, 65581, 65582, 65583, 65584, 65585, 65586, 65587, 65588, 65589, 65590, 65591, 65592, 65593, 65594, 65596, 65597, 65599, 65600, 65601, 65602, 65603, 65604, 65605, 65606, 65607, 65608, 65609, 65610, 65611, 65612, 65613, 65616, 65617, 65618, 65619, 65620, 65621, 65622, 65623, 65624, 65625, 65626, 65627, 65628, 65629, 65664, 65665, 65666, 65667, 65668, 65669, 65670, 65671, 65672, 65673, 65674, 65675, 65676, 65677, 65678, 65679, 65680, 65681, 65682, 65683, 65684, 65685, 65686, 65687, 65688, 65689, 65690, 65691, 65692, 65693, 65694, 65695, 65696, 65697, 65698, 65699, 65700, 65701, 65702, 65703, 65704, 65705, 65706, 65707, 65708, 65709, 65710, 65711, 65712, 65713, 65714, 65715, 65716, 65717, 65718, 65719, 65720, 65721, 65722, 65723, 65724, 65725, 65726, 65727, 65728, 65729, 65730, 65731, 65732, 65733, 65734, 65735, 65736, 65737, 65738, 65739, 65740, 65741, 65742, 65743, 65744, 65745, 65746, 65747, 65748, 65749, 65750, 65751, 65752, 65753, 65754, 65755, 65756, 65757, 65758, 65759, 65760, 65761, 65762, 65763, 65764, 65765, 65766, 65767, 65768, 65769, 65770, 65771, 65772, 65773, 65774, 65775, 65776, 65777, 65778, 65779, 65780, 65781, 65782, 65783, 65784, 65785, 65786, 66176, 66177, 66178, 66179, 66180, 66181, 66182, 66183, 66184, 66185, 66186, 66187, 66188, 66189, 66190, 66191, 66192, 66193, 66194, 66195, 66196, 66197, 66198, 66199, 66200, 66201, 66202, 66203, 66204, 66208, 66209, 66210, 66211, 66212, 66213, 66214, 66215, 66216, 66217, 66218, 66219, 66220, 66221, 66222, 66223, 66224, 66225, 66226, 66227, 66228, 66229, 66230, 66231, 66232, 66233, 66234, 66235, 66236, 66237, 66238, 66239, 66240, 66241, 66242, 66243, 66244, 66245, 66246, 66247, 66248, 66249, 66250, 66251, 66252, 66253, 66254, 66255, 66256, 66304, 66305, 66306, 66307, 66308, 66309, 66310, 66311, 66312, 66313, 66314, 66315, 66316, 66317, 66318, 66319, 66320, 66321, 66322, 66323, 66324, 66325, 66326, 66327, 66328, 66329, 66330, 66331, 66332, 66333, 66334, 66335, 66352, 66353, 66354, 66355, 66356, 66357, 66358, 66359, 66360, 66361, 66362, 66363, 66364, 66365, 66366, 66367, 66368, 66370, 66371, 66372, 66373, 66374, 66375, 66376, 66377, 66384, 66385, 66386, 66387, 66388, 66389, 66390, 66391, 66392, 66393, 66394, 66395, 66396, 66397, 66398, 66399, 66400, 66401, 66402, 66403, 66404, 66405, 66406, 66407, 66408, 66409, 66410, 66411, 66412, 66413, 66414, 66415, 66416, 66417, 66418, 66419, 66420, 66421, 66432, 66433, 66434, 66435, 66436, 66437, 66438, 66439, 66440, 66441, 66442, 66443, 66444, 66445, 66446, 66447, 66448, 66449, 66450, 66451, 66452, 66453, 66454, 66455, 66456, 66457, 66458, 66459, 66460, 66461, 66464, 66465, 66466, 66467, 66468, 66469, 66470, 66471, 66472, 66473, 66474, 66475, 66476, 66477, 66478, 66479, 66480, 66481, 66482, 66483, 66484, 66485, 66486, 66487, 66488, 66489, 66490, 66491, 66492, 66493, 66494, 66495, 66496, 66497, 66498, 66499, 66504, 66505, 66506, 66507, 66508, 66509, 66510, 66511, 66560, 66561, 66562, 66563, 66564, 66565, 66566, 66567, 66568, 66569, 66570, 66571, 66572, 66573, 66574, 66575, 66576, 66577, 66578, 66579, 66580, 66581, 66582, 66583, 66584, 66585, 66586, 66587, 66588, 66589, 66590, 66591, 66592, 66593, 66594, 66595, 66596, 66597, 66598, 66599, 66600, 66601, 66602, 66603, 66604, 66605, 66606, 66607, 66608, 66609, 66610, 66611, 66612, 66613, 66614, 66615, 66616, 66617, 66618, 66619, 66620, 66621, 66622, 66623, 66624, 66625, 66626, 66627, 66628, 66629, 66630, 66631, 66632, 66633, 66634, 66635, 66636, 66637, 66638, 66639, 66640, 66641, 66642, 66643, 66644, 66645, 66646, 66647, 66648, 66649, 66650, 66651, 66652, 66653, 66654, 66655, 66656, 66657, 66658, 66659, 66660, 66661, 66662, 66663, 66664, 66665, 66666, 66667, 66668, 66669, 66670, 66671, 66672, 66673, 66674, 66675, 66676, 66677, 66678, 66679, 66680, 66681, 66682, 66683, 66684, 66685, 66686, 66687, 66688, 66689, 66690, 66691, 66692, 66693, 66694, 66695, 66696, 66697, 66698, 66699, 66700, 66701, 66702, 66703, 66704, 66705, 66706, 66707, 66708, 66709, 66710, 66711, 66712, 66713, 66714, 66715, 66716, 66717, 66816, 66817, 66818, 66819, 66820, 66821, 66822, 66823, 66824, 66825, 66826, 66827, 66828, 66829, 66830, 66831, 66832, 66833, 66834, 66835, 66836, 66837, 66838, 66839, 66840, 66841, 66842, 66843, 66844, 66845, 66846, 66847, 66848, 66849, 66850, 66851, 66852, 66853, 66854, 66855, 66864, 66865, 66866, 66867, 66868, 66869, 66870, 66871, 66872, 66873, 66874, 66875, 66876, 66877, 66878, 66879, 66880, 66881, 66882, 66883, 66884, 66885, 66886, 66887, 66888, 66889, 66890, 66891, 66892, 66893, 66894, 66895, 66896, 66897, 66898, 66899, 66900, 66901, 66902, 66903, 66904, 66905, 66906, 66907, 66908, 66909, 66910, 66911, 66912, 66913, 66914, 66915, 67072, 67073, 67074, 67075, 67076, 67077, 67078, 67079, 67080, 67081, 67082, 67083, 67084, 67085, 67086, 67087, 67088, 67089, 67090, 67091, 67092, 67093, 67094, 67095, 67096, 67097, 67098, 67099, 67100, 67101, 67102, 67103, 67104, 67105, 67106, 67107, 67108, 67109, 67110, 67111, 67112, 67113, 67114, 67115, 67116, 67117, 67118, 67119, 67120, 67121, 67122, 67123, 67124, 67125, 67126, 67127, 67128, 67129, 67130, 67131, 67132, 67133, 67134, 67135, 67136, 67137, 67138, 67139, 67140, 67141, 67142, 67143, 67144, 67145, 67146, 67147, 67148, 67149, 67150, 67151, 67152, 67153, 67154, 67155, 67156, 67157, 67158, 67159, 67160, 67161, 67162, 67163, 67164, 67165, 67166, 67167, 67168, 67169, 67170, 67171, 67172, 67173, 67174, 67175, 67176, 67177, 67178, 67179, 67180, 67181, 67182, 67183, 67184, 67185, 67186, 67187, 67188, 67189, 67190, 67191, 67192, 67193, 67194, 67195, 67196, 67197, 67198, 67199, 67200, 67201, 67202, 67203, 67204, 67205, 67206, 67207, 67208, 67209, 67210, 67211, 67212, 67213, 67214, 67215, 67216, 67217, 67218, 67219, 67220, 67221, 67222, 67223, 67224, 67225, 67226, 67227, 67228, 67229, 67230, 67231, 67232, 67233, 67234, 67235, 67236, 67237, 67238, 67239, 67240, 67241, 67242, 67243, 67244, 67245, 67246, 67247, 67248, 67249, 67250, 67251, 67252, 67253, 67254, 67255, 67256, 67257, 67258, 67259, 67260, 67261, 67262, 67263, 67264, 67265, 67266, 67267, 67268, 67269, 67270, 67271, 67272, 67273, 67274, 67275, 67276, 67277, 67278, 67279, 67280, 67281, 67282, 67283, 67284, 67285, 67286, 67287, 67288, 67289, 67290, 67291, 67292, 67293, 67294, 67295, 67296, 67297, 67298, 67299, 67300, 67301, 67302, 67303, 67304, 67305, 67306, 67307, 67308, 67309, 67310, 67311, 67312, 67313, 67314, 67315, 67316, 67317, 67318, 67319, 67320, 67321, 67322, 67323, 67324, 67325, 67326, 67327, 67328, 67329, 67330, 67331, 67332, 67333, 67334, 67335, 67336, 67337, 67338, 67339, 67340, 67341, 67342, 67343, 67344, 67345, 67346, 67347, 67348, 67349, 67350, 67351, 67352, 67353, 67354, 67355, 67356, 67357, 67358, 67359, 67360, 67361, 67362, 67363, 67364, 67365, 67366, 67367, 67368, 67369, 67370, 67371, 67372, 67373, 67374, 67375, 67376, 67377, 67378, 67379, 67380, 67381, 67382, 67392, 67393, 67394, 67395, 67396, 67397, 67398, 67399, 67400, 67401, 67402, 67403, 67404, 67405, 67406, 67407, 67408, 67409, 67410, 67411, 67412, 67413, 67424, 67425, 67426, 67427, 67428, 67429, 67430, 67431, 67584, 67585, 67586, 67587, 67588, 67589, 67592, 67594, 67595, 67596, 67597, 67598, 67599, 67600, 67601, 67602, 67603, 67604, 67605, 67606, 67607, 67608, 67609, 67610, 67611, 67612, 67613, 67614, 67615, 67616, 67617, 67618, 67619, 67620, 67621, 67622, 67623, 67624, 67625, 67626, 67627, 67628, 67629, 67630, 67631, 67632, 67633, 67634, 67635, 67636, 67637, 67639, 67640, 67644, 67647, 67648, 67649, 67650, 67651, 67652, 67653, 67654, 67655, 67656, 67657, 67658, 67659, 67660, 67661, 67662, 67663, 67664, 67665, 67666, 67667, 67668, 67669, 67680, 67681, 67682, 67683, 67684, 67685, 67686, 67687, 67688, 67689, 67690, 67691, 67692, 67693, 67694, 67695, 67696, 67697, 67698, 67699, 67700, 67701, 67702, 67712, 67713, 67714, 67715, 67716, 67717, 67718, 67719, 67720, 67721, 67722, 67723, 67724, 67725, 67726, 67727, 67728, 67729, 67730, 67731, 67732, 67733, 67734, 67735, 67736, 67737, 67738, 67739, 67740, 67741, 67742, 67808, 67809, 67810, 67811, 67812, 67813, 67814, 67815, 67816, 67817, 67818, 67819, 67820, 67821, 67822, 67823, 67824, 67825, 67826, 67828, 67829, 67840, 67841, 67842, 67843, 67844, 67845, 67846, 67847, 67848, 67849, 67850, 67851, 67852, 67853, 67854, 67855, 67856, 67857, 67858, 67859, 67860, 67861, 67872, 67873, 67874, 67875, 67876, 67877, 67878, 67879, 67880, 67881, 67882, 67883, 67884, 67885, 67886, 67887, 67888, 67889, 67890, 67891, 67892, 67893, 67894, 67895, 67896, 67897, 67968, 67969, 67970, 67971, 67972, 67973, 67974, 67975, 67976, 67977, 67978, 67979, 67980, 67981, 67982, 67983, 67984, 67985, 67986, 67987, 67988, 67989, 67990, 67991, 67992, 67993, 67994, 67995, 67996, 67997, 67998, 67999, 68000, 68001, 68002, 68003, 68004, 68005, 68006, 68007, 68008, 68009, 68010, 68011, 68012, 68013, 68014, 68015, 68016, 68017, 68018, 68019, 68020, 68021, 68022, 68023, 68030, 68031, 68096, 68112, 68113, 68114, 68115, 68117, 68118, 68119, 68121, 68122, 68123, 68124, 68125, 68126, 68127, 68128, 68129, 68130, 68131, 68132, 68133, 68134, 68135, 68136, 68137, 68138, 68139, 68140, 68141, 68142, 68143, 68144, 68145, 68146, 68147, 68192, 68193, 68194, 68195, 68196, 68197, 68198, 68199, 68200, 68201, 68202, 68203, 68204, 68205, 68206, 68207, 68208, 68209, 68210, 68211, 68212, 68213, 68214, 68215, 68216, 68217, 68218, 68219, 68220, 68224, 68225, 68226, 68227, 68228, 68229, 68230, 68231, 68232, 68233, 68234, 68235, 68236, 68237, 68238, 68239, 68240, 68241, 68242, 68243, 68244, 68245, 68246, 68247, 68248, 68249, 68250, 68251, 68252, 68288, 68289, 68290, 68291, 68292, 68293, 68294, 68295, 68297, 68298, 68299, 68300, 68301, 68302, 68303, 68304, 68305, 68306, 68307, 68308, 68309, 68310, 68311, 68312, 68313, 68314, 68315, 68316, 68317, 68318, 68319, 68320, 68321, 68322, 68323, 68324, 68352, 68353, 68354, 68355, 68356, 68357, 68358, 68359, 68360, 68361, 68362, 68363, 68364, 68365, 68366, 68367, 68368, 68369, 68370, 68371, 68372, 68373, 68374, 68375, 68376, 68377, 68378, 68379, 68380, 68381, 68382, 68383, 68384, 68385, 68386, 68387, 68388, 68389, 68390, 68391, 68392, 68393, 68394, 68395, 68396, 68397, 68398, 68399, 68400, 68401, 68402, 68403, 68404, 68405, 68416, 68417, 68418, 68419, 68420, 68421, 68422, 68423, 68424, 68425, 68426, 68427, 68428, 68429, 68430, 68431, 68432, 68433, 68434, 68435, 68436, 68437, 68448, 68449, 68450, 68451, 68452, 68453, 68454, 68455, 68456, 68457, 68458, 68459, 68460, 68461, 68462, 68463, 68464, 68465, 68466, 68480, 68481, 68482, 68483, 68484, 68485, 68486, 68487, 68488, 68489, 68490, 68491, 68492, 68493, 68494, 68495, 68496, 68497, 68608, 68609, 68610, 68611, 68612, 68613, 68614, 68615, 68616, 68617, 68618, 68619, 68620, 68621, 68622, 68623, 68624, 68625, 68626, 68627, 68628, 68629, 68630, 68631, 68632, 68633, 68634, 68635, 68636, 68637, 68638, 68639, 68640, 68641, 68642, 68643, 68644, 68645, 68646, 68647, 68648, 68649, 68650, 68651, 68652, 68653, 68654, 68655, 68656, 68657, 68658, 68659, 68660, 68661, 68662, 68663, 68664, 68665, 68666, 68667, 68668, 68669, 68670, 68671, 68672, 68673, 68674, 68675, 68676, 68677, 68678, 68679, 68680, 68736, 68737, 68738, 68739, 68740, 68741, 68742, 68743, 68744, 68745, 68746, 68747, 68748, 68749, 68750, 68751, 68752, 68753, 68754, 68755, 68756, 68757, 68758, 68759, 68760, 68761, 68762, 68763, 68764, 68765, 68766, 68767, 68768, 68769, 68770, 68771, 68772, 68773, 68774, 68775, 68776, 68777, 68778, 68779, 68780, 68781, 68782, 68783, 68784, 68785, 68786, 68800, 68801, 68802, 68803, 68804, 68805, 68806, 68807, 68808, 68809, 68810, 68811, 68812, 68813, 68814, 68815, 68816, 68817, 68818, 68819, 68820, 68821, 68822, 68823, 68824, 68825, 68826, 68827, 68828, 68829, 68830, 68831, 68832, 68833, 68834, 68835, 68836, 68837, 68838, 68839, 68840, 68841, 68842, 68843, 68844, 68845, 68846, 68847, 68848, 68849, 68850, 69635, 69636, 69637, 69638, 69639, 69640, 69641, 69642, 69643, 69644, 69645, 69646, 69647, 69648, 69649, 69650, 69651, 69652, 69653, 69654, 69655, 69656, 69657, 69658, 69659, 69660, 69661, 69662, 69663, 69664, 69665, 69666, 69667, 69668, 69669, 69670, 69671, 69672, 69673, 69674, 69675, 69676, 69677, 69678, 69679, 69680, 69681, 69682, 69683, 69684, 69685, 69686, 69687, 69763, 69764, 69765, 69766, 69767, 69768, 69769, 69770, 69771, 69772, 69773, 69774, 69775, 69776, 69777, 69778, 69779, 69780, 69781, 69782, 69783, 69784, 69785, 69786, 69787, 69788, 69789, 69790, 69791, 69792, 69793, 69794, 69795, 69796, 69797, 69798, 69799, 69800, 69801, 69802, 69803, 69804, 69805, 69806, 69807, 69840, 69841, 69842, 69843, 69844, 69845, 69846, 69847, 69848, 69849, 69850, 69851, 69852, 69853, 69854, 69855, 69856, 69857, 69858, 69859, 69860, 69861, 69862, 69863, 69864, 69891, 69892, 69893, 69894, 69895, 69896, 69897, 69898, 69899, 69900, 69901, 69902, 69903, 69904, 69905, 69906, 69907, 69908, 69909, 69910, 69911, 69912, 69913, 69914, 69915, 69916, 69917, 69918, 69919, 69920, 69921, 69922, 69923, 69924, 69925, 69926, 69968, 69969, 69970, 69971, 69972, 69973, 69974, 69975, 69976, 69977, 69978, 69979, 69980, 69981, 69982, 69983, 69984, 69985, 69986, 69987, 69988, 69989, 69990, 69991, 69992, 69993, 69994, 69995, 69996, 69997, 69998, 69999, 70000, 70001, 70002, 70006, 70019, 70020, 70021, 70022, 70023, 70024, 70025, 70026, 70027, 70028, 70029, 70030, 70031, 70032, 70033, 70034, 70035, 70036, 70037, 70038, 70039, 70040, 70041, 70042, 70043, 70044, 70045, 70046, 70047, 70048, 70049, 70050, 70051, 70052, 70053, 70054, 70055, 70056, 70057, 70058, 70059, 70060, 70061, 70062, 70063, 70064, 70065, 70066, 70081, 70082, 70083, 70084, 70106, 70108, 70144, 70145, 70146, 70147, 70148, 70149, 70150, 70151, 70152, 70153, 70154, 70155, 70156, 70157, 70158, 70159, 70160, 70161, 70163, 70164, 70165, 70166, 70167, 70168, 70169, 70170, 70171, 70172, 70173, 70174, 70175, 70176, 70177, 70178, 70179, 70180, 70181, 70182, 70183, 70184, 70185, 70186, 70187, 70272, 70273, 70274, 70275, 70276, 70277, 70278, 70280, 70282, 70283, 70284, 70285, 70287, 70288, 70289, 70290, 70291, 70292, 70293, 70294, 70295, 70296, 70297, 70298, 70299, 70300, 70301, 70303, 70304, 70305, 70306, 70307, 70308, 70309, 70310, 70311, 70312, 70320, 70321, 70322, 70323, 70324, 70325, 70326, 70327, 70328, 70329, 70330, 70331, 70332, 70333, 70334, 70335, 70336, 70337, 70338, 70339, 70340, 70341, 70342, 70343, 70344, 70345, 70346, 70347, 70348, 70349, 70350, 70351, 70352, 70353, 70354, 70355, 70356, 70357, 70358, 70359, 70360, 70361, 70362, 70363, 70364, 70365, 70366, 70405, 70406, 70407, 70408, 70409, 70410, 70411, 70412, 70415, 70416, 70419, 70420, 70421, 70422, 70423, 70424, 70425, 70426, 70427, 70428, 70429, 70430, 70431, 70432, 70433, 70434, 70435, 70436, 70437, 70438, 70439, 70440, 70442, 70443, 70444, 70445, 70446, 70447, 70448, 70450, 70451, 70453, 70454, 70455, 70456, 70457, 70461, 70480, 70493, 70494, 70495, 70496, 70497, 70784, 70785, 70786, 70787, 70788, 70789, 70790, 70791, 70792, 70793, 70794, 70795, 70796, 70797, 70798, 70799, 70800, 70801, 70802, 70803, 70804, 70805, 70806, 70807, 70808, 70809, 70810, 70811, 70812, 70813, 70814, 70815, 70816, 70817, 70818, 70819, 70820, 70821, 70822, 70823, 70824, 70825, 70826, 70827, 70828, 70829, 70830, 70831, 70852, 70853, 70855, 71040, 71041, 71042, 71043, 71044, 71045, 71046, 71047, 71048, 71049, 71050, 71051, 71052, 71053, 71054, 71055, 71056, 71057, 71058, 71059, 71060, 71061, 71062, 71063, 71064, 71065, 71066, 71067, 71068, 71069, 71070, 71071, 71072, 71073, 71074, 71075, 71076, 71077, 71078, 71079, 71080, 71081, 71082, 71083, 71084, 71085, 71086, 71128, 71129, 71130, 71131, 71168, 71169, 71170, 71171, 71172, 71173, 71174, 71175, 71176, 71177, 71178, 71179, 71180, 71181, 71182, 71183, 71184, 71185, 71186, 71187, 71188, 71189, 71190, 71191, 71192, 71193, 71194, 71195, 71196, 71197, 71198, 71199, 71200, 71201, 71202, 71203, 71204, 71205, 71206, 71207, 71208, 71209, 71210, 71211, 71212, 71213, 71214, 71215, 71236, 71296, 71297, 71298, 71299, 71300, 71301, 71302, 71303, 71304, 71305, 71306, 71307, 71308, 71309, 71310, 71311, 71312, 71313, 71314, 71315, 71316, 71317, 71318, 71319, 71320, 71321, 71322, 71323, 71324, 71325, 71326, 71327, 71328, 71329, 71330, 71331, 71332, 71333, 71334, 71335, 71336, 71337, 71338, 71424, 71425, 71426, 71427, 71428, 71429, 71430, 71431, 71432, 71433, 71434, 71435, 71436, 71437, 71438, 71439, 71440, 71441, 71442, 71443, 71444, 71445, 71446, 71447, 71448, 71449, 71840, 71841, 71842, 71843, 71844, 71845, 71846, 71847, 71848, 71849, 71850, 71851, 71852, 71853, 71854, 71855, 71856, 71857, 71858, 71859, 71860, 71861, 71862, 71863, 71864, 71865, 71866, 71867, 71868, 71869, 71870, 71871, 71872, 71873, 71874, 71875, 71876, 71877, 71878, 71879, 71880, 71881, 71882, 71883, 71884, 71885, 71886, 71887, 71888, 71889, 71890, 71891, 71892, 71893, 71894, 71895, 71896, 71897, 71898, 71899, 71900, 71901, 71902, 71903, 71935, 72384, 72385, 72386, 72387, 72388, 72389, 72390, 72391, 72392, 72393, 72394, 72395, 72396, 72397, 72398, 72399, 72400, 72401, 72402, 72403, 72404, 72405, 72406, 72407, 72408, 72409, 72410, 72411, 72412, 72413, 72414, 72415, 72416, 72417, 72418, 72419, 72420, 72421, 72422, 72423, 72424, 72425, 72426, 72427, 72428, 72429, 72430, 72431, 72432, 72433, 72434, 72435, 72436, 72437, 72438, 72439, 72440, 73728, 73729, 73730, 73731, 73732, 73733, 73734, 73735, 73736, 73737, 73738, 73739, 73740, 73741, 73742, 73743, 73744, 73745, 73746, 73747, 73748, 73749, 73750, 73751, 73752, 73753, 73754, 73755, 73756, 73757, 73758, 73759, 73760, 73761, 73762, 73763, 73764, 73765, 73766, 73767, 73768, 73769, 73770, 73771, 73772, 73773, 73774, 73775, 73776, 73777, 73778, 73779, 73780, 73781, 73782, 73783, 73784, 73785, 73786, 73787, 73788, 73789, 73790, 73791, 73792, 73793, 73794, 73795, 73796, 73797, 73798, 73799, 73800, 73801, 73802, 73803, 73804, 73805, 73806, 73807, 73808, 73809, 73810, 73811, 73812, 73813, 73814, 73815, 73816, 73817, 73818, 73819, 73820, 73821, 73822, 73823, 73824, 73825, 73826, 73827, 73828, 73829, 73830, 73831, 73832, 73833, 73834, 73835, 73836, 73837, 73838, 73839, 73840, 73841, 73842, 73843, 73844, 73845, 73846, 73847, 73848, 73849, 73850, 73851, 73852, 73853, 73854, 73855, 73856, 73857, 73858, 73859, 73860, 73861, 73862, 73863, 73864, 73865, 73866, 73867, 73868, 73869, 73870, 73871, 73872, 73873, 73874, 73875, 73876, 73877, 73878, 73879, 73880, 73881, 73882, 73883, 73884, 73885, 73886, 73887, 73888, 73889, 73890, 73891, 73892, 73893, 73894, 73895, 73896, 73897, 73898, 73899, 73900, 73901, 73902, 73903, 73904, 73905, 73906, 73907, 73908, 73909, 73910, 73911, 73912, 73913, 73914, 73915, 73916, 73917, 73918, 73919, 73920, 73921, 73922, 73923, 73924, 73925, 73926, 73927, 73928, 73929, 73930, 73931, 73932, 73933, 73934, 73935, 73936, 73937, 73938, 73939, 73940, 73941, 73942, 73943, 73944, 73945, 73946, 73947, 73948, 73949, 73950, 73951, 73952, 73953, 73954, 73955, 73956, 73957, 73958, 73959, 73960, 73961, 73962, 73963, 73964, 73965, 73966, 73967, 73968, 73969, 73970, 73971, 73972, 73973, 73974, 73975, 73976, 73977, 73978, 73979, 73980, 73981, 73982, 73983, 73984, 73985, 73986, 73987, 73988, 73989, 73990, 73991, 73992, 73993, 73994, 73995, 73996, 73997, 73998, 73999, 74000, 74001, 74002, 74003, 74004, 74005, 74006, 74007, 74008, 74009, 74010, 74011, 74012, 74013, 74014, 74015, 74016, 74017, 74018, 74019, 74020, 74021, 74022, 74023, 74024, 74025, 74026, 74027, 74028, 74029, 74030, 74031, 74032, 74033, 74034, 74035, 74036, 74037, 74038, 74039, 74040, 74041, 74042, 74043, 74044, 74045, 74046, 74047, 74048, 74049, 74050, 74051, 74052, 74053, 74054, 74055, 74056, 74057, 74058, 74059, 74060, 74061, 74062, 74063, 74064, 74065, 74066, 74067, 74068, 74069, 74070, 74071, 74072, 74073, 74074, 74075, 74076, 74077, 74078, 74079, 74080, 74081, 74082, 74083, 74084, 74085, 74086, 74087, 74088, 74089, 74090, 74091, 74092, 74093, 74094, 74095, 74096, 74097, 74098, 74099, 74100, 74101, 74102, 74103, 74104, 74105, 74106, 74107, 74108, 74109, 74110, 74111, 74112, 74113, 74114, 74115, 74116, 74117, 74118, 74119, 74120, 74121, 74122, 74123, 74124, 74125, 74126, 74127, 74128, 74129, 74130, 74131, 74132, 74133, 74134, 74135, 74136, 74137, 74138, 74139, 74140, 74141, 74142, 74143, 74144, 74145, 74146, 74147, 74148, 74149, 74150, 74151, 74152, 74153, 74154, 74155, 74156, 74157, 74158, 74159, 74160, 74161, 74162, 74163, 74164, 74165, 74166, 74167, 74168, 74169, 74170, 74171, 74172, 74173, 74174, 74175, 74176, 74177, 74178, 74179, 74180, 74181, 74182, 74183, 74184, 74185, 74186, 74187, 74188, 74189, 74190, 74191, 74192, 74193, 74194, 74195, 74196, 74197, 74198, 74199, 74200, 74201, 74202, 74203, 74204, 74205, 74206, 74207, 74208, 74209, 74210, 74211, 74212, 74213, 74214, 74215, 74216, 74217, 74218, 74219, 74220, 74221, 74222, 74223, 74224, 74225, 74226, 74227, 74228, 74229, 74230, 74231, 74232, 74233, 74234, 74235, 74236, 74237, 74238, 74239, 74240, 74241, 74242, 74243, 74244, 74245, 74246, 74247, 74248, 74249, 74250, 74251, 74252, 74253, 74254, 74255, 74256, 74257, 74258, 74259, 74260, 74261, 74262, 74263, 74264, 74265, 74266, 74267, 74268, 74269, 74270, 74271, 74272, 74273, 74274, 74275, 74276, 74277, 74278, 74279, 74280, 74281, 74282, 74283, 74284, 74285, 74286, 74287, 74288, 74289, 74290, 74291, 74292, 74293, 74294, 74295, 74296, 74297, 74298, 74299, 74300, 74301, 74302, 74303, 74304, 74305, 74306, 74307, 74308, 74309, 74310, 74311, 74312, 74313, 74314, 74315, 74316, 74317, 74318, 74319, 74320, 74321, 74322, 74323, 74324, 74325, 74326, 74327, 74328, 74329, 74330, 74331, 74332, 74333, 74334, 74335, 74336, 74337, 74338, 74339, 74340, 74341, 74342, 74343, 74344, 74345, 74346, 74347, 74348, 74349, 74350, 74351, 74352, 74353, 74354, 74355, 74356, 74357, 74358, 74359, 74360, 74361, 74362, 74363, 74364, 74365, 74366, 74367, 74368, 74369, 74370, 74371, 74372, 74373, 74374, 74375, 74376, 74377, 74378, 74379, 74380, 74381, 74382, 74383, 74384, 74385, 74386, 74387, 74388, 74389, 74390, 74391, 74392, 74393, 74394, 74395, 74396, 74397, 74398, 74399, 74400, 74401, 74402, 74403, 74404, 74405, 74406, 74407, 74408, 74409, 74410, 74411, 74412, 74413, 74414, 74415, 74416, 74417, 74418, 74419, 74420, 74421, 74422, 74423, 74424, 74425, 74426, 74427, 74428, 74429, 74430, 74431, 74432, 74433, 74434, 74435, 74436, 74437, 74438, 74439, 74440, 74441, 74442, 74443, 74444, 74445, 74446, 74447, 74448, 74449, 74450, 74451, 74452, 74453, 74454, 74455, 74456, 74457, 74458, 74459, 74460, 74461, 74462, 74463, 74464, 74465, 74466, 74467, 74468, 74469, 74470, 74471, 74472, 74473, 74474, 74475, 74476, 74477, 74478, 74479, 74480, 74481, 74482, 74483, 74484, 74485, 74486, 74487, 74488, 74489, 74490, 74491, 74492, 74493, 74494, 74495, 74496, 74497, 74498, 74499, 74500, 74501, 74502, 74503, 74504, 74505, 74506, 74507, 74508, 74509, 74510, 74511, 74512, 74513, 74514, 74515, 74516, 74517, 74518, 74519, 74520, 74521, 74522, 74523, 74524, 74525, 74526, 74527, 74528, 74529, 74530, 74531, 74532, 74533, 74534, 74535, 74536, 74537, 74538, 74539, 74540, 74541, 74542, 74543, 74544, 74545, 74546, 74547, 74548, 74549, 74550, 74551, 74552, 74553, 74554, 74555, 74556, 74557, 74558, 74559, 74560, 74561, 74562, 74563, 74564, 74565, 74566, 74567, 74568, 74569, 74570, 74571, 74572, 74573, 74574, 74575, 74576, 74577, 74578, 74579, 74580, 74581, 74582, 74583, 74584, 74585, 74586, 74587, 74588, 74589, 74590, 74591, 74592, 74593, 74594, 74595, 74596, 74597, 74598, 74599, 74600, 74601, 74602, 74603, 74604, 74605, 74606, 74607, 74608, 74609, 74610, 74611, 74612, 74613, 74614, 74615, 74616, 74617, 74618, 74619, 74620, 74621, 74622, 74623, 74624, 74625, 74626, 74627, 74628, 74629, 74630, 74631, 74632, 74633, 74634, 74635, 74636, 74637, 74638, 74639, 74640, 74641, 74642, 74643, 74644, 74645, 74646, 74647, 74648, 74649, 74880, 74881, 74882, 74883, 74884, 74885, 74886, 74887, 74888, 74889, 74890, 74891, 74892, 74893, 74894, 74895, 74896, 74897, 74898, 74899, 74900, 74901, 74902, 74903, 74904, 74905, 74906, 74907, 74908, 74909, 74910, 74911, 74912, 74913, 74914, 74915, 74916, 74917, 74918, 74919, 74920, 74921, 74922, 74923, 74924, 74925, 74926, 74927, 74928, 74929, 74930, 74931, 74932, 74933, 74934, 74935, 74936, 74937, 74938, 74939, 74940, 74941, 74942, 74943, 74944, 74945, 74946, 74947, 74948, 74949, 74950, 74951, 74952, 74953, 74954, 74955, 74956, 74957, 74958, 74959, 74960, 74961, 74962, 74963, 74964, 74965, 74966, 74967, 74968, 74969, 74970, 74971, 74972, 74973, 74974, 74975, 74976, 74977, 74978, 74979, 74980, 74981, 74982, 74983, 74984, 74985, 74986, 74987, 74988, 74989, 74990, 74991, 74992, 74993, 74994, 74995, 74996, 74997, 74998, 74999, 75000, 75001, 75002, 75003, 75004, 75005, 75006, 75007, 75008, 75009, 75010, 75011, 75012, 75013, 75014, 75015, 75016, 75017, 75018, 75019, 75020, 75021, 75022, 75023, 75024, 75025, 75026, 75027, 75028, 75029, 75030, 75031, 75032, 75033, 75034, 75035, 75036, 75037, 75038, 75039, 75040, 75041, 75042, 75043, 75044, 75045, 75046, 75047, 75048, 75049, 75050, 75051, 75052, 75053, 75054, 75055, 75056, 75057, 75058, 75059, 75060, 75061, 75062, 75063, 75064, 75065, 75066, 75067, 75068, 75069, 75070, 75071, 75072, 75073, 75074, 75075, 77824, 77825, 77826, 77827, 77828, 77829, 77830, 77831, 77832, 77833, 77834, 77835, 77836, 77837, 77838, 77839, 77840, 77841, 77842, 77843, 77844, 77845, 77846, 77847, 77848, 77849, 77850, 77851, 77852, 77853, 77854, 77855, 77856, 77857, 77858, 77859, 77860, 77861, 77862, 77863, 77864, 77865, 77866, 77867, 77868, 77869, 77870, 77871, 77872, 77873, 77874, 77875, 77876, 77877, 77878, 77879, 77880, 77881, 77882, 77883, 77884, 77885, 77886, 77887, 77888, 77889, 77890, 77891, 77892, 77893, 77894, 77895, 77896, 77897, 77898, 77899, 77900, 77901, 77902, 77903, 77904, 77905, 77906, 77907, 77908, 77909, 77910, 77911, 77912, 77913, 77914, 77915, 77916, 77917, 77918, 77919, 77920, 77921, 77922, 77923, 77924, 77925, 77926, 77927, 77928, 77929, 77930, 77931, 77932, 77933, 77934, 77935, 77936, 77937, 77938, 77939, 77940, 77941, 77942, 77943, 77944, 77945, 77946, 77947, 77948, 77949, 77950, 77951, 77952, 77953, 77954, 77955, 77956, 77957, 77958, 77959, 77960, 77961, 77962, 77963, 77964, 77965, 77966, 77967, 77968, 77969, 77970, 77971, 77972, 77973, 77974, 77975, 77976, 77977, 77978, 77979, 77980, 77981, 77982, 77983, 77984, 77985, 77986, 77987, 77988, 77989, 77990, 77991, 77992, 77993, 77994, 77995, 77996, 77997, 77998, 77999, 78000, 78001, 78002, 78003, 78004, 78005, 78006, 78007, 78008, 78009, 78010, 78011, 78012, 78013, 78014, 78015, 78016, 78017, 78018, 78019, 78020, 78021, 78022, 78023, 78024, 78025, 78026, 78027, 78028, 78029, 78030, 78031, 78032, 78033, 78034, 78035, 78036, 78037, 78038, 78039, 78040, 78041, 78042, 78043, 78044, 78045, 78046, 78047, 78048, 78049, 78050, 78051, 78052, 78053, 78054, 78055, 78056, 78057, 78058, 78059, 78060, 78061, 78062, 78063, 78064, 78065, 78066, 78067, 78068, 78069, 78070, 78071, 78072, 78073, 78074, 78075, 78076, 78077, 78078, 78079, 78080, 78081, 78082, 78083, 78084, 78085, 78086, 78087, 78088, 78089, 78090, 78091, 78092, 78093, 78094, 78095, 78096, 78097, 78098, 78099, 78100, 78101, 78102, 78103, 78104, 78105, 78106, 78107, 78108, 78109, 78110, 78111, 78112, 78113, 78114, 78115, 78116, 78117, 78118, 78119, 78120, 78121, 78122, 78123, 78124, 78125, 78126, 78127, 78128, 78129, 78130, 78131, 78132, 78133, 78134, 78135, 78136, 78137, 78138, 78139, 78140, 78141, 78142, 78143, 78144, 78145, 78146, 78147, 78148, 78149, 78150, 78151, 78152, 78153, 78154, 78155, 78156, 78157, 78158, 78159, 78160, 78161, 78162, 78163, 78164, 78165, 78166, 78167, 78168, 78169, 78170, 78171, 78172, 78173, 78174, 78175, 78176, 78177, 78178, 78179, 78180, 78181, 78182, 78183, 78184, 78185, 78186, 78187, 78188, 78189, 78190, 78191, 78192, 78193, 78194, 78195, 78196, 78197, 78198, 78199, 78200, 78201, 78202, 78203, 78204, 78205, 78206, 78207, 78208, 78209, 78210, 78211, 78212, 78213, 78214, 78215, 78216, 78217, 78218, 78219, 78220, 78221, 78222, 78223, 78224, 78225, 78226, 78227, 78228, 78229, 78230, 78231, 78232, 78233, 78234, 78235, 78236, 78237, 78238, 78239, 78240, 78241, 78242, 78243, 78244, 78245, 78246, 78247, 78248, 78249, 78250, 78251, 78252, 78253, 78254, 78255, 78256, 78257, 78258, 78259, 78260, 78261, 78262, 78263, 78264, 78265, 78266, 78267, 78268, 78269, 78270, 78271, 78272, 78273, 78274, 78275, 78276, 78277, 78278, 78279, 78280, 78281, 78282, 78283, 78284, 78285, 78286, 78287, 78288, 78289, 78290, 78291, 78292, 78293, 78294, 78295, 78296, 78297, 78298, 78299, 78300, 78301, 78302, 78303, 78304, 78305, 78306, 78307, 78308, 78309, 78310, 78311, 78312, 78313, 78314, 78315, 78316, 78317, 78318, 78319, 78320, 78321, 78322, 78323, 78324, 78325, 78326, 78327, 78328, 78329, 78330, 78331, 78332, 78333, 78334, 78335, 78336, 78337, 78338, 78339, 78340, 78341, 78342, 78343, 78344, 78345, 78346, 78347, 78348, 78349, 78350, 78351, 78352, 78353, 78354, 78355, 78356, 78357, 78358, 78359, 78360, 78361, 78362, 78363, 78364, 78365, 78366, 78367, 78368, 78369, 78370, 78371, 78372, 78373, 78374, 78375, 78376, 78377, 78378, 78379, 78380, 78381, 78382, 78383, 78384, 78385, 78386, 78387, 78388, 78389, 78390, 78391, 78392, 78393, 78394, 78395, 78396, 78397, 78398, 78399, 78400, 78401, 78402, 78403, 78404, 78405, 78406, 78407, 78408, 78409, 78410, 78411, 78412, 78413, 78414, 78415, 78416, 78417, 78418, 78419, 78420, 78421, 78422, 78423, 78424, 78425, 78426, 78427, 78428, 78429, 78430, 78431, 78432, 78433, 78434, 78435, 78436, 78437, 78438, 78439, 78440, 78441, 78442, 78443, 78444, 78445, 78446, 78447, 78448, 78449, 78450, 78451, 78452, 78453, 78454, 78455, 78456, 78457, 78458, 78459, 78460, 78461, 78462, 78463, 78464, 78465, 78466, 78467, 78468, 78469, 78470, 78471, 78472, 78473, 78474, 78475, 78476, 78477, 78478, 78479, 78480, 78481, 78482, 78483, 78484, 78485, 78486, 78487, 78488, 78489, 78490, 78491, 78492, 78493, 78494, 78495, 78496, 78497, 78498, 78499, 78500, 78501, 78502, 78503, 78504, 78505, 78506, 78507, 78508, 78509, 78510, 78511, 78512, 78513, 78514, 78515, 78516, 78517, 78518, 78519, 78520, 78521, 78522, 78523, 78524, 78525, 78526, 78527, 78528, 78529, 78530, 78531, 78532, 78533, 78534, 78535, 78536, 78537, 78538, 78539, 78540, 78541, 78542, 78543, 78544, 78545, 78546, 78547, 78548, 78549, 78550, 78551, 78552, 78553, 78554, 78555, 78556, 78557, 78558, 78559, 78560, 78561, 78562, 78563, 78564, 78565, 78566, 78567, 78568, 78569, 78570, 78571, 78572, 78573, 78574, 78575, 78576, 78577, 78578, 78579, 78580, 78581, 78582, 78583, 78584, 78585, 78586, 78587, 78588, 78589, 78590, 78591, 78592, 78593, 78594, 78595, 78596, 78597, 78598, 78599, 78600, 78601, 78602, 78603, 78604, 78605, 78606, 78607, 78608, 78609, 78610, 78611, 78612, 78613, 78614, 78615, 78616, 78617, 78618, 78619, 78620, 78621, 78622, 78623, 78624, 78625, 78626, 78627, 78628, 78629, 78630, 78631, 78632, 78633, 78634, 78635, 78636, 78637, 78638, 78639, 78640, 78641, 78642, 78643, 78644, 78645, 78646, 78647, 78648, 78649, 78650, 78651, 78652, 78653, 78654, 78655, 78656, 78657, 78658, 78659, 78660, 78661, 78662, 78663, 78664, 78665, 78666, 78667, 78668, 78669, 78670, 78671, 78672, 78673, 78674, 78675, 78676, 78677, 78678, 78679, 78680, 78681, 78682, 78683, 78684, 78685, 78686, 78687, 78688, 78689, 78690, 78691, 78692, 78693, 78694, 78695, 78696, 78697, 78698, 78699, 78700, 78701, 78702, 78703, 78704, 78705, 78706, 78707, 78708, 78709, 78710, 78711, 78712, 78713, 78714, 78715, 78716, 78717, 78718, 78719, 78720, 78721, 78722, 78723, 78724, 78725, 78726, 78727, 78728, 78729, 78730, 78731, 78732, 78733, 78734, 78735, 78736, 78737, 78738, 78739, 78740, 78741, 78742, 78743, 78744, 78745, 78746, 78747, 78748, 78749, 78750, 78751, 78752, 78753, 78754, 78755, 78756, 78757, 78758, 78759, 78760, 78761, 78762, 78763, 78764, 78765, 78766, 78767, 78768, 78769, 78770, 78771, 78772, 78773, 78774, 78775, 78776, 78777, 78778, 78779, 78780, 78781, 78782, 78783, 78784, 78785, 78786, 78787, 78788, 78789, 78790, 78791, 78792, 78793, 78794, 78795, 78796, 78797, 78798, 78799, 78800, 78801, 78802, 78803, 78804, 78805, 78806, 78807, 78808, 78809, 78810, 78811, 78812, 78813, 78814, 78815, 78816, 78817, 78818, 78819, 78820, 78821, 78822, 78823, 78824, 78825, 78826, 78827, 78828, 78829, 78830, 78831, 78832, 78833, 78834, 78835, 78836, 78837, 78838, 78839, 78840, 78841, 78842, 78843, 78844, 78845, 78846, 78847, 78848, 78849, 78850, 78851, 78852, 78853, 78854, 78855, 78856, 78857, 78858, 78859, 78860, 78861, 78862, 78863, 78864, 78865, 78866, 78867, 78868, 78869, 78870, 78871, 78872, 78873, 78874, 78875, 78876, 78877, 78878, 78879, 78880, 78881, 78882, 78883, 78884, 78885, 78886, 78887, 78888, 78889, 78890, 78891, 78892, 78893, 78894, 82944, 82945, 82946, 82947, 82948, 82949, 82950, 82951, 82952, 82953, 82954, 82955, 82956, 82957, 82958, 82959, 82960, 82961, 82962, 82963, 82964, 82965, 82966, 82967, 82968, 82969, 82970, 82971, 82972, 82973, 82974, 82975, 82976, 82977, 82978, 82979, 82980, 82981, 82982, 82983, 82984, 82985, 82986, 82987, 82988, 82989, 82990, 82991, 82992, 82993, 82994, 82995, 82996, 82997, 82998, 82999, 83000, 83001, 83002, 83003, 83004, 83005, 83006, 83007, 83008, 83009, 83010, 83011, 83012, 83013, 83014, 83015, 83016, 83017, 83018, 83019, 83020, 83021, 83022, 83023, 83024, 83025, 83026, 83027, 83028, 83029, 83030, 83031, 83032, 83033, 83034, 83035, 83036, 83037, 83038, 83039, 83040, 83041, 83042, 83043, 83044, 83045, 83046, 83047, 83048, 83049, 83050, 83051, 83052, 83053, 83054, 83055, 83056, 83057, 83058, 83059, 83060, 83061, 83062, 83063, 83064, 83065, 83066, 83067, 83068, 83069, 83070, 83071, 83072, 83073, 83074, 83075, 83076, 83077, 83078, 83079, 83080, 83081, 83082, 83083, 83084, 83085, 83086, 83087, 83088, 83089, 83090, 83091, 83092, 83093, 83094, 83095, 83096, 83097, 83098, 83099, 83100, 83101, 83102, 83103, 83104, 83105, 83106, 83107, 83108, 83109, 83110, 83111, 83112, 83113, 83114, 83115, 83116, 83117, 83118, 83119, 83120, 83121, 83122, 83123, 83124, 83125, 83126, 83127, 83128, 83129, 83130, 83131, 83132, 83133, 83134, 83135, 83136, 83137, 83138, 83139, 83140, 83141, 83142, 83143, 83144, 83145, 83146, 83147, 83148, 83149, 83150, 83151, 83152, 83153, 83154, 83155, 83156, 83157, 83158, 83159, 83160, 83161, 83162, 83163, 83164, 83165, 83166, 83167, 83168, 83169, 83170, 83171, 83172, 83173, 83174, 83175, 83176, 83177, 83178, 83179, 83180, 83181, 83182, 83183, 83184, 83185, 83186, 83187, 83188, 83189, 83190, 83191, 83192, 83193, 83194, 83195, 83196, 83197, 83198, 83199, 83200, 83201, 83202, 83203, 83204, 83205, 83206, 83207, 83208, 83209, 83210, 83211, 83212, 83213, 83214, 83215, 83216, 83217, 83218, 83219, 83220, 83221, 83222, 83223, 83224, 83225, 83226, 83227, 83228, 83229, 83230, 83231, 83232, 83233, 83234, 83235, 83236, 83237, 83238, 83239, 83240, 83241, 83242, 83243, 83244, 83245, 83246, 83247, 83248, 83249, 83250, 83251, 83252, 83253, 83254, 83255, 83256, 83257, 83258, 83259, 83260, 83261, 83262, 83263, 83264, 83265, 83266, 83267, 83268, 83269, 83270, 83271, 83272, 83273, 83274, 83275, 83276, 83277, 83278, 83279, 83280, 83281, 83282, 83283, 83284, 83285, 83286, 83287, 83288, 83289, 83290, 83291, 83292, 83293, 83294, 83295, 83296, 83297, 83298, 83299, 83300, 83301, 83302, 83303, 83304, 83305, 83306, 83307, 83308, 83309, 83310, 83311, 83312, 83313, 83314, 83315, 83316, 83317, 83318, 83319, 83320, 83321, 83322, 83323, 83324, 83325, 83326, 83327, 83328, 83329, 83330, 83331, 83332, 83333, 83334, 83335, 83336, 83337, 83338, 83339, 83340, 83341, 83342, 83343, 83344, 83345, 83346, 83347, 83348, 83349, 83350, 83351, 83352, 83353, 83354, 83355, 83356, 83357, 83358, 83359, 83360, 83361, 83362, 83363, 83364, 83365, 83366, 83367, 83368, 83369, 83370, 83371, 83372, 83373, 83374, 83375, 83376, 83377, 83378, 83379, 83380, 83381, 83382, 83383, 83384, 83385, 83386, 83387, 83388, 83389, 83390, 83391, 83392, 83393, 83394, 83395, 83396, 83397, 83398, 83399, 83400, 83401, 83402, 83403, 83404, 83405, 83406, 83407, 83408, 83409, 83410, 83411, 83412, 83413, 83414, 83415, 83416, 83417, 83418, 83419, 83420, 83421, 83422, 83423, 83424, 83425, 83426, 83427, 83428, 83429, 83430, 83431, 83432, 83433, 83434, 83435, 83436, 83437, 83438, 83439, 83440, 83441, 83442, 83443, 83444, 83445, 83446, 83447, 83448, 83449, 83450, 83451, 83452, 83453, 83454, 83455, 83456, 83457, 83458, 83459, 83460, 83461, 83462, 83463, 83464, 83465, 83466, 83467, 83468, 83469, 83470, 83471, 83472, 83473, 83474, 83475, 83476, 83477, 83478, 83479, 83480, 83481, 83482, 83483, 83484, 83485, 83486, 83487, 83488, 83489, 83490, 83491, 83492, 83493, 83494, 83495, 83496, 83497, 83498, 83499, 83500, 83501, 83502, 83503, 83504, 83505, 83506, 83507, 83508, 83509, 83510, 83511, 83512, 83513, 83514, 83515, 83516, 83517, 83518, 83519, 83520, 83521, 83522, 83523, 83524, 83525, 83526, 92160, 92161, 92162, 92163, 92164, 92165, 92166, 92167, 92168, 92169, 92170, 92171, 92172, 92173, 92174, 92175, 92176, 92177, 92178, 92179, 92180, 92181, 92182, 92183, 92184, 92185, 92186, 92187, 92188, 92189, 92190, 92191, 92192, 92193, 92194, 92195, 92196, 92197, 92198, 92199, 92200, 92201, 92202, 92203, 92204, 92205, 92206, 92207, 92208, 92209, 92210, 92211, 92212, 92213, 92214, 92215, 92216, 92217, 92218, 92219, 92220, 92221, 92222, 92223, 92224, 92225, 92226, 92227, 92228, 92229, 92230, 92231, 92232, 92233, 92234, 92235, 92236, 92237, 92238, 92239, 92240, 92241, 92242, 92243, 92244, 92245, 92246, 92247, 92248, 92249, 92250, 92251, 92252, 92253, 92254, 92255, 92256, 92257, 92258, 92259, 92260, 92261, 92262, 92263, 92264, 92265, 92266, 92267, 92268, 92269, 92270, 92271, 92272, 92273, 92274, 92275, 92276, 92277, 92278, 92279, 92280, 92281, 92282, 92283, 92284, 92285, 92286, 92287, 92288, 92289, 92290, 92291, 92292, 92293, 92294, 92295, 92296, 92297, 92298, 92299, 92300, 92301, 92302, 92303, 92304, 92305, 92306, 92307, 92308, 92309, 92310, 92311, 92312, 92313, 92314, 92315, 92316, 92317, 92318, 92319, 92320, 92321, 92322, 92323, 92324, 92325, 92326, 92327, 92328, 92329, 92330, 92331, 92332, 92333, 92334, 92335, 92336, 92337, 92338, 92339, 92340, 92341, 92342, 92343, 92344, 92345, 92346, 92347, 92348, 92349, 92350, 92351, 92352, 92353, 92354, 92355, 92356, 92357, 92358, 92359, 92360, 92361, 92362, 92363, 92364, 92365, 92366, 92367, 92368, 92369, 92370, 92371, 92372, 92373, 92374, 92375, 92376, 92377, 92378, 92379, 92380, 92381, 92382, 92383, 92384, 92385, 92386, 92387, 92388, 92389, 92390, 92391, 92392, 92393, 92394, 92395, 92396, 92397, 92398, 92399, 92400, 92401, 92402, 92403, 92404, 92405, 92406, 92407, 92408, 92409, 92410, 92411, 92412, 92413, 92414, 92415, 92416, 92417, 92418, 92419, 92420, 92421, 92422, 92423, 92424, 92425, 92426, 92427, 92428, 92429, 92430, 92431, 92432, 92433, 92434, 92435, 92436, 92437, 92438, 92439, 92440, 92441, 92442, 92443, 92444, 92445, 92446, 92447, 92448, 92449, 92450, 92451, 92452, 92453, 92454, 92455, 92456, 92457, 92458, 92459, 92460, 92461, 92462, 92463, 92464, 92465, 92466, 92467, 92468, 92469, 92470, 92471, 92472, 92473, 92474, 92475, 92476, 92477, 92478, 92479, 92480, 92481, 92482, 92483, 92484, 92485, 92486, 92487, 92488, 92489, 92490, 92491, 92492, 92493, 92494, 92495, 92496, 92497, 92498, 92499, 92500, 92501, 92502, 92503, 92504, 92505, 92506, 92507, 92508, 92509, 92510, 92511, 92512, 92513, 92514, 92515, 92516, 92517, 92518, 92519, 92520, 92521, 92522, 92523, 92524, 92525, 92526, 92527, 92528, 92529, 92530, 92531, 92532, 92533, 92534, 92535, 92536, 92537, 92538, 92539, 92540, 92541, 92542, 92543, 92544, 92545, 92546, 92547, 92548, 92549, 92550, 92551, 92552, 92553, 92554, 92555, 92556, 92557, 92558, 92559, 92560, 92561, 92562, 92563, 92564, 92565, 92566, 92567, 92568, 92569, 92570, 92571, 92572, 92573, 92574, 92575, 92576, 92577, 92578, 92579, 92580, 92581, 92582, 92583, 92584, 92585, 92586, 92587, 92588, 92589, 92590, 92591, 92592, 92593, 92594, 92595, 92596, 92597, 92598, 92599, 92600, 92601, 92602, 92603, 92604, 92605, 92606, 92607, 92608, 92609, 92610, 92611, 92612, 92613, 92614, 92615, 92616, 92617, 92618, 92619, 92620, 92621, 92622, 92623, 92624, 92625, 92626, 92627, 92628, 92629, 92630, 92631, 92632, 92633, 92634, 92635, 92636, 92637, 92638, 92639, 92640, 92641, 92642, 92643, 92644, 92645, 92646, 92647, 92648, 92649, 92650, 92651, 92652, 92653, 92654, 92655, 92656, 92657, 92658, 92659, 92660, 92661, 92662, 92663, 92664, 92665, 92666, 92667, 92668, 92669, 92670, 92671, 92672, 92673, 92674, 92675, 92676, 92677, 92678, 92679, 92680, 92681, 92682, 92683, 92684, 92685, 92686, 92687, 92688, 92689, 92690, 92691, 92692, 92693, 92694, 92695, 92696, 92697, 92698, 92699, 92700, 92701, 92702, 92703, 92704, 92705, 92706, 92707, 92708, 92709, 92710, 92711, 92712, 92713, 92714, 92715, 92716, 92717, 92718, 92719, 92720, 92721, 92722, 92723, 92724, 92725, 92726, 92727, 92728, 92736, 92737, 92738, 92739, 92740, 92741, 92742, 92743, 92744, 92745, 92746, 92747, 92748, 92749, 92750, 92751, 92752, 92753, 92754, 92755, 92756, 92757, 92758, 92759, 92760, 92761, 92762, 92763, 92764, 92765, 92766, 92880, 92881, 92882, 92883, 92884, 92885, 92886, 92887, 92888, 92889, 92890, 92891, 92892, 92893, 92894, 92895, 92896, 92897, 92898, 92899, 92900, 92901, 92902, 92903, 92904, 92905, 92906, 92907, 92908, 92909, 92928, 92929, 92930, 92931, 92932, 92933, 92934, 92935, 92936, 92937, 92938, 92939, 92940, 92941, 92942, 92943, 92944, 92945, 92946, 92947, 92948, 92949, 92950, 92951, 92952, 92953, 92954, 92955, 92956, 92957, 92958, 92959, 92960, 92961, 92962, 92963, 92964, 92965, 92966, 92967, 92968, 92969, 92970, 92971, 92972, 92973, 92974, 92975, 92992, 92993, 92994, 92995, 93027, 93028, 93029, 93030, 93031, 93032, 93033, 93034, 93035, 93036, 93037, 93038, 93039, 93040, 93041, 93042, 93043, 93044, 93045, 93046, 93047, 93053, 93054, 93055, 93056, 93057, 93058, 93059, 93060, 93061, 93062, 93063, 93064, 93065, 93066, 93067, 93068, 93069, 93070, 93071, 93952, 93953, 93954, 93955, 93956, 93957, 93958, 93959, 93960, 93961, 93962, 93963, 93964, 93965, 93966, 93967, 93968, 93969, 93970, 93971, 93972, 93973, 93974, 93975, 93976, 93977, 93978, 93979, 93980, 93981, 93982, 93983, 93984, 93985, 93986, 93987, 93988, 93989, 93990, 93991, 93992, 93993, 93994, 93995, 93996, 93997, 93998, 93999, 94000, 94001, 94002, 94003, 94004, 94005, 94006, 94007, 94008, 94009, 94010, 94011, 94012, 94013, 94014, 94015, 94016, 94017, 94018, 94019, 94020, 94032, 94099, 94100, 94101, 94102, 94103, 94104, 94105, 94106, 94107, 94108, 94109, 94110, 94111, 110592, 110593, 113664, 113665, 113666, 113667, 113668, 113669, 113670, 113671, 113672, 113673, 113674, 113675, 113676, 113677, 113678, 113679, 113680, 113681, 113682, 113683, 113684, 113685, 113686, 113687, 113688, 113689, 113690, 113691, 113692, 113693, 113694, 113695, 113696, 113697, 113698, 113699, 113700, 113701, 113702, 113703, 113704, 113705, 113706, 113707, 113708, 113709, 113710, 113711, 113712, 113713, 113714, 113715, 113716, 113717, 113718, 113719, 113720, 113721, 113722, 113723, 113724, 113725, 113726, 113727, 113728, 113729, 113730, 113731, 113732, 113733, 113734, 113735, 113736, 113737, 113738, 113739, 113740, 113741, 113742, 113743, 113744, 113745, 113746, 113747, 113748, 113749, 113750, 113751, 113752, 113753, 113754, 113755, 113756, 113757, 113758, 113759, 113760, 113761, 113762, 113763, 113764, 113765, 113766, 113767, 113768, 113769, 113770, 113776, 113777, 113778, 113779, 113780, 113781, 113782, 113783, 113784, 113785, 113786, 113787, 113788, 113792, 113793, 113794, 113795, 113796, 113797, 113798, 113799, 113800, 113808, 113809, 113810, 113811, 113812, 113813, 113814, 113815, 113816, 113817, 119808, 119809, 119810, 119811, 119812, 119813, 119814, 119815, 119816, 119817, 119818, 119819, 119820, 119821, 119822, 119823, 119824, 119825, 119826, 119827, 119828, 119829, 119830, 119831, 119832, 119833, 119834, 119835, 119836, 119837, 119838, 119839, 119840, 119841, 119842, 119843, 119844, 119845, 119846, 119847, 119848, 119849, 119850, 119851, 119852, 119853, 119854, 119855, 119856, 119857, 119858, 119859, 119860, 119861, 119862, 119863, 119864, 119865, 119866, 119867, 119868, 119869, 119870, 119871, 119872, 119873, 119874, 119875, 119876, 119877, 119878, 119879, 119880, 119881, 119882, 119883, 119884, 119885, 119886, 119887, 119888, 119889, 119890, 119891, 119892, 119894, 119895, 119896, 119897, 119898, 119899, 119900, 119901, 119902, 119903, 119904, 119905, 119906, 119907, 119908, 119909, 119910, 119911, 119912, 119913, 119914, 119915, 119916, 119917, 119918, 119919, 119920, 119921, 119922, 119923, 119924, 119925, 119926, 119927, 119928, 119929, 119930, 119931, 119932, 119933, 119934, 119935, 119936, 119937, 119938, 119939, 119940, 119941, 119942, 119943, 119944, 119945, 119946, 119947, 119948, 119949, 119950, 119951, 119952, 119953, 119954, 119955, 119956, 119957, 119958, 119959, 119960, 119961, 119962, 119963, 119964, 119966, 119967, 119970, 119973, 119974, 119977, 119978, 119979, 119980, 119982, 119983, 119984, 119985, 119986, 119987, 119988, 119989, 119990, 119991, 119992, 119993, 119995, 119997, 119998, 119999, 120000, 120001, 120002, 120003, 120005, 120006, 120007, 120008, 120009, 120010, 120011, 120012, 120013, 120014, 120015, 120016, 120017, 120018, 120019, 120020, 120021, 120022, 120023, 120024, 120025, 120026, 120027, 120028, 120029, 120030, 120031, 120032, 120033, 120034, 120035, 120036, 120037, 120038, 120039, 120040, 120041, 120042, 120043, 120044, 120045, 120046, 120047, 120048, 120049, 120050, 120051, 120052, 120053, 120054, 120055, 120056, 120057, 120058, 120059, 120060, 120061, 120062, 120063, 120064, 120065, 120066, 120067, 120068, 120069, 120071, 120072, 120073, 120074, 120077, 120078, 120079, 120080, 120081, 120082, 120083, 120084, 120086, 120087, 120088, 120089, 120090, 120091, 120092, 120094, 120095, 120096, 120097, 120098, 120099, 120100, 120101, 120102, 120103, 120104, 120105, 120106, 120107, 120108, 120109, 120110, 120111, 120112, 120113, 120114, 120115, 120116, 120117, 120118, 120119, 120120, 120121, 120123, 120124, 120125, 120126, 120128, 120129, 120130, 120131, 120132, 120134, 120138, 120139, 120140, 120141, 120142, 120143, 120144, 120146, 120147, 120148, 120149, 120150, 120151, 120152, 120153, 120154, 120155, 120156, 120157, 120158, 120159, 120160, 120161, 120162, 120163, 120164, 120165, 120166, 120167, 120168, 120169, 120170, 120171, 120172, 120173, 120174, 120175, 120176, 120177, 120178, 120179, 120180, 120181, 120182, 120183, 120184, 120185, 120186, 120187, 120188, 120189, 120190, 120191, 120192, 120193, 120194, 120195, 120196, 120197, 120198, 120199, 120200, 120201, 120202, 120203, 120204, 120205, 120206, 120207, 120208, 120209, 120210, 120211, 120212, 120213, 120214, 120215, 120216, 120217, 120218, 120219, 120220, 120221, 120222, 120223, 120224, 120225, 120226, 120227, 120228, 120229, 120230, 120231, 120232, 120233, 120234, 120235, 120236, 120237, 120238, 120239, 120240, 120241, 120242, 120243, 120244, 120245, 120246, 120247, 120248, 120249, 120250, 120251, 120252, 120253, 120254, 120255, 120256, 120257, 120258, 120259, 120260, 120261, 120262, 120263, 120264, 120265, 120266, 120267, 120268, 120269, 120270, 120271, 120272, 120273, 120274, 120275, 120276, 120277, 120278, 120279, 120280, 120281, 120282, 120283, 120284, 120285, 120286, 120287, 120288, 120289, 120290, 120291, 120292, 120293, 120294, 120295, 120296, 120297, 120298, 120299, 120300, 120301, 120302, 120303, 120304, 120305, 120306, 120307, 120308, 120309, 120310, 120311, 120312, 120313, 120314, 120315, 120316, 120317, 120318, 120319, 120320, 120321, 120322, 120323, 120324, 120325, 120326, 120327, 120328, 120329, 120330, 120331, 120332, 120333, 120334, 120335, 120336, 120337, 120338, 120339, 120340, 120341, 120342, 120343, 120344, 120345, 120346, 120347, 120348, 120349, 120350, 120351, 120352, 120353, 120354, 120355, 120356, 120357, 120358, 120359, 120360, 120361, 120362, 120363, 120364, 120365, 120366, 120367, 120368, 120369, 120370, 120371, 120372, 120373, 120374, 120375, 120376, 120377, 120378, 120379, 120380, 120381, 120382, 120383, 120384, 120385, 120386, 120387, 120388, 120389, 120390, 120391, 120392, 120393, 120394, 120395, 120396, 120397, 120398, 120399, 120400, 120401, 120402, 120403, 120404, 120405, 120406, 120407, 120408, 120409, 120410, 120411, 120412, 120413, 120414, 120415, 120416, 120417, 120418, 120419, 120420, 120421, 120422, 120423, 120424, 120425, 120426, 120427, 120428, 120429, 120430, 120431, 120432, 120433, 120434, 120435, 120436, 120437, 120438, 120439, 120440, 120441, 120442, 120443, 120444, 120445, 120446, 120447, 120448, 120449, 120450, 120451, 120452, 120453, 120454, 120455, 120456, 120457, 120458, 120459, 120460, 120461, 120462, 120463, 120464, 120465, 120466, 120467, 120468, 120469, 120470, 120471, 120472, 120473, 120474, 120475, 120476, 120477, 120478, 120479, 120480, 120481, 120482, 120483, 120484, 120485, 120488, 120489, 120490, 120491, 120492, 120493, 120494, 120495, 120496, 120497, 120498, 120499, 120500, 120501, 120502, 120503, 120504, 120505, 120506, 120507, 120508, 120509, 120510, 120511, 120512, 120514, 120515, 120516, 120517, 120518, 120519, 120520, 120521, 120522, 120523, 120524, 120525, 120526, 120527, 120528, 120529, 120530, 120531, 120532, 120533, 120534, 120535, 120536, 120537, 120538, 120540, 120541, 120542, 120543, 120544, 120545, 120546, 120547, 120548, 120549, 120550, 120551, 120552, 120553, 120554, 120555, 120556, 120557, 120558, 120559, 120560, 120561, 120562, 120563, 120564, 120565, 120566, 120567, 120568, 120569, 120570, 120572, 120573, 120574, 120575, 120576, 120577, 120578, 120579, 120580, 120581, 120582, 120583, 120584, 120585, 120586, 120587, 120588, 120589, 120590, 120591, 120592, 120593, 120594, 120595, 120596, 120598, 120599, 120600, 120601, 120602, 120603, 120604, 120605, 120606, 120607, 120608, 120609, 120610, 120611, 120612, 120613, 120614, 120615, 120616, 120617, 120618, 120619, 120620, 120621, 120622, 120623, 120624, 120625, 120626, 120627, 120628, 120630, 120631, 120632, 120633, 120634, 120635, 120636, 120637, 120638, 120639, 120640, 120641, 120642, 120643, 120644, 120645, 120646, 120647, 120648, 120649, 120650, 120651, 120652, 120653, 120654, 120656, 120657, 120658, 120659, 120660, 120661, 120662, 120663, 120664, 120665, 120666, 120667, 120668, 120669, 120670, 120671, 120672, 120673, 120674, 120675, 120676, 120677, 120678, 120679, 120680, 120681, 120682, 120683, 120684, 120685, 120686, 120688, 120689, 120690, 120691, 120692, 120693, 120694, 120695, 120696, 120697, 120698, 120699, 120700, 120701, 120702, 120703, 120704, 120705, 120706, 120707, 120708, 120709, 120710, 120711, 120712, 120714, 120715, 120716, 120717, 120718, 120719, 120720, 120721, 120722, 120723, 120724, 120725, 120726, 120727, 120728, 120729, 120730, 120731, 120732, 120733, 120734, 120735, 120736, 120737, 120738, 120739, 120740, 120741, 120742, 120743, 120744, 120746, 120747, 120748, 120749, 120750, 120751, 120752, 120753, 120754, 120755, 120756, 120757, 120758, 120759, 120760, 120761, 120762, 120763, 120764, 120765, 120766, 120767, 120768, 120769, 120770, 120772, 120773, 120774, 120775, 120776, 120777, 120778, 120779, 124928, 124929, 124930, 124931, 124932, 124933, 124934, 124935, 124936, 124937, 124938, 124939, 124940, 124941, 124942, 124943, 124944, 124945, 124946, 124947, 124948, 124949, 124950, 124951, 124952, 124953, 124954, 124955, 124956, 124957, 124958, 124959, 124960, 124961, 124962, 124963, 124964, 124965, 124966, 124967, 124968, 124969, 124970, 124971, 124972, 124973, 124974, 124975, 124976, 124977, 124978, 124979, 124980, 124981, 124982, 124983, 124984, 124985, 124986, 124987, 124988, 124989, 124990, 124991, 124992, 124993, 124994, 124995, 124996, 124997, 124998, 124999, 125000, 125001, 125002, 125003, 125004, 125005, 125006, 125007, 125008, 125009, 125010, 125011, 125012, 125013, 125014, 125015, 125016, 125017, 125018, 125019, 125020, 125021, 125022, 125023, 125024, 125025, 125026, 125027, 125028, 125029, 125030, 125031, 125032, 125033, 125034, 125035, 125036, 125037, 125038, 125039, 125040, 125041, 125042, 125043, 125044, 125045, 125046, 125047, 125048, 125049, 125050, 125051, 125052, 125053, 125054, 125055, 125056, 125057, 125058, 125059, 125060, 125061, 125062, 125063, 125064, 125065, 125066, 125067, 125068, 125069, 125070, 125071, 125072, 125073, 125074, 125075, 125076, 125077, 125078, 125079, 125080, 125081, 125082, 125083, 125084, 125085, 125086, 125087, 125088, 125089, 125090, 125091, 125092, 125093, 125094, 125095, 125096, 125097, 125098, 125099, 125100, 125101, 125102, 125103, 125104, 125105, 125106, 125107, 125108, 125109, 125110, 125111, 125112, 125113, 125114, 125115, 125116, 125117, 125118, 125119, 125120, 125121, 125122, 125123, 125124, 126464, 126465, 126466, 126467, 126469, 126470, 126471, 126472, 126473, 126474, 126475, 126476, 126477, 126478, 126479, 126480, 126481, 126482, 126483, 126484, 126485, 126486, 126487, 126488, 126489, 126490, 126491, 126492, 126493, 126494, 126495, 126497, 126498, 126500, 126503, 126505, 126506, 126507, 126508, 126509, 126510, 126511, 126512, 126513, 126514, 126516, 126517, 126518, 126519, 126521, 126523, 126530, 126535, 126537, 126539, 126541, 126542, 126543, 126545, 126546, 126548, 126551, 126553, 126555, 126557, 126559, 126561, 126562, 126564, 126567, 126568, 126569, 126570, 126572, 126573, 126574, 126575, 126576, 126577, 126578, 126580, 126581, 126582, 126583, 126585, 126586, 126587, 126588, 126590, 126592, 126593, 126594, 126595, 126596, 126597, 126598, 126599, 126600, 126601, 126603, 126604, 126605, 126606, 126607, 126608, 126609, 126610, 126611, 126612, 126613, 126614, 126615, 126616, 126617, 126618, 126619, 126625, 126626, 126627, 126629, 126630, 126631, 126632, 126633, 126635, 126636, 126637, 126638, 126639, 126640, 126641, 126642, 126643, 126644, 126645, 126646, 126647, 126648, 126649, 126650, 126651, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 194560, 194561, 194562, 194563, 194564, 194565, 194566, 194567, 194568, 194569, 194570, 194571, 194572, 194573, 194574, 194575, 194576, 194577, 194578, 194579, 194580, 194581, 194582, 194583, 194584, 194585, 194586, 194587, 194588, 194589, 194590, 194591, 194592, 194593, 194594, 194595, 194596, 194597, 194598, 194599, 194600, 194601, 194602, 194603, 194604, 194605, 194606, 194607, 194608, 194609, 194610, 194611, 194612, 194613, 194614, 194615, 194616, 194617, 194618, 194619, 194620, 194621, 194622, 194623, 194624, 194625, 194626, 194627, 194628, 194629, 194630, 194631, 194632, 194633, 194634, 194635, 194636, 194637, 194638, 194639, 194640, 194641, 194642, 194643, 194644, 194645, 194646, 194647, 194648, 194649, 194650, 194651, 194652, 194653, 194654, 194655, 194656, 194657, 194658, 194659, 194660, 194661, 194662, 194663, 194664, 194665, 194666, 194667, 194668, 194669, 194670, 194671, 194672, 194673, 194674, 194675, 194676, 194677, 194678, 194679, 194680, 194681, 194682, 194683, 194684, 194685, 194686, 194687, 194688, 194689, 194690, 194691, 194692, 194693, 194694, 194695, 194696, 194697, 194698, 194699, 194700, 194701, 194702, 194703, 194704, 194705, 194706, 194707, 194708, 194709, 194710, 194711, 194712, 194713, 194714, 194715, 194716, 194717, 194718, 194719, 194720, 194721, 194722, 194723, 194724, 194725, 194726, 194727, 194728, 194729, 194730, 194731, 194732, 194733, 194734, 194735, 194736, 194737, 194738, 194739, 194740, 194741, 194742, 194743, 194744, 194745, 194746, 194747, 194748, 194749, 194750, 194751, 194752, 194753, 194754, 194755, 194756, 194757, 194758, 194759, 194760, 194761, 194762, 194763, 194764, 194765, 194766, 194767, 194768, 194769, 194770, 194771, 194772, 194773, 194774, 194775, 194776, 194777, 194778, 194779, 194780, 194781, 194782, 194783, 194784, 194785, 194786, 194787, 194788, 194789, 194790, 194791, 194792, 194793, 194794, 194795, 194796, 194797, 194798, 194799, 194800, 194801, 194802, 194803, 194804, 194805, 194806, 194807, 194808, 194809, 194810, 194811, 194812, 194813, 194814, 194815, 194816, 194817, 194818, 194819, 194820, 194821, 194822, 194823, 194824, 194825, 194826, 194827, 194828, 194829, 194830, 194831, 194832, 194833, 194834, 194835, 194836, 194837, 194838, 194839, 194840, 194841, 194842, 194843, 194844, 194845, 194846, 194847, 194848, 194849, 194850, 194851, 194852, 194853, 194854, 194855, 194856, 194857, 194858, 194859, 194860, 194861, 194862, 194863, 194864, 194865, 194866, 194867, 194868, 194869, 194870, 194871, 194872, 194873, 194874, 194875, 194876, 194877, 194878, 194879, 194880, 194881, 194882, 194883, 194884, 194885, 194886, 194887, 194888, 194889, 194890, 194891, 194892, 194893, 194894, 194895, 194896, 194897, 194898, 194899, 194900, 194901, 194902, 194903, 194904, 194905, 194906, 194907, 194908, 194909, 194910, 194911, 194912, 194913, 194914, 194915, 194916, 194917, 194918, 194919, 194920, 194921, 194922, 194923, 194924, 194925, 194926, 194927, 194928, 194929, 194930, 194931, 194932, 194933, 194934, 194935, 194936, 194937, 194938, 194939, 194940, 194941, 194942, 194943, 194944, 194945, 194946, 194947, 194948, 194949, 194950, 194951, 194952, 194953, 194954, 194955, 194956, 194957, 194958, 194959, 194960, 194961, 194962, 194963, 194964, 194965, 194966, 194967, 194968, 194969, 194970, 194971, 194972, 194973, 194974, 194975, 194976, 194977, 194978, 194979, 194980, 194981, 194982, 194983, 194984, 194985, 194986, 194987, 194988, 194989, 194990, 194991, 194992, 194993, 194994, 194995, 194996, 194997, 194998, 194999, 195000, 195001, 195002, 195003, 195004, 195005, 195006, 195007, 195008, 195009, 195010, 195011, 195012, 195013, 195014, 195015, 195016, 195017, 195018, 195019, 195020, 195021, 195022, 195023, 195024, 195025, 195026, 195027, 195028, 195029, 195030, 195031, 195032, 195033, 195034, 195035, 195036, 195037, 195038, 195039, 195040, 195041, 195042, 195043, 195044, 195045, 195046, 195047, 195048, 195049, 195050, 195051, 195052, 195053, 195054, 195055, 195056, 195057, 195058, 195059, 195060, 195061, 195062, 195063, 195064, 195065, 195066, 195067, 195068, 195069, 195070, 195071, 195072, 195073, 195074, 195075, 195076, 195077, 195078, 195079, 195080, 195081, 195082, 195083, 195084, 195085, 195086, 195087, 195088, 195089, 195090, 195091, 195092, 195093, 195094, 195095, 195096, 195097, 195098, 195099, 195100, 195101];\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _clone = _interopRequireDefault(require(\"clone\"));\n\nvar _uslug = _interopRequireDefault(require(\"uslug\"));\n\nvar _token = _interopRequireDefault(require(\"markdown-it/lib/token\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TOC = \"@[toc]\";\nvar TOC_RE = /^@\\[toc\\]/im;\n\nvar markdownItSecondInstance = function markdownItSecondInstance() {};\n\nvar headingIds = {};\nvar tocHtml = \"\";\n\nvar repeat = function repeat(string, num) {\n  return new Array(num + 1).join(string);\n};\n\nvar makeSafe = function makeSafe(string, headingIds, slugifyFn) {\n  var key = slugifyFn(string); // slugify\n\n  if (!headingIds[key]) {\n    headingIds[key] = 0;\n  }\n\n  headingIds[key]++;\n  return key + (headingIds[key] > 1 ? \"-\".concat(headingIds[key]) : \"\");\n};\n\nvar space = function space() {\n  return _objectSpread({}, new _token.default(\"text\", \"\", 0), {\n    content: \" \"\n  });\n};\n\nvar renderAnchorLinkSymbol = function renderAnchorLinkSymbol(options) {\n  if (options.anchorLinkSymbolClassName) {\n    return [_objectSpread({}, new _token.default(\"span_open\", \"span\", 1), {\n      attrs: [[\"class\", options.anchorLinkSymbolClassName]]\n    }), _objectSpread({}, new _token.default(\"text\", \"\", 0), {\n      content: options.anchorLinkSymbol\n    }), new _token.default(\"span_close\", \"span\", -1)];\n  } else {\n    return [_objectSpread({}, new _token.default(\"text\", \"\", 0), {\n      content: options.anchorLinkSymbol\n    })];\n  }\n};\n\nvar renderAnchorLink = function renderAnchorLink(anchor, options, tokens, idx) {\n  var attrs = [];\n\n  if (options.anchorClassName != null) {\n    attrs.push([\"class\", options.anchorClassName]);\n  }\n\n  attrs.push([\"href\", \"#\".concat(anchor)]);\n\n  var openLinkToken = _objectSpread({}, new _token.default(\"link_open\", \"a\", 1), {\n    attrs: attrs\n  });\n\n  var closeLinkToken = new _token.default(\"link_close\", \"a\", -1);\n\n  if (options.wrapHeadingTextInAnchor) {\n    tokens[idx + 1].children.unshift(openLinkToken);\n    tokens[idx + 1].children.push(closeLinkToken);\n  } else {\n    var _tokens$children;\n\n    var linkTokens = [openLinkToken].concat(_toConsumableArray(renderAnchorLinkSymbol(options)), [closeLinkToken]); // `push` or `unshift` according to anchorLinkBefore option\n    // space is at the opposite side.\n\n    var actionOnArray = {\n      false: \"push\",\n      true: \"unshift\"\n    }; // insert space between anchor link and heading ?\n\n    if (options.anchorLinkSpace) {\n      linkTokens[actionOnArray[!options.anchorLinkBefore]](space());\n    }\n\n    (_tokens$children = tokens[idx + 1].children)[actionOnArray[options.anchorLinkBefore]].apply(_tokens$children, _toConsumableArray(linkTokens));\n  }\n};\n\nvar treeToMarkdownBulletList = function treeToMarkdownBulletList(tree) {\n  var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return tree.map(function (item) {\n    var indentation = \"  \";\n    var node = \"\".concat(repeat(indentation, indent), \"*\");\n\n    if (item.heading.content) {\n      var contentWithoutAnchor = item.heading.content.replace(/\\[([^\\]]*)\\]\\([^)]*\\)/g, \"$1\");\n      node += \" \" + \"[\".concat(contentWithoutAnchor, \"](#\").concat(item.heading.anchor, \")\\n\");\n    } else {\n      node += \"\\n\";\n    }\n\n    if (item.nodes.length) {\n      node += treeToMarkdownBulletList(item.nodes, indent + 1);\n    }\n\n    return node;\n  }).join(\"\");\n};\n\nvar generateTocMarkdownFromArray = function generateTocMarkdownFromArray(headings, options) {\n  var tree = {\n    nodes: []\n  }; // create an ast\n\n  headings.forEach(function (heading) {\n    if (heading.level < options.tocFirstLevel || heading.level > options.tocLastLevel) {\n      return;\n    }\n\n    var i = 1;\n    var lastItem = tree;\n\n    for (; i < heading.level - options.tocFirstLevel + 1; i++) {\n      if (lastItem.nodes.length === 0) {\n        lastItem.nodes.push({\n          heading: {},\n          nodes: []\n        });\n      }\n\n      lastItem = lastItem.nodes[lastItem.nodes.length - 1];\n    }\n\n    lastItem.nodes.push({\n      heading: heading,\n      nodes: []\n    });\n  });\n  return treeToMarkdownBulletList(tree.nodes);\n};\n\nfunction _default(md, options) {\n  options = _objectSpread({\n    toc: true,\n    tocClassName: \"markdownIt-TOC\",\n    tocFirstLevel: 1,\n    tocLastLevel: 6,\n    tocCallback: null,\n    anchorLink: true,\n    anchorLinkSymbol: \"#\",\n    anchorLinkBefore: true,\n    anchorClassName: \"markdownIt-Anchor\",\n    resetIds: true,\n    anchorLinkSpace: true,\n    anchorLinkSymbolClassName: null,\n    wrapHeadingTextInAnchor: false\n  }, options);\n  markdownItSecondInstance = (0, _clone.default)(md); // initialize key ids for each instance\n\n  headingIds = {};\n  md.core.ruler.push(\"init_toc\", function (state) {\n    var tokens = state.tokens; // reset key ids for each document\n\n    if (options.resetIds) {\n      headingIds = {};\n    }\n\n    var tocArray = [];\n    var tocMarkdown = \"\";\n    var tocTokens = [];\n    var slugifyFn = typeof options.slugify === \"function\" && options.slugify || _uslug.default;\n\n    for (var i = 0; i < tokens.length; i++) {\n      if (tokens[i].type !== \"heading_close\") {\n        continue;\n      }\n\n      var heading = tokens[i - 1];\n      var heading_close = tokens[i];\n\n      if (heading.type === \"inline\") {\n        var content = void 0;\n\n        if (heading.children && heading.children.length > 0 && heading.children[0].type === \"link_open\") {\n          // headings that contain links have to be processed\n          // differently since nested links aren't allowed in markdown\n          content = heading.children[1].content;\n          heading._tocAnchor = makeSafe(content, headingIds, slugifyFn);\n        } else {\n          content = heading.content;\n          heading._tocAnchor = makeSafe(heading.children.reduce(function (acc, t) {\n            return acc + t.content;\n          }, \"\"), headingIds, slugifyFn);\n        }\n\n        if (options.anchorLinkPrefix) {\n          heading._tocAnchor = options.anchorLinkPrefix + heading._tocAnchor;\n        }\n\n        tocArray.push({\n          content: content,\n          anchor: heading._tocAnchor,\n          level: +heading_close.tag.substr(1, 1)\n        });\n      }\n    }\n\n    tocMarkdown = generateTocMarkdownFromArray(tocArray, options);\n    tocTokens = markdownItSecondInstance.parse(tocMarkdown, {}); // Adding tocClassName to 'ul' element\n\n    if (_typeof(tocTokens[0]) === \"object\" && tocTokens[0].type === \"bullet_list_open\") {\n      var attrs = tocTokens[0].attrs = tocTokens[0].attrs || [];\n\n      if (options.tocClassName != null) {\n        attrs.push([\"class\", options.tocClassName]);\n      }\n    }\n\n    tocHtml = markdownItSecondInstance.renderer.render(tocTokens, markdownItSecondInstance.options);\n\n    if (typeof state.env.tocCallback === \"function\") {\n      state.env.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    } else if (typeof options.tocCallback === \"function\") {\n      options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    } else if (typeof md.options.tocCallback === \"function\") {\n      md.options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    }\n  });\n  md.inline.ruler.after(\"emphasis\", \"toc\", function (state, silent) {\n    var token;\n    var match;\n\n    if ( // Reject if the token does not start with @[\n    state.src.charCodeAt(state.pos) !== 0x40 || state.src.charCodeAt(state.pos + 1) !== 0x5b || // Don’t run any pairs in validation mode\n    silent) {\n      return false;\n    } // Detect TOC markdown\n\n\n    match = TOC_RE.exec(state.src);\n    match = !match ? [] : match.filter(function (m) {\n      return m;\n    });\n\n    if (match.length < 1) {\n      return false;\n    } // Build content\n\n\n    token = state.push(\"toc_open\", \"toc\", 1);\n    token.markup = TOC;\n    token = state.push(\"toc_body\", \"\", 0);\n    token = state.push(\"toc_close\", \"toc\", -1); // Update pos so the parser can continue\n\n    state.pos = state.pos + 6;\n    return true;\n  });\n\n  var originalHeadingOpen = md.renderer.rules.heading_open || function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var tokens = args[0],\n        idx = args[1],\n        options = args[2],\n        self = args[4];\n    return self.renderToken(tokens, idx, options);\n  };\n\n  md.renderer.rules.heading_open = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var tokens = args[0],\n        idx = args[1];\n    var attrs = tokens[idx].attrs = tokens[idx].attrs || [];\n    var anchor = tokens[idx + 1]._tocAnchor;\n    attrs.push([\"id\", anchor]);\n\n    if (options.anchorLink) {\n      renderAnchorLink.apply(void 0, [anchor, options].concat(args));\n    }\n\n    return originalHeadingOpen.apply(this, args);\n  };\n\n  md.renderer.rules.toc_open = function () {\n    return \"\";\n  };\n\n  md.renderer.rules.toc_close = function () {\n    return \"\";\n  };\n\n  md.renderer.rules.toc_body = function () {\n    return \"\";\n  };\n\n  if (options.toc) {\n    md.renderer.rules.toc_body = function () {\n      return tocHtml;\n    };\n  }\n}","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  // Compile regexp\n  var names = Object.keys(emojies)\n                .map(function (name) { return ':' + name + ':'; })\n                .concat(Object.keys(shortcuts))\n                .sort()\n                .reverse()\n                .map(function (name) { return quoteRE(name); })\n                .join('|');\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"katex\"] = factory();\n\telse\n\t\troot[\"katex\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/katex.less\nvar katex = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/SourceLocation.js\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation =\n/*#__PURE__*/\nfunction () {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  function SourceLocation(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  SourceLocation.range = function range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  };\n\n  return SourceLocation;\n}();\n\n\n// CONCATENATED MODULE: ./src/Token.js\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nvar Token_Token =\n/*#__PURE__*/\nfunction () {\n  function Token(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.range = function range(endToken, // last token of the range, inclusive\n  text) // the text of the newly constructed token\n  {\n    return new Token(text, SourceLocation.range(this, endToken));\n  };\n\n  return Token;\n}();\n// CONCATENATED MODULE: ./src/ParseError.js\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError = // Error position based on passed-in Token or ParseNode.\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n  this.position = void 0;\n  var error = \"KaTeX parse error: \" + message;\n  var start;\n  var loc = token && token.loc;\n\n  if (loc && loc.start <= loc.end) {\n    // If we have the input and a position, make the error a bit fancier\n    // Get the input\n    var input = loc.lexer.input; // Prepend some information\n\n    start = loc.start;\n    var end = loc.end;\n\n    if (start === input.length) {\n      error += \" at end of input: \";\n    } else {\n      error += \" at position \" + (start + 1) + \": \";\n    } // Underline token in question using combining underscores\n\n\n    var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n    var left;\n\n    if (start > 15) {\n      left = \"…\" + input.slice(start - 15, start);\n    } else {\n      left = input.slice(0, start);\n    }\n\n    var right;\n\n    if (end + 15 < input.length) {\n      right = input.slice(end, end + 15) + \"…\";\n    } else {\n      right = input.slice(end);\n    }\n\n    error += left + underlined + right;\n  } // Some hackery to make ParseError a prototype of Error\n  // See http://stackoverflow.com/a/8460753\n\n\n  var self = new Error(error);\n  self.name = \"ParseError\"; // $FlowFixMe\n\n  self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n  self.position = start;\n  return self;\n}; // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n/* harmony default export */ var src_ParseError = (ParseError);\n// CONCATENATED MODULE: ./src/utils.js\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction utils_escape(text) {\n  return String(text).replace(ESCAPE_REGEX, function (match) {\n    return ESCAPE_LOOKUP[match];\n  });\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar utils_isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/* harmony default export */ var utils = ({\n  contains: contains,\n  deflt: deflt,\n  escape: utils_escape,\n  hyphenate: hyphenate,\n  getBaseElem: getBaseElem,\n  isCharacterBox: utils_isCharacterBox\n});\n// CONCATENATED MODULE: ./src/Settings.js\n/* eslint no-console:0 */\n\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings_Settings =\n/*#__PURE__*/\nfunction () {\n  function Settings(options) {\n    this.displayMode = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.allowedProtocols = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.allowedProtocols = utils.deflt(options.allowedProtocols, [\"http\", \"https\", \"mailto\", \"_relative\"]);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  var _proto = Settings.prototype;\n\n  _proto.reportNonstrict = function reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new src_ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n  ;\n\n  _proto.useStrictBehavior = function useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  };\n\n  return Settings;\n}();\n\n/* harmony default export */ var src_Settings = (Settings_Settings);\n// CONCATENATED MODULE: ./src/Style.js\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style =\n/*#__PURE__*/\nfunction () {\n  function Style(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  var _proto = Style.prototype;\n\n  _proto.sup = function sup() {\n    return Style_styles[_sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n  ;\n\n  _proto.sub = function sub() {\n    return Style_styles[_sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracNum = function fracNum() {\n    return Style_styles[_fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n  ;\n\n  _proto.fracDen = function fracDen() {\n    return Style_styles[_fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n  ;\n\n  _proto.cramp = function cramp() {\n    return Style_styles[_cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n  ;\n\n  _proto.text = function text() {\n    return Style_styles[_text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n  ;\n\n  _proto.isTight = function isTight() {\n    return this.size >= 2;\n  };\n\n  return Style;\n}(); // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar Style_styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\n/* harmony default export */ var src_Style = ({\n  DISPLAY: Style_styles[D],\n  TEXT: Style_styles[T],\n  SCRIPT: Style_styles[S],\n  SCRIPTSCRIPT: Style_styles[SS]\n});\n// CONCATENATED MODULE: ./src/unicodeScripts.js\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f]]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60]]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(function (s) {\n  return s.blocks.forEach(function (b) {\n    return allBlocks.push.apply(allBlocks, b);\n  });\n});\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n// CONCATENATED MODULE: ./src/svgGeometry.js\n/**\n * This file provides support to domTree.js\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt viniculum.\n\nvar svgGeometry_path = {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  // All surds have 80 units padding above the viniculumn.\n  sqrtMain: \"M95,\" + (622 + hLinePad) + \"c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\\ns-65,47,-65,47z M834 \" + hLinePad + \"H400000v40H845z\",\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  sqrtSize1: \"M263,\" + (601 + hLinePad) + \"c0.7,0,18,39.7,52,119c34,79.3,68.167,\\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\\ns76,-59,76,-59s76,-60,76,-60z M1001 \" + hLinePad + \"H40000v40H1012z\",\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  // The 80 units padding is most obvious here. Note start node at M1001 80.\n  sqrtSize2: \"M1001,\" + hLinePad + \"H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\\nM1001 \" + hLinePad + \"H400000v40H1013z\",\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  sqrtSize3: \"M424,\" + (2398 + hLinePad) + \"c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M1001 \" + hLinePad + \"H400000v40H1014z\",\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  sqrtSize4: \"M473,\" + (2713 + hLinePad) + \"c339.3,-1799.3,509.3,-2700,510,-2702\\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\\nM1001 \" + hLinePad + \"H400000v40H1017z\",\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n/* harmony default export */ var svgGeometry = ({\n  path: svgGeometry_path\n});\n// CONCATENATED MODULE: ./src/tree.js\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nvar tree_DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  function DocumentFragment(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  var _proto = DocumentFragment.prototype;\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n  ;\n\n  _proto.toNode = function toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = function toText(child) {\n      return child.toText();\n    };\n\n    return this.children.map(toText).join(\"\");\n  };\n\n  return DocumentFragment;\n}();\n// CONCATENATED MODULE: ./src/domTree.js\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(function (cls) {\n    return cls;\n  }).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar _toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nvar _toMarkup = function toMarkup(tagName) {\n  var markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  var styles = \"\"; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nvar domTree_Span =\n/*#__PURE__*/\nfunction () {\n  function Span(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  var _proto = Span.prototype;\n\n  _proto.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto.toNode = function toNode() {\n    return _toNode.call(this, \"span\");\n  };\n\n  _proto.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, \"span\");\n  };\n\n  return Span;\n}();\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nvar domTree_Anchor =\n/*#__PURE__*/\nfunction () {\n  function Anchor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  var _proto2 = Anchor.prototype;\n\n  _proto2.setAttribute = function setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  };\n\n  _proto2.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  };\n\n  _proto2.toNode = function toNode() {\n    return _toNode.call(this, \"a\");\n  };\n\n  _proto2.toMarkup = function toMarkup() {\n    return _toMarkup.call(this, \"a\");\n  };\n\n  return Anchor;\n}();\nvar iCombinations = {\n  'î': \"\\u0131\\u0302\",\n  'ï': \"\\u0131\\u0308\",\n  'í': \"\\u0131\\u0301\",\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': \"\\u0131\\u0300\"\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nvar domTree_SymbolNode =\n/*#__PURE__*/\nfunction () {\n  function SymbolNode(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  var _proto3 = SymbolNode.prototype;\n\n  _proto3.hasClass = function hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n  ;\n\n  _proto3.toNode = function toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n  ;\n\n  _proto3.toMarkup = function toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  };\n\n  return SymbolNode;\n}();\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nvar SvgNode =\n/*#__PURE__*/\nfunction () {\n  function SvgNode(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  var _proto4 = SvgNode.prototype;\n\n  _proto4.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  };\n\n  _proto4.toMarkup = function toMarkup() {\n    var markup = \"<svg\"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  };\n\n  return SvgNode;\n}();\nvar domTree_PathNode =\n/*#__PURE__*/\nfunction () {\n  function PathNode(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for tall \\sqrt\n  }\n\n  var _proto5 = PathNode.prototype;\n\n  _proto5.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", svgGeometry.path[this.pathName]);\n    }\n\n    return node;\n  };\n\n  _proto5.toMarkup = function toMarkup() {\n    if (this.alternate) {\n      return \"<path d='\" + this.alternate + \"'/>\";\n    } else {\n      return \"<path d='\" + svgGeometry.path[this.pathName] + \"'/>\";\n    }\n  };\n\n  return PathNode;\n}();\nvar LineNode =\n/*#__PURE__*/\nfunction () {\n  function LineNode(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  var _proto6 = LineNode.prototype;\n\n  _proto6.toNode = function toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  };\n\n  _proto6.toMarkup = function toMarkup() {\n    var markup = \"<line\";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  };\n\n  return LineNode;\n}();\nfunction assertSymbolDomNode(group) {\n  if (group instanceof domTree_SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof domTree_Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n// CONCATENATED MODULE: ./submodules/katex-fonts/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n  \"AMS-Regular\": {\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n  },\n  \"Fraktur-Regular\": {\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333]\n  },\n  \"Math-Italic\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"Math-Regular\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"SansSerif-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n  },\n  \"Size1-Regular\": {\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n});\n// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2]\n}; // This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ç': 'C',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ç': 'c',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  var ch = character.charCodeAt(0);\n\n  if (character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n  }\n\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n// CONCATENATED MODULE: ./src/symbols.js\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nvar NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nvar symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font: font,\n    group: group,\n    replace: replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar symbols_math = \"math\";\nvar symbols_text = \"text\"; // fonts:\n\nvar main = \"main\";\nvar ams = \"ams\"; // groups:\n\nvar symbols_accent = \"accent-token\";\nvar bin = \"bin\";\nvar symbols_close = \"close\";\nvar symbols_inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar symbols_open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar symbols_textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(symbols_math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227A\", \"\\\\prec\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227B\", \"\\\\succ\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u223C\", \"\\\\sim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A5\", \"\\\\perp\");\ndefineSymbol(symbols_math, main, rel, \"\\u2AAF\", \"\\\\preceq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2AB0\", \"\\\\succeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226A\", \"\\\\ll\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226B\", \"\\\\gg\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u224D\", \"\\\\asymp\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\bowtie\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\ni\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u221D\", \"\\\\propto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A2\", \"\\\\vdash\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A3\", \"\\\\dashv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(symbols_math, main, punct, \".\", \"\\\\ldotp\");\ndefineSymbol(symbols_math, main, punct, \"\\u22C5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(symbols_math, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_text, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_math, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_text, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u210F\", \"\\\\hbar\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266D\", \"\\\\flat\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266E\", \"\\\\natural\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266F\", \"\\\\sharp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u211C\", \"\\\\Re\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xA7\", \"\\\\S\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB6\", \"\\\\P\", true); // Math and Text\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(symbols_math, main, symbols_close, \"\\u23B1\", \"\\\\rmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u23B0\", \"\\\\lmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27EF\", \"\\\\rgroup\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27EE\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(symbols_math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u228E\", \"\\\\uplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(symbols_math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25EF\", \"\\\\bigcirc\");\ndefineSymbol(symbols_math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(symbols_math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2A3F\", \"\\\\amalg\");\ndefineSymbol(symbols_math, main, bin, \"&\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(symbols_math, main, rel, \"\\u27F5\", \"\\\\longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D0\", \"\\\\Leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F6\", \"\\\\longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D2\", \"\\\\Rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FA\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A6\", \"\\\\mapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FC\", \"\\\\longmapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21AA\", \"\\\\hookrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BC\", \"\\\\leftharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BD\", \"\\\\leftharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21CC\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, \"\\u226E\", \"\\\\nless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE010\", \"\\\\nleqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE011\", \"\\\\nleqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A87\", \"\\\\lneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00C\", \"\\\\lvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E6\", \"\\\\lnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A89\", \"\\\\lnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u22E0\", \"\\\\npreceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E8\", \"\\\\precnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB9\", \"\\\\precnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE006\", \"\\\\nshortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AC\", \"\\\\nvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AD\", \"\\\\nvDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EA\", \"\\\\ntriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22EC\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228A\", \"\\\\subsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01A\", \"\\\\varsubsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACB\", \"\\\\subsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE017\", \"\\\\varsubsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226F\", \"\\\\ngtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00F\", \"\\\\ngeqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE00E\", \"\\\\ngeqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A88\", \"\\\\gneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00D\", \"\\\\gvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E7\", \"\\\\gnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8A\", \"\\\\gnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u22E1\", \"\\\\nsucceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E9\", \"\\\\succnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2ABA\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE007\", \"\\\\nshortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AF\", \"\\\\nVDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EB\", \"\\\\ntriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22ED\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE018\", \"\\\\nsupseteqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u228B\", \"\\\\supsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01B\", \"\\\\varsupsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACC\", \"\\\\supsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE019\", \"\\\\varsupsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22AE\", \"\\\\nVdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB5\", \"\\\\precneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB6\", \"\\\\succneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE016\", \"\\\\nsubseteqq\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B4\", \"\\\\unlhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(symbols_math, ams, rel, \"\\u219A\", \"\\\\nleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219B\", \"\\\\nrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CD\", \"\\\\nLeftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CF\", \"\\\\nRightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AE\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CE\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(symbols_math, ams, rel, \"\\u25B3\", \"\\\\vartriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u210F\", \"\\\\hslash\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BD\", \"\\\\triangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\lozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u24C8\", \"\\\\circledS\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"k\", \"\\\\Bbbk\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25B2\", \"\\\\blacktriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BC\", \"\\\\blacktriangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A0\", \"\\\\blacksquare\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u29EB\", \"\\\\blacklozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xF0\", \"\\\\eth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\square\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\Box\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03DD\", \"\\\\digamma\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03F0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u250C\", \"\\\\ulcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2518\", \"\\\\lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7D\", \"\\\\leqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A95\", \"\\\\eqslantless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A85\", \"\\\\lessapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224A\", \"\\\\approxeq\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D6\", \"\\\\lessdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\lll\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DA\", \"\\\\lesseqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8B\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223D\", \"\\\\backsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22CD\", \"\\\\backsimeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC5\", \"\\\\subseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D0\", \"\\\\Subset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228F\", \"\\\\sqsubset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227C\", \"\\\\preccurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DE\", \"\\\\curlyeqprec\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227E\", \"\\\\precsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB7\", \"\\\\precapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B2\", \"\\\\vartriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B4\", \"\\\\trianglelefteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A8\", \"\\\\vDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AA\", \"\\\\Vvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(symbols_math, ams, rel, \"\\u224F\", \"\\\\bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224E\", \"\\\\Bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7E\", \"\\\\geqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A86\", \"\\\\gtrapprox\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D7\", \"\\\\gtrdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\ggg\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DB\", \"\\\\gtreqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8C\", \"\\\\gtreqqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u225C\", \"\\\\triangleq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223C\", \"\\\\thicksim\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC6\", \"\\\\supseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D1\", \"\\\\Supset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227D\", \"\\\\succcurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DF\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227F\", \"\\\\succsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB8\", \"\\\\succapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B3\", \"\\\\vartriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B5\", \"\\\\trianglerighteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A9\", \"\\\\Vdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226C\", \"\\\\between\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D4\", \"\\\\pitchfork\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u221D\", \"\\\\varpropto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25C0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u220D\", \"\\\\backepsilon\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25B6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\llless\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\gggtr\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B2\", \"\\\\lhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B3\", \"\\\\rhd\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\Join\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(symbols_math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\Cap\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\Cup\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2A5E\", \"\\\\doublebarwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229F\", \"\\\\boxminus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229E\", \"\\\\boxplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C7\", \"\\\\divideontimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C9\", \"\\\\ltimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CA\", \"\\\\rtimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CB\", \"\\\\leftthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CC\", \"\\\\rightthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CF\", \"\\\\curlywedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CE\", \"\\\\curlyvee\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229D\", \"\\\\circleddash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229B\", \"\\\\circledast\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C5\", \"\\\\centerdot\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BA\", \"\\\\intercal\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\doublecap\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\doublecup\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22A0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21E2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21E0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DA\", \"\\\\Lleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219E\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AB\", \"\\\\looparrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CB\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21BA\", \"\\\\circlearrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B0\", \"\\\\Lsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C8\", \"\\\\upuparrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BF\", \"\\\\upharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B8\", \"\\\\multimap\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AD\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AC\", \"\\\\looparrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(symbols_math, ams, rel, \"\\u21BB\", \"\\\\circlearrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B1\", \"\\\\Rsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CA\", \"\\\\downdownarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\upharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C2\", \"\\\\downharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\leadsto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u21DB\", \"\\\\Rrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\restriction\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_math, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(symbols_math, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_text, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_math, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221E\", \"\\\\infty\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u25B3\", \"\\\\triangle\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039B\", \"\\\\Lambda\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039E\", \"\\\\Xi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A0\", \"\\\\Pi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A3\", \"\\\\Sigma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A5\", \"\\\\Upsilon\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A6\", \"\\\\Phi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A8\", \"\\\\Psi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A9\", \"\\\\Omega\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"A\", \"\\u0391\");\ndefineSymbol(symbols_math, main, symbols_textord, \"B\", \"\\u0392\");\ndefineSymbol(symbols_math, main, symbols_textord, \"E\", \"\\u0395\");\ndefineSymbol(symbols_math, main, symbols_textord, \"Z\", \"\\u0396\");\ndefineSymbol(symbols_math, main, symbols_textord, \"H\", \"\\u0397\");\ndefineSymbol(symbols_math, main, symbols_textord, \"I\", \"\\u0399\");\ndefineSymbol(symbols_math, main, symbols_textord, \"K\", \"\\u039A\");\ndefineSymbol(symbols_math, main, symbols_textord, \"M\", \"\\u039C\");\ndefineSymbol(symbols_math, main, symbols_textord, \"N\", \"\\u039D\");\ndefineSymbol(symbols_math, main, symbols_textord, \"O\", \"\\u039F\");\ndefineSymbol(symbols_math, main, symbols_textord, \"P\", \"\\u03A1\");\ndefineSymbol(symbols_math, main, symbols_textord, \"T\", \"\\u03A4\");\ndefineSymbol(symbols_math, main, symbols_textord, \"X\", \"\\u03A7\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\neg\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\lnot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A4\", \"\\\\top\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A5\", \"\\\\bot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(symbols_math, main, mathord, \"\\u03B1\", \"\\\\alpha\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B2\", \"\\\\beta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B3\", \"\\\\gamma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B4\", \"\\\\delta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F5\", \"\\\\epsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B6\", \"\\\\zeta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B7\", \"\\\\eta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B8\", \"\\\\theta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B9\", \"\\\\iota\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BA\", \"\\\\kappa\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BB\", \"\\\\lambda\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BC\", \"\\\\mu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BD\", \"\\\\nu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BE\", \"\\\\xi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BF\", \"\\\\omicron\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C0\", \"\\\\pi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C1\", \"\\\\rho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C3\", \"\\\\sigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C4\", \"\\\\tau\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C5\", \"\\\\upsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D5\", \"\\\\phi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C7\", \"\\\\chi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C8\", \"\\\\psi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C9\", \"\\\\omega\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B5\", \"\\\\varepsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D1\", \"\\\\vartheta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D6\", \"\\\\varpi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F1\", \"\\\\varrho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C2\", \"\\\\varsigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C6\", \"\\\\varphi\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(symbols_math, main, bin, \"+\", \"+\");\ndefineSymbol(symbols_math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C5\", \"\\\\cdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(symbols_math, main, bin, \"\\xF7\", \"\\\\div\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xB1\", \"\\\\pm\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xD7\", \"\\\\times\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u222A\", \"\\\\cup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221A\", \"\\\\surd\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"(\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"[\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27E8\", \"\\\\langle\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \")\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"]\");\ndefineSymbol(symbols_math, main, symbols_close, \"?\", \"?\");\ndefineSymbol(symbols_math, main, symbols_close, \"!\", \"!\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27E9\", \"\\\\rangle\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(symbols_math, main, rel, \"=\", \"=\");\ndefineSymbol(symbols_math, main, rel, \"<\", \"<\");\ndefineSymbol(symbols_math, main, rel, \">\", \">\");\ndefineSymbol(symbols_math, main, rel, \":\", \":\");\ndefineSymbol(symbols_math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(symbols_math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(symbols_math, main, rel, \"\\uE020\", \"\\\\@not\");\ndefineSymbol(symbols_math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A8\", \"\\\\models\");\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(symbols_math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\space\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(symbols_math, main, punct, \",\", \",\");\ndefineSymbol(symbols_math, main, punct, \";\", \";\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BC\", \"\\\\barwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22BB\", \"\\\\veebar\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229A\", \"\\\\circledcirc\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22A1\", \"\\\\boxdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25B3\", \"\\\\bigtriangleup\");\ndefineSymbol(symbols_math, main, bin, \"\\u25BD\", \"\\\\bigtriangledown\");\ndefineSymbol(symbols_math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C4\", \"\\\\diamond\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C6\", \"\\\\star\");\ndefineSymbol(symbols_math, main, bin, \"\\u25C3\", \"\\\\triangleleft\");\ndefineSymbol(symbols_math, main, bin, \"\\u25B9\", \"\\\\triangleright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\lbrace\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\rbrace\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"\\\\lparen\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \"\\\\rparen\");\ndefineSymbol(symbols_text, main, symbols_textord, \"<\", \"\\\\textless\"); // in T1 fontenc\n\ndefineSymbol(symbols_text, main, symbols_textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_open, \"\\u230A\", \"\\\\lfloor\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u230B\", \"\\\\rfloor\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(symbols_text, main, symbols_textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(symbols_math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D1\", \"\\\\Uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D3\", \"\\\\Downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D5\", \"\\\\Updownarrow\", true);\ndefineSymbol(symbols_math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(symbols_math, main, op, \"\\u22C1\", \"\\\\bigvee\");\ndefineSymbol(symbols_math, main, op, \"\\u22C0\", \"\\\\bigwedge\");\ndefineSymbol(symbols_math, main, op, \"\\u2A04\", \"\\\\biguplus\");\ndefineSymbol(symbols_math, main, op, \"\\u22C2\", \"\\\\bigcap\");\ndefineSymbol(symbols_math, main, op, \"\\u22C3\", \"\\\\bigcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\int\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\intop\");\ndefineSymbol(symbols_math, main, op, \"\\u222C\", \"\\\\iint\");\ndefineSymbol(symbols_math, main, op, \"\\u222D\", \"\\\\iiint\");\ndefineSymbol(symbols_math, main, op, \"\\u220F\", \"\\\\prod\");\ndefineSymbol(symbols_math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(symbols_math, main, op, \"\\u2A02\", \"\\\\bigotimes\");\ndefineSymbol(symbols_math, main, op, \"\\u2A01\", \"\\\\bigoplus\");\ndefineSymbol(symbols_math, main, op, \"\\u2A00\", \"\\\\bigodot\");\ndefineSymbol(symbols_math, main, op, \"\\u222E\", \"\\\\oint\");\ndefineSymbol(symbols_math, main, op, \"\\u222F\", \"\\\\oiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2A06\", \"\\\\bigsqcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\smallint\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22EF\", \"\\\\@cdots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22F1\", \"\\\\ddots\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22EE\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CA\", \"\\\\acute\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CB\", \"\\\\grave\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\xA8\", \"\\\\ddot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"~\", \"\\\\tilde\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C9\", \"\\\\bar\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D8\", \"\\\\breve\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C7\", \"\\\\check\");\ndefineSymbol(symbols_math, main, symbols_accent, \"^\", \"\\\\hat\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u20D7\", \"\\\\vec\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D9\", \"\\\\dot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02DA\", \"\\\\mathring\");\ndefineSymbol(symbols_math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xDF\", \"\\\\ss\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xF8\", \"\\\\o\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xC6\", \"\\\\AE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xD8\", \"\\\\O\", true);\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CA\", \"\\\\'\"); // acute\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CB\", \"\\\\`\"); // grave\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DC\", \"\\\\~\"); // tilde\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C9\", \"\\\\=\"); // macron\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D8\", \"\\\\u\"); // breve\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D9\", \"\\\\.\"); // dot above\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DA\", \"\\\\r\"); // ring above\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C7\", \"\\\\v\"); // caron\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\xA8\", '\\\\\"'); // diaresis\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DD\", \"\\\\H\"); // double acute\n\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u25EF\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nvar ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"--\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"---\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"'\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"``\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"\\\\textquotedblleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"''\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xB0\", \"\\\\degree\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\n\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\mathsterling\", true);\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\textsterling\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \" \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (var symbols_i = 0; symbols_i < mathTextSymbols.length; symbols_i++) {\n  var symbols_ch = mathTextSymbols.charAt(symbols_i);\n  defineSymbol(symbols_math, main, symbols_textord, symbols_ch, symbols_ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\n\nfor (var src_symbols_i = 0; src_symbols_i < textSymbols.length; src_symbols_i++) {\n  var _ch = textSymbols.charAt(src_symbols_i);\n\n  defineSymbol(symbols_text, main, symbols_textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (var symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {\n  var _ch2 = letters.charAt(symbols_i2);\n\n  defineSymbol(symbols_math, main, mathord, _ch2, _ch2);\n  defineSymbol(symbols_text, main, symbols_textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(symbols_math, ams, symbols_textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(symbols_text, ams, symbols_textord, \"C\", \"\\u2102\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"H\", \"\\u210D\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"H\", \"\\u210D\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"N\", \"\\u2115\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"N\", \"\\u2115\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"P\", \"\\u2119\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"P\", \"\\u2119\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"Q\", \"\\u211A\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"Q\", \"\\u211A\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"R\", \"\\u211D\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"R\", \"\\u211D\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"Z\", \"\\u2124\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"Z\", \"\\u2124\");\ndefineSymbol(symbols_math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(symbols_text, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar symbols_wideChar = \"\";\n\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n  var _ch3 = letters.charAt(_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n  if (_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nsymbols_wideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(symbols_math, main, mathord, \"k\", symbols_wideChar);\ndefineSymbol(symbols_text, main, symbols_textord, \"k\", symbols_wideChar); // Next, some wide character numerals\n\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n  var _ch4 = _i4.toString();\n\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n  symbols_wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n\n  defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n  defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = \"ÇÐÞçþ\";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(symbols_math, main, mathord, _ch5, _ch5);\n  defineSymbol(symbols_text, main, symbols_textord, _ch5, _ch5);\n}\n\ndefineSymbol(symbols_text, main, symbols_textord, \"ð\", \"ð\"); // Unicode versions of existing characters\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"–\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"—\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"‘\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"’\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"“\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"”\");\n// CONCATENATED MODULE: ./src/wide-character.js\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nvar wide_character_wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new src_ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n// CONCATENATED MODULE: ./src/Options.js\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n};\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options_Options =\n/*#__PURE__*/\nfunction () {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  function Options(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  var _proto = Options.prototype;\n\n  _proto.extend = function extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n  ;\n\n  _proto.havingStyle = function havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n  ;\n\n  _proto.havingCrampedStyle = function havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n  ;\n\n  _proto.havingSize = function havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n  ;\n\n  _proto.havingBaseStyle = function havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n  ;\n\n  _proto.havingBaseSizing = function havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n  ;\n\n  _proto.withColor = function withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n  ;\n\n  _proto.withPhantom = function withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n  ;\n\n  _proto.withFont = function withFont(font) {\n    return this.extend({\n      font: font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n  ;\n\n  _proto.withTextFontFamily = function withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily: fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontWeight = function withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight: fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n  ;\n\n  _proto.withTextFontShape = function withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape: fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n  ;\n\n  _proto.sizingClasses = function sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n  ;\n\n  _proto.baseSizingClasses = function baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n  ;\n\n  _proto.fontMetrics = function fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * A map of color names to CSS colors.\n   * TODO(emily): Remove this when we have real macros\n   */\n  ;\n\n  /**\n   * Gets the CSS color of the current options object, accounting for the\n   * `colorMap`.\n   */\n  _proto.getColor = function getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {\n      return Options.colorMap[this.color];\n    } else {\n      return this.color;\n    }\n  };\n\n  return Options;\n}();\n\nOptions_Options.BASESIZE = 6;\nOptions_Options.colorMap = {\n  \"katex-blue\": \"#6495ed\",\n  \"katex-orange\": \"#ffa500\",\n  \"katex-pink\": \"#ff00af\",\n  \"katex-red\": \"#df0030\",\n  \"katex-green\": \"#28ae7b\",\n  \"katex-gray\": \"gray\",\n  \"katex-purple\": \"#9d38bd\",\n  \"katex-blueA\": \"#ccfaff\",\n  \"katex-blueB\": \"#80f6ff\",\n  \"katex-blueC\": \"#63d9ea\",\n  \"katex-blueD\": \"#11accd\",\n  \"katex-blueE\": \"#0c7f99\",\n  \"katex-tealA\": \"#94fff5\",\n  \"katex-tealB\": \"#26edd5\",\n  \"katex-tealC\": \"#01d1c1\",\n  \"katex-tealD\": \"#01a995\",\n  \"katex-tealE\": \"#208170\",\n  \"katex-greenA\": \"#b6ffb0\",\n  \"katex-greenB\": \"#8af281\",\n  \"katex-greenC\": \"#74cf70\",\n  \"katex-greenD\": \"#1fab54\",\n  \"katex-greenE\": \"#0d923f\",\n  \"katex-goldA\": \"#ffd0a9\",\n  \"katex-goldB\": \"#ffbb71\",\n  \"katex-goldC\": \"#ff9c39\",\n  \"katex-goldD\": \"#e07d10\",\n  \"katex-goldE\": \"#a75a05\",\n  \"katex-redA\": \"#fca9a9\",\n  \"katex-redB\": \"#ff8482\",\n  \"katex-redC\": \"#f9685d\",\n  \"katex-redD\": \"#e84d39\",\n  \"katex-redE\": \"#bc2612\",\n  \"katex-maroonA\": \"#ffbde0\",\n  \"katex-maroonB\": \"#ff92c6\",\n  \"katex-maroonC\": \"#ed5fa6\",\n  \"katex-maroonD\": \"#ca337c\",\n  \"katex-maroonE\": \"#9e034e\",\n  \"katex-purpleA\": \"#ddd7ff\",\n  \"katex-purpleB\": \"#c6b9fc\",\n  \"katex-purpleC\": \"#aa87ff\",\n  \"katex-purpleD\": \"#7854ab\",\n  \"katex-purpleE\": \"#543b78\",\n  \"katex-mintA\": \"#f5f9e8\",\n  \"katex-mintB\": \"#edf2df\",\n  \"katex-mintC\": \"#e0e5cc\",\n  \"katex-grayA\": \"#f6f7f7\",\n  \"katex-grayB\": \"#f0f1f2\",\n  \"katex-grayC\": \"#e3e5e6\",\n  \"katex-grayD\": \"#d6d8da\",\n  \"katex-grayE\": \"#babec2\",\n  \"katex-grayF\": \"#888d93\",\n  \"katex-grayG\": \"#626569\",\n  \"katex-grayH\": \"#3b3e40\",\n  \"katex-grayI\": \"#21242c\",\n  \"katex-kaBlue\": \"#314453\",\n  \"katex-kaGreen\": \"#71B307\"\n};\n/* harmony default export */ var src_Options = (Options_Options);\n// CONCATENATED MODULE: ./src/units.js\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n // This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar units_calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new src_ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n// CONCATENATED MODULE: ./src/buildCommon.js\n/* eslint no-console:0 */\n\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n// The following have to be loaded from Main-Italic font, using class mathit\nvar mathitLetters = [\"\\\\imath\", \"ı\", // dotless i\n\"\\\\jmath\", \"ȷ\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"£\"];\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\n\nvar buildCommon_lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n    value = src_symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = buildCommon_lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontName + \"'\");\n    symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar buildCommon_mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options && options.font && options.font === \"boldsymbol\" && buildCommon_lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return buildCommon_makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || src_symbols[mode][value].font === \"main\") {\n    return buildCommon_makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return buildCommon_makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (maindefault or mathit) to use for default math font,\n * depending on the symbol.\n */\n\n\nvar buildCommon_mathdefault = function mathdefault(value, mode, options, classes) {\n  if (/[0-9]/.test(value.charAt(0)) || // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n  // need to use Main-Italic instead\n  utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the font names (Main-Italic, Math-Italic, and Caligraphic)\n * and corresponding style tags (mathit, mathdefault, or mathcal) to use for font\n * \"mathnormal\", depending on the symbol.  Use this function instead of fontMap for\n * font \"mathnormal\".\n */\n\n\nvar buildCommon_mathnormal = function mathnormal(value, mode, options, classes) {\n  if (utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else if (/[0-9]/.test(value.charAt(0))) {\n    return {\n      fontName: \"Caligraphic-Regular\",\n      fontClass: \"mathcal\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes) {\n  if (buildCommon_lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar buildCommon_makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === \"math\" || mode === \"text\" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    var _wideCharacterFont = wide_character_wideCharacterFont(text, mode),\n        wideFontName = _wideCharacterFont[0],\n        wideFontClass = _wideCharacterFont[1];\n\n    return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\" || fontOrFamily === \"mathnormal\") {\n      var fontData = fontOrFamily === \"boldsymbol\" ? boldsymbol(text, mode, options, classes) : buildCommon_mathnormal(text, mode, options, classes);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (utils.contains(mathitLetters, text)) {\n      fontName = \"Main-Italic\";\n      fontClasses = [\"mathit\"];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (buildCommon_lookupSymbol(text, fontName, mode).metrics) {\n      return buildCommon_makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(buildCommon_makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return buildCommon_makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    var fontLookup = buildCommon_mathdefault(text, mode, options, classes);\n    return buildCommon_makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n  } else if (type === \"textord\") {\n    var font = src_symbols[mode][text] && src_symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n\n      return buildCommon_makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return buildCommon_makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar buildCommon_canCombine = function canCombine(prev, next) {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consequetive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar buildCommon_tryCombineChars = function tryCombineChars(chars) {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof domTree_SymbolNode && next instanceof domTree_SymbolNode && buildCommon_canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar buildCommon_makeSpan = function makeSpan(classes, children, options, style) {\n  var span = new domTree_Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar buildCommon_makeSvgSpan = function makeSvgSpan(classes, children, options, style) {\n  return new domTree_Span(classes, children, options, style);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = buildCommon_makeSpan([className], [], options);\n  line.height = thickness || options.fontMetrics().defaultRuleThickness;\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar buildCommon_makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new domTree_Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar buildCommon_makeFragment = function makeFragment(children) {\n  var fragment = new tree_DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar buildCommon_wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof tree_DocumentFragment) {\n    return buildCommon_makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size: size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children: children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth: depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar buildCommon_makeVList = function makeVList(params, options) {\n  var _getVListChildrenAndD = getVListChildrenAndDepth(params),\n      children = _getVListChildrenAndD.children,\n      depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === \"elem\") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = buildCommon_makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === \"kern\") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = buildCommon_makeSpan(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - _elem.depth + \"em\";\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = buildCommon_makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = buildCommon_makeSpan([], []);\n    var depthStrut = buildCommon_makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = buildCommon_makeSpan([\"vlist-s\"], [new domTree_SymbolNode(\"\\u200B\")]);\n    rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist, topStrut]), buildCommon_makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  var vtable = buildCommon_makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nvar buildCommon_makeGlue = function makeGlue(measurement, options) {\n  // Make an empty span for the space\n  var rule = buildCommon_makeSpan([\"mspace\"], [], options);\n  var size = units_calculateSize(measurement, options);\n  rule.style.marginRight = size + \"em\";\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  // Default math font, \"mathnormal\" and \"boldsymbol\" are missing because they\n  // require the use of several fonts: Main-Italic and Math-Italic for default\n  // math font, Main-Italic, Math-Italic, Caligraphic for \"mathnormal\", and\n  // Math-BoldItalic and Main-Bold for \"boldsymbol\".  This is handled by a\n  // special case in makeOrd which ends up calling mathdefault, mathnormal,\n  // and boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar buildCommon_staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var _svgData$value = svgData[value],\n      pathName = _svgData$value[0],\n      width = _svgData$value[1],\n      height = _svgData$value[2];\n  var path = new domTree_PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = buildCommon_makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n  fontMap: fontMap,\n  makeSymbol: buildCommon_makeSymbol,\n  mathsym: buildCommon_mathsym,\n  makeSpan: buildCommon_makeSpan,\n  makeSvgSpan: buildCommon_makeSvgSpan,\n  makeLineSpan: makeLineSpan,\n  makeAnchor: buildCommon_makeAnchor,\n  makeFragment: buildCommon_makeFragment,\n  wrapFragment: buildCommon_wrapFragment,\n  makeVList: buildCommon_makeVList,\n  makeOrd: buildCommon_makeOrd,\n  makeGlue: buildCommon_makeGlue,\n  staticSvg: buildCommon_staticSvg,\n  svgData: svgData,\n  tryCombineChars: buildCommon_tryCombineChars\n});\n// CONCATENATED MODULE: ./src/parseNode.js\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  var typedNode = checkNodeType(node, type);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe: Unsure why.\n\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkNodeType(node, type) {\n  if (node && node.type === type) {\n    // The definition of ParseNode<TYPE> doesn't communicate to flow that\n    // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n    // happens to be true for all our value types.\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\n\nfunction assertAtomFamily(node, family) {\n  var typedNode = checkAtomFamily(node, family);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of type \\\"atom\\\" and family \\\"\" + family + \"\\\", but got \" + (node ? node.type === \"atom\" ? \"atom of family \" + node.family : \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkAtomFamily(node, family) {\n  return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n// CONCATENATED MODULE: ./src/spacingData.js\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nvar mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nvar thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n// CONCATENATED MODULE: ./src/defineFunction.js\n\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var type = _ref.type,\n      nodeType = _ref.nodeType,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of functions\n  var data = {\n    type: type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    greediness: props.greediness === undefined ? 1 : props.greediness,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    consumeMode: props.consumeMode,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _functions should be a type union of all\n    // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n    // which is an existential type.\n    // $FlowFixMe\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var type = _ref2.type,\n      htmlBuilder = _ref2.htmlBuilder,\n      mathmlBuilder = _ref2.mathmlBuilder;\n  defineFunction({\n    type: type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n    handler: function handler() {\n      throw new Error('Should never be called.');\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n  });\n} // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar defineFunction_ordargument = function ordargument(arg) {\n  var node = checkNodeType(arg, \"ordgroup\");\n  return node ? node.body : [arg];\n};\n// CONCATENATED MODULE: ./src/buildHTML.js\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\nvar buildHTML_makeSpan = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nvar binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nvar buildHTML_styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildHTML_buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildHTML_buildGroup(expression[i], options);\n\n    if (output instanceof tree_DocumentFragment) {\n      var children = output.children;\n      groups.push.apply(groups, children);\n    } else {\n      groups.push(output);\n    }\n  } // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n\n    if (!node) {// No match.\n    } else if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(buildHTML_styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  var dummyPrev = buildHTML_makeSpan([surrounding[0] || \"leftmost\"], [], options);\n  var dummyNext = buildHTML_makeSpan([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  traverseNonSpaceNodes(groups, function (node, prev) {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = buildHTML_checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      traverseNonSpaceNodes(partialGroup.children, callback, prev);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    if (node.classes[0] === \"mspace\") {\n      continue;\n    }\n\n    var result = callback(node, prev.node);\n\n    if (result) {\n      if (prev.insertAfter) {\n        prev.insertAfter(result);\n      } else {\n        // insert at front\n        nodes.unshift(result);\n        i++;\n      }\n    }\n\n    prev.node = node;\n\n    prev.insertAfter = function (index) {\n      return function (n) {\n        nodes.splice(index + 1, 0, n);\n        i++;\n      };\n    }(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar buildHTML_checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof tree_DocumentFragment || node instanceof domTree_Anchor) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = buildHTML_checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildHTML_buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return buildHTML_makeSpan();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = buildHTML_makeSpan([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n  // We used to have separate top and bottom struts, where the bottom strut\n  // would like to use `vertical-align: top`, but in IE 9 this lowers the\n  // baseline of the box to the bottom of this strut (instead of staying in\n  // the normal place) so we use an absolute value for vertical-align instead.\n\n  var strut = buildHTML_makeSpan([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildHTML_buildExpression(tree, options, true);\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  }\n\n  var htmlNode = buildHTML_makeSpan([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n// CONCATENATED MODULE: ./src/mathMLTree.js\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\nfunction newDocumentFragment(children) {\n  return new tree_DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nvar mathMLTree_MathNode =\n/*#__PURE__*/\nfunction () {\n  function MathNode(type, children) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  var _proto = MathNode.prototype;\n\n  _proto.setAttribute = function setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n  ;\n\n  _proto.toNode = function toNode() {\n    var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto.toMarkup = function toMarkup() {\n    var markup = \"<\" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n  ;\n\n  _proto.toText = function toText() {\n    return this.children.map(function (child) {\n      return child.toText();\n    }).join(\"\");\n  };\n\n  return MathNode;\n}();\n/**\n * This node represents a piece of text.\n */\n\nvar mathMLTree_TextNode =\n/*#__PURE__*/\nfunction () {\n  function TextNode(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  var _proto2 = TextNode.prototype;\n\n  _proto2.toNode = function toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n  ;\n\n  _proto2.toMarkup = function toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n  ;\n\n  _proto2.toText = function toText() {\n    return this.text;\n  };\n\n  return TextNode;\n}();\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nvar SpaceNode =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  function SpaceNode(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200A\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200A\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200A\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205F\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  var _proto3 = SpaceNode.prototype;\n\n  _proto3.toNode = function toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  ;\n\n  _proto3.toMarkup = function toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n  ;\n\n  _proto3.toText = function toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  };\n\n  return SpaceNode;\n}();\n\n/* harmony default export */ var mathMLTree = ({\n  MathNode: mathMLTree_MathNode,\n  TextNode: mathMLTree_TextNode,\n  SpaceNode: SpaceNode,\n  newDocumentFragment: newDocumentFragment\n});\n// CONCATENATED MODULE: ./src/buildMathML.js\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar buildMathML_makeText = function makeText(text, mode, options) {\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar buildMathML_makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar buildMathML_getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  var font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return \"bold-italic\";\n  }\n\n  var text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nvar buildMathML_buildExpression = function buildExpression(expression, options) {\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var group = buildMathML_buildGroup(expression[i], options);\n\n    if (group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        var _lastGroup$children;\n\n        (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, group.children);\n\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n        var _lastGroup$children2;\n\n        (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, group.children);\n\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n        var child = group.children[0];\n\n        if (child instanceof mathMLTree_TextNode && child.text === '.') {\n          var _lastGroup$children3;\n\n          (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, group.children);\n\n          continue;\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  } // TODO(kevinb): combine \\\\not with mrels and mords\n\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options) {\n  return buildMathML_makeRow(buildMathML_buildExpression(expression, options));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildMathML_buildGroup = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    var result = _mathmlGroupBuilders[group.type](group, options);\n    return result;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options) {\n  var expression = buildMathML_buildExpression(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof mathMLTree_MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode(\"math\", [semantics]); // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n  // $FlowFixMe\n\n  return buildCommon.makeSpan([\"katex-mathml\"], [math]);\n}\n// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nvar buildTree_optionsFromSettings = function optionsFromSettings(settings) {\n  return new src_Options({\n    style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n    maxSize: settings.maxSize\n  });\n};\n\nvar buildTree_displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree_buildTree = function buildTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var mathMLNode = buildMathML(tree, expression, options);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\nvar buildTree_buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = buildTree_optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return buildTree_displayWrap(katexNode, settings);\n};\n/* harmony default export */ var src_buildTree = (buildTree_buildTree);\n// CONCATENATED MODULE: ./src/stretchy.js\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\nvar stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23B5\",\n  overbrace: \"\\u23DE\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21D2\",\n  xRightarrow: \"\\u21D2\",\n  overleftharpoon: \"\\u21BC\",\n  xleftharpoonup: \"\\u21BC\",\n  overrightharpoon: \"\\u21C0\",\n  xrightharpoonup: \"\\u21C0\",\n  xLeftarrow: \"\\u21D0\",\n  xLeftrightarrow: \"\\u21D4\",\n  xhookleftarrow: \"\\u21A9\",\n  xhookrightarrow: \"\\u21AA\",\n  xmapsto: \"\\u21A6\",\n  xrightharpoondown: \"\\u21C1\",\n  xleftharpoondown: \"\\u21BD\",\n  xrightleftharpoons: \"\\u21CC\",\n  xleftrightharpoons: \"\\u21CB\",\n  xtwoheadleftarrow: \"\\u219E\",\n  xtwoheadrightarrow: \"\\u21A0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21C4\",\n  xrightleftarrows: \"\\u21C4\",\n  xrightequilibrium: \"\\u21CC\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21CB\" // None better available.\n\n};\n\nvar stretchy_mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar stretchy_svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      var path = new domTree_PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": _height + \"em\",\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var paths = data[0],\n          _minWidth = data[1],\n          _viewBoxHeight = data[2];\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new domTree_PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          \"width\": \"400em\",\n          \"height\": _height2 + \"em\",\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = _height2 + \"em\";\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var _buildSvgSpan_ = buildSvgSpan_(),\n      span = _buildSvgSpan_.span,\n      minWidth = _buildSvgSpan_.minWidth,\n      height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nvar stretchy_encloseSpan = function encloseSpan(inner, label, pad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n  var img;\n  var totalHeight = inner.height + inner.depth + 2 * pad;\n\n  if (/fbox|color/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\n/* harmony default export */ var stretchy = ({\n  encloseSpan: stretchy_encloseSpan,\n  mathMLnode: stretchy_mathMLnode,\n  svgSpan: stretchy_svgSpan\n});\n// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\nvar accent_htmlBuilder = function htmlBuilder(grp, options) {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n  var supSubGroup;\n\n  if (supSub) {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(supSub.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    supSub.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildHTML_buildGroup(supSub, options)); // reset original base\n\n    supSub.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildHTML_buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeSymbol(group.label, \"Main-Regular\", group.mode, options); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + 2 * skew + \"em)\",\n          marginLeft: 2 * skew + \"em\"\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar accent_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(function (accent) {\n  return \"\\\\\" + accent;\n}).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    var base = args[0];\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder: accent_htmlBuilder,\n  mathmlBuilder: accent_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/accentunder.js\n// Horizontal overlap functions\n\n\n\n\n\n\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Treat under accents much like underlines.\n    var innerGroup = buildHTML_buildGroup(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: accentBody.height + kern,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n// Stretchy arrows with an optional argument\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder: function htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, newOptions, options), options);\n    upperGroup.classes.push(\"x-arrow-pad\");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(\"x-arrow-pad\");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    var node;\n    var lowerNode;\n\n    if (group.body) {\n      var upperNode = buildMathML_buildGroup(group.body, options);\n\n      if (group.below) {\n        lowerNode = buildMathML_buildGroup(group.below, options);\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      lowerNode = buildMathML_buildGroup(group.below, options);\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n    } else {\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode]);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/char.js\n\n\n // \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var arg = assertNodeType(args[0], \"ordgroup\");\n    var group = arg.body;\n    var number = \"\";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new src_ParseError(\"\\\\@char has non-numeric argument \" + number);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\nvar color_htmlBuilder = function htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar color_mathmlBuilder = function mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options);\n  var node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color: color,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n}); // TODO(kevinb): define these using macros\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\", \"\\\\green\", \"\\\\gray\", \"\\\\purple\", \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\", \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\", \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\", \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\", \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\", \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\", \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\", \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\", \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\", \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\", \"\\\\kaBlue\", \"\\\\kaGreen\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    var body = args[0];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color: \"katex-\" + funcName.slice(1),\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\"]\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    var color = assertNodeType(args[0], \"color-token\").color; // If we see a styling function, parse out the implicit body\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color: color,\n      body: body\n    };\n  },\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/cr.js\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n\n // \\\\ is a macro mapping to either \\cr or \\newline.  Because they have the\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\cr\", \"\\\\newline\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = optArgs[0];\n    var newRow = funcName === \"\\\\cr\";\n    var newLine = false;\n\n    if (!newRow) {\n      if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n        newLine = false;\n      } else {\n        newLine = true;\n      }\n    }\n\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine: newLine,\n      newRow: newRow,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.newRow) {\n      throw new src_ParseError(\"\\\\cr valid only within a tabular/array environment\");\n    }\n\n    var span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = units_calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", units_calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/delimiter.js\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar delimiter_getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar delimiter_styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar delimiter_makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  var span = delimiter_styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar delimiter_mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar delimiter_makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = delimiter_mathrmSize(delim, size, mode, options);\n  var span = delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), src_Style.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, src_Style.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\n\n\nvar delimiter_makeInner = function makeInner(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  var inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: inner\n  };\n};\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\n\nvar delimiter_makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23D0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23D0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23D0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23A1\";\n    repeat = \"\\u23A2\";\n    bottom = \"\\u23A3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23A4\";\n    repeat = \"\\u23A5\";\n    bottom = \"\\u23A6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230A\") {\n    repeat = top = \"\\u23A2\";\n    bottom = \"\\u23A3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23A1\";\n    repeat = bottom = \"\\u23A2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230B\") {\n    repeat = top = \"\\u23A5\";\n    bottom = \"\\u23A6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23A4\";\n    repeat = bottom = \"\\u23A5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239B\";\n    repeat = \"\\u239C\";\n    bottom = \"\\u239D\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239E\";\n    repeat = \"\\u239F\";\n    bottom = \"\\u23A0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23A7\";\n    middle = \"\\u23A8\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23AB\";\n    middle = \"\\u23AC\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27EE\") {\n    top = \"\\u23A7\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27EF\") {\n    top = \"\\u23AB\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23B0\") {\n    top = \"\\u23A7\";\n    bottom = \"\\u23AD\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23B1\") {\n    top = \"\\u23AB\";\n    bottom = \"\\u23A9\";\n    repeat = \"\\u23AA\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = delimiter_getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = delimiter_getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = delimiter_getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = delimiter_getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  var inners = []; // Add the bottom symbol\n\n  inners.push(delimiter_makeInner(bottom, font, mode));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (var i = 0; i < repeatCount; i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (var _i = 0; _i < repeatCount; _i++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n\n    inners.push(delimiter_makeInner(middle, font, mode));\n\n    for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n      inners.push(delimiter_makeInner(repeat, font, mode));\n    }\n  } // Add the top symbol\n\n\n  inners.push(delimiter_makeInner(top, font, mode)); // Finally, build the vlist\n\n  var newOptions = options.havingBaseStyle(src_Style.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: inners\n  }, newOptions);\n  return delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), src_Style.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar delimiter_sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n  var alternate;\n\n  if (sqrtName === \"sqrtTall\") {\n    // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n    // One path edge has a variable length. It runs from the viniculumn\n    // to a point near (14 units) the bottom of the surd. The viniculum\n    // is 40 units thick. So the length of the line in question is:\n    var vertSegment = viewBoxHeight - 54 - vbPad;\n    alternate = \"M702 \" + vbPad + \"H400000v40H742v\" + vertSegment + \"l-4 4-4 4c-.667.7\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 \" + vbPad + \"H400000v40H742z\";\n  }\n\n  var pathNode = new domTree_PathNode(sqrtName, alternate);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + emPad) / sizeMultiplier;\n    texHeight = 1.00 / sizeMultiplier;\n    span = delimiter_sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n    span = delimiter_sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + emPad;\n    texHeight = height;\n    viewBoxHeight = Math.floor(1000 * height) + vbPad;\n    span = delimiter_sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span: span,\n    advanceWidth: advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar delimiter_makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return delimiter_makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new src_ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar delimiter_makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return delimiter_makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return delimiter_makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return delimiter_makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n  sqrtImage: makeSqrtImage,\n  sizedDelim: delimiter_makeSizedDelim,\n  customSizedDelim: delimiter_makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n});\n// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nvar delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27E8\", \"\\\\rangle\", \"\\u27E9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else {\n    throw new src_ParseError(\"Invalid delimiter: '\" + (symDelim ? symDelim.text : JSON.stringify(delim)) + \"' after '\" + context.funcName + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: function mathmlBuilder(group) {\n    var children = [];\n\n    if (group.delim !== \".\") {\n      children.push(buildMathML_makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    var right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body: body,\n      left: delim.text,\n      right: right.delim\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildHTML_buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    assertParsed(group);\n    var inner = buildMathML_buildExpression(group.body, options);\n\n    if (group.left !== \".\") {\n      var leftNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      var rightNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n      inner.push(rightNode);\n    }\n\n    return buildMathML_makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new src_ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options: options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var middleNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.delim, group.mode)]);\n    middleNode.setAttribute(\"fence\", \"true\");\n    return middleNode;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\nvar enclose_htmlBuilder = function htmlBuilder(group, options) {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, options), options);\n  var label = group.label.substr(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    var vertPad = 0; // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n    // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n    } else {\n      vertPad = isSingleChar ? 0.2 : 0;\n    }\n\n    img = stretchy.encloseSpan(inner, label, vertPad, options);\n    imgShift = inner.depth + vertPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nvar enclose_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode(\"menclose\", [buildMathML_buildGroup(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\fcolorbox\":\n      // TODO(ron): I don't know any way to set the border color.\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"text\"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n  handler: function handler(_ref2, args, optArgs) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    var borderColor = assertNodeType(args[0], \"color-token\").color;\n    var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    var body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref4, args, optArgs) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    var body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body: body\n    };\n  },\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of environments.\n  var data = {\n    type: type,\n    numArgs: props.numArgs || 0,\n    greediness: 1,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    // $FlowFixMe\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.nextToken.text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.nextToken.text;\n  }\n\n  return hlineInfo;\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n      addJot = _ref.addJot,\n      cols = _ref.cols,\n      arraystretch = _ref.arraystretch;\n  // Parse body of array with \\\\ temporarily mapped to \\cr\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\"); // Get current arraystretch if it's not set by the environment\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new src_ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  }\n\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    var cell = parser.parseExpression(false, \"\\\\cr\");\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style: style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.nextToken.text;\n\n    if (next === \"&\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\cr\") {\n      var cr = assertNodeType(parser.parseFunction(), \"cr\");\n      rowGaps.push(cr.size); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new src_ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot: addJot,\n    arraystretch: arraystretch,\n    body: body,\n    cols: cols,\n    rowGaps: rowGaps,\n    hskipBeforeAndAfter: hskipBeforeAndAfter,\n    hLinesBeforeRow: hLinesBeforeRow\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nvar array_htmlBuilder = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = []; // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n  // Vertical spacing\n\n  var baselineskip = 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildHTML_buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = units_calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\") {\n        var separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else if (colDescr.separator === \":\") {\n        var _separator = buildCommon.makeSpan([\"vertical-separator\", \"vs-dashed\"], [], options);\n\n        _separator.style.height = totalHeight + \"em\";\n        _separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(_separator);\n      } else {\n        throw new src_ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan(\"hline\", options, 0.05);\n    var dashes = buildCommon.makeLineSpan(\"hdashline\", options, 0.05);\n    var vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nvar array_mathmlBuilder = function mathmlBuilder(group, options) {\n  return new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n    return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n      return new mathMLTree.MathNode(\"mtd\", [buildMathML_buildGroup(cell, options)]);\n    }));\n  }));\n}; // Convenience function for aligned and alignedat environments.\n\n\nvar array_alignedHandler = function alignedHandler(context, args) {\n  var cols = [];\n  var res = parseArray(context.parser, {\n    cols: cols,\n    addJot: true\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n  var ordgroup = checkNodeType(args[0], \"ordgroup\");\n\n  if (ordgroup) {\n    var arg0 = \"\";\n\n    for (var i = 0; i < ordgroup.body.length; i++) {\n      var textord = assertNodeType(ordgroup.body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i = 1; _i < row.length; _i += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i], \"styling\");\n\n      var _ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n\n      _ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new src_ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i2 = 0; _i2 < numCols; ++_i2) {\n    var align = \"r\";\n    var pregap = 0;\n\n    if (_i2 % 2 === 1) {\n      align = \"l\";\n    } else if (_i2 > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i2] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    var res = {\n      cols: cols,\n      hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName]; // \\hskip -\\arraycolsep in amsmath\n\n    var payload = {\n      hskipBeforeAndAfter: false\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1]\n    } : res;\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: \"\\\\{\",\n      right: \".\"\n    };\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"aligned\"],\n  props: {\n    numArgs: 0\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(context) {\n    var res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignedat\"],\n  // One for numbered and for unnumbered;\n  // but, KaTeX doesn't supports math numbering yet,\n  // they make no difference for now.\n  props: {\n    numArgs: 1\n  },\n  handler: array_alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError(context.funcName + \" valid only within array environment\");\n  }\n});\n// CONCATENATED MODULE: ./src/environments.js\n\nvar environments = _environments;\n/* harmony default export */ var src_environments = (environments); // All environment definitions should be imported below\n\n\n// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n // Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\n// $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new src_ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    var envName = \"\";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!src_environments.hasOwnProperty(envName)) {\n        throw new src_ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = src_environments[envName];\n\n      var _parser$parseArgument = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n          _args = _parser$parseArgument.args,\n          optArgs = _parser$parseArgument.optArgs;\n\n      var context = {\n        mode: parser.mode,\n        envName: envName,\n        parser: parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new src_ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      }\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup: nameGroup\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\nvar mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n  var elements = buildHTML_buildExpression(group.body, options, true);\n  return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n  var inner = buildMathML_buildExpression(group.body, options);\n  return mathMLTree.newDocumentFragment(inner);\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\nvar binrelClass = function binrelClass(arg) {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: [args[1]]\n    };\n  }\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: defineFunction_ordargument(baseArg)\n    };\n    var supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: mclass,\n      body: [supsub]\n    };\n  },\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/font.js\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\nvar font_htmlBuilder = function htmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildHTML_buildGroup(group.body, newOptions);\n};\n\nvar font_mathmlBuilder = function mathmlBuilder(group, options) {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildMathML_buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body: body\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0]; // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body: body\n      }]\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    var mode = parser.mode;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body: body\n      }\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\nvar genfrac_htmlBuilder = function htmlBuilder(group, options) {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = options.style;\n\n  if (group.size === \"display\") {\n    style = src_Style.DISPLAY;\n  } else if (group.size === \"text\" && style.size === src_Style.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = src_Style.TEXT;\n  } else if (group.size === \"script\") {\n    style = src_Style.SCRIPT;\n  } else if (group.size === \"scriptscript\") {\n    style = src_Style.SCRIPTSCRIPT;\n  }\n\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildHTML_buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildHTML_buildGroup(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = units_calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar genfrac_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node = new mathMLTree.MathNode(\"mfrac\", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    var ruleWidth = units_calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim)]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim)]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return buildMathML_makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n  props: {\n    numArgs: 2,\n    greediness: 2\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: funcName === \"\\\\cfrac\",\n      numer: numer,\n      denom: denom,\n      hasBarLine: hasBarLine,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size,\n      barSize: null\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n  handler: function handler(_ref2) {\n    var parser = _ref2.parser,\n        funcName = _ref2.funcName,\n        token = _ref2.token;\n    var replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: replaceWith,\n      token: token\n    };\n  }\n});\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    greediness: 6,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = checkNodeType(args[0], \"atom\");\n\n    if (leftNode) {\n      leftNode = assertAtomFamily(args[0], \"open\");\n    }\n\n    var leftDelim = leftNode ? delimFromValue(leftNode.text) : null;\n    var rightNode = checkNodeType(args[1], \"atom\");\n\n    if (rightNode) {\n      rightNode = assertAtomFamily(args[1], \"close\");\n    }\n\n    var rightDelim = rightNode ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], \"size\");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = \"auto\";\n    var styl = checkNodeType(args[3], \"ordgroup\");\n\n    if (styl) {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(args[3], \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: leftDelim,\n      rightDelim: rightDelim,\n      size: size\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n  handler: function handler(_ref4, args) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName,\n        token = _ref4.token;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token: token\n    };\n  }\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: function handler(_ref5, args) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], \"infix\").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer: numer,\n      denom: denom,\n      continued: false,\n      hasBarLine: hasBarLine,\n      barSize: barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\nvar horizBrace_htmlBuilder = function htmlBuilder(grp, options) {\n  var style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  var supSubGroup;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(supSub.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  var body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar horizBrace_mathmlBuilder = function mathmlBuilder(group, options) {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n  htmlBuilder: horizBrace_htmlBuilder,\n  mathmlBuilder: horizBrace_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[1];\n    var href = assertNodeType(args[0], \"url\").url;\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof mathMLTree_MathNode)) {\n      math = new mathMLTree_MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var href = assertNodeType(args[0], \"url\").url;\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    var body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href: href,\n      body: defineFunction_ordargument(body)\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: defineFunction_ordargument(args[0]),\n      mathml: defineFunction_ordargument(args[1])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/kern.js\n// Horizontal spacing commands\n\n\n\n\n // TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var dimension = units_calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/lap.js\n// Horizontal overlap functions\n\n\n\n\n\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n\n    var strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // Get the horizontal spacing correct relative to adjacent items.\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/math.js\n\n // Switching from text mode back to math mode\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false,\n    consumeMode: \"math\"\n  },\n  handler: function handler(_ref, args) {\n    var funcName = _ref.funcName,\n        parser = _ref.parser;\n    var outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    var body = parser.parseExpression(false, close); // We can't expand the next symbol after the closing $ until after\n    // switching modes back.  So don't consume within expect.\n\n    parser.expect(close, false);\n    parser.switchMode(outerMode);\n    parser.consume();\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body: body\n    };\n  }\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: function handler(context, args) {\n    throw new src_ParseError(\"Mismatched \" + context.funcName);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\nvar mathchoice_chooseMathStyle = function chooseMathStyle(group, options) {\n  switch (options.style.size) {\n    case src_Style.DISPLAY.size:\n      return group.display;\n\n    case src_Style.TEXT.size:\n      return group.text;\n\n    case src_Style.SCRIPT.size:\n      return group.script;\n\n    case src_Style.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: defineFunction_ordargument(args[0]),\n      text: defineFunction_ordargument(args[1]),\n      script: defineFunction_ordargument(args[2]),\n      scriptscript: defineFunction_ordargument(args[3])\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    var elements = buildHTML_buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = mathchoice_chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/op.js\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\nvar op_htmlBuilder = function htmlBuilder(grp, options) {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n  var supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  var style = options.style; // Most operators have a large successor symbol, but these don't.\n\n  var noSuccessor = [\"\\\\smallint\"];\n  var large = false;\n\n  if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    var stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1); // $FlowFixMe\n\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options); // $FlowFixMe\n\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildHTML_buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof domTree_SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], buildCommon.tryCombineChars(inner), options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof domTree_SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n    // in a new span so it is an inline, and works.\n    base = buildCommon.makeSpan([], [base]);\n    var sub;\n    var sup; // We manually have to handle the superscripts and subscripts. This,\n    // aside from the kern calculations, is copied from supsub.\n\n    if (supGroup) {\n      var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);\n      sup = {\n        elem: elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n      };\n    }\n\n    if (subGroup) {\n      var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n      sub = {\n        elem: _elem,\n        kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n      };\n    } // Build the final group as a vlist of the possible subscript, base,\n    // and possible superscript.\n\n\n    var finalGroup;\n\n    if (sup && sub) {\n      var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: bottom,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else if (sub) {\n      var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n      // that we are supposed to shift the limits by 1/2 of the slant,\n      // but since we are centering the limits adding a full slant of\n      // margin will shift by 1/2 that.\n\n      finalGroup = buildCommon.makeVList({\n        positionType: \"top\",\n        positionData: top,\n        children: [{\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }, {\n          type: \"elem\",\n          elem: sub.elem,\n          marginLeft: -slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: sub.kern\n        }, {\n          type: \"elem\",\n          elem: base\n        }]\n      }, options);\n    } else if (sup) {\n      var _bottom = base.depth + baseShift;\n\n      finalGroup = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: _bottom,\n        children: [{\n          type: \"elem\",\n          elem: base\n        }, {\n          type: \"kern\",\n          size: sup.kern\n        }, {\n          type: \"elem\",\n          elem: sup.elem,\n          marginLeft: slant + \"em\"\n        }, {\n          type: \"kern\",\n          size: options.fontMetrics().bigOpSpacing5\n        }]\n      }, options);\n    } else {\n      // This case probably shouldn't occur (this would mean the\n      // supsub was sending us a group with no superscript or\n      // subscript) but be safe.\n      return base;\n    }\n\n    return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nvar op_mathmlBuilder = function mathmlBuilder(group, options) {\n  var node; // TODO(emily): handle big operators using the `largeop` attribute\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(group.name, group.mode)]);\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new mathMLTree_MathNode(\"mo\", buildMathML_buildExpression(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup.\n    node = new mathMLTree_MathNode(\"mi\", [new mathMLTree_TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n    return newDocumentFragment([node, operator]);\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22C0\": \"\\\\bigwedge\",\n  \"\\u22C1\": \"\\\\bigvee\",\n  \"\\u22C2\": \"\\\\bigcap\",\n  \"\\u22C3\": \"\\\\bigcup\",\n  \"\\u2A00\": \"\\\\bigodot\",\n  \"\\u2A01\": \"\\\\bigoplus\",\n  \"\\u2A02\": \"\\\\bigotimes\",\n  \"\\u2A04\": \"\\\\biguplus\",\n  \"\\u2A06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22C0\", \"\\u22C1\", \"\\u22C2\", \"\\u22C3\", \"\\u2A00\", \"\\u2A01\", \"\\u2A02\", \"\\u2A04\", \"\\u2A06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      symbol: false,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  \"\\u222B\": \"\\\\int\",\n  \"\\u222C\": \"\\\\iint\",\n  \"\\u222D\": \"\\\\iiint\",\n  \"\\u222E\": \"\\\\oint\",\n  \"\\u222F\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref3) {\n    var parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref4) {\n    var parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      symbol: false,\n      name: funcName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222B\", \"\\u222C\", \"\\u222D\", \"\\u222E\", \"\\u222F\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n  handler: function handler(_ref5) {\n    var parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.body.length > 0) {\n      var body = group.body.map(function (child) {\n        // $FlowFixMe: Check if the node has a string `text` property.\n        var childText = child.text;\n\n        if (typeof childText === \"string\") {\n          return {\n            type: \"textord\",\n            mode: child.mode,\n            text: childText\n          };\n        } else {\n          return child;\n        }\n      }); // Consolidate function names into symbol characters.\n\n      var expression = buildHTML_buildExpression(body, options.withFont(\"mathrm\"), true);\n\n      for (var i = 0; i < expression.length; i++) {\n        var child = expression[i];\n\n        if (child instanceof domTree_SymbolNode) {\n          // Per amsopn package,\n          // change minus to hyphen and \\ast to asterisk\n          child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n        }\n      }\n\n      return buildCommon.makeSpan([\"mop\"], expression, options);\n    } else {\n      return buildCommon.makeSpan([\"mop\"], [], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // The steps taken here are similar to the html version.\n    var expression = buildMathML_buildExpression(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n    var isAllString = true; // default\n\n    for (var i = 0; i < expression.length; i++) {\n      var node = expression[i];\n\n      if (node instanceof mathMLTree.SpaceNode) {// Do nothing\n      } else if (node instanceof mathMLTree.MathNode) {\n        switch (node.type) {\n          case \"mi\":\n          case \"mn\":\n          case \"ms\":\n          case \"mspace\":\n          case \"mtext\":\n            break;\n          // Do nothing yet.\n\n          case \"mo\":\n            {\n              var child = node.children[0];\n\n              if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n              } else {\n                isAllString = false;\n              }\n\n              break;\n            }\n\n          default:\n            isAllString = false;\n        }\n      } else {\n        isAllString = false;\n      }\n    }\n\n    if (isAllString) {\n      // Write a single TextNode instead of multiple nested tags.\n      var word = expression.map(function (node) {\n        return node.toText();\n      }).join(\"\");\n      expression = [new mathMLTree.TextNode(word)];\n    }\n\n    var identifier = new mathMLTree.MathNode(\"mi\", expression);\n    identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n    // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n    var operator = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildHTML_buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildHTML_buildExpression(group.body, options, true), options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: line.height\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body)\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref2, args) {\n    var parser = _ref2.parser;\n    var body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var node = new mathMLTree.MathNode(\"mphantom\", inner);\n    node.setAttribute(\"height\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref3, args) {\n    var parser = _ref3.parser;\n    var body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n    var node = new mathMLTree.MathNode(\"mphantom\", inner);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildHTML_buildExpression(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nvar sizing_htmlBuilder = function htmlBuilder(group, options) {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body: body\n    };\n  },\n  htmlBuilder: sizing_htmlBuilder,\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n // Box manipulation\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"text\"],\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    var amount = assertNodeType(args[0], \"size\").value;\n    var body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = {\n      type: \"text\",\n      mode: group.mode,\n      body: defineFunction_ordargument(group.body),\n      font: \"mathrm\" // simulate \\textrm\n\n    };\n    var sizedText = {\n      type: \"sizing\",\n      mode: group.mode,\n      body: [text],\n      size: 6 // simulate \\normalsize\n\n    };\n    var body = sizing_htmlBuilder(sizedText, options);\n    var dy = units_calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], \"size\");\n    var height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var shift = 0;\n\n    if (group.shift) {\n      shift = units_calculateSize(group.shift, options);\n    }\n\n    var width = units_calculateSize(group.width, options);\n    var height = units_calculateSize(group.height, options); // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // TODO(emily): Figure out if there's an actual way to draw black boxes\n    // in MathML.\n    var node = new mathMLTree.MathNode(\"mrow\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/smash.js\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = \"\";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body: body,\n      smashHeight: smashHeight,\n      smashDepth: smashDepth\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler: function handler(_ref, args, optArgs) {\n    var parser = _ref.parser;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body: body,\n      index: index\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < src_Style.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n        img = _delimiter$sqrtImage.span,\n        ruleWidth = _delimiter$sqrtImage.ruleWidth,\n        advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n      var rootm = buildHTML_buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var body = group.body,\n        index = group.index;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildMathML_buildGroup(body, options)]);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\nvar styling_styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style: style,\n      body: body\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styling_styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    // TODO(kevinb): dedupe this with buildHTML.js\n    // This will be easier of handling of styling nodes is in the same file.\n    var styleMap = {\n      \"display\": src_Style.DISPLAY,\n      \"text\": src_Style.TEXT,\n      \"script\": src_Style.SCRIPT,\n      \"scriptscript\": src_Style.SCRIPTSCRIPT\n    };\n    var newStyle = styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildMathML_buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    var styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar supsub_htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? op_htmlBuilder : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? accent_htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = supsub_htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var valueBase = group.base,\n        valueSup = group.sup,\n        valueSub = group.sub;\n    var base = buildHTML_buildGroup(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildHTML_buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildHTML_buildGroup(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === src_Style.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof domTree_SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight: marginRight,\n        marginLeft: marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight: marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n    var horizBrace = checkNodeType(group.base, \"horizBrace\");\n\n    if (horizBrace) {\n      isSup = !!group.sup;\n\n      if (isSup === horizBrace.isOver) {\n        isBrace = true;\n        isOver = horizBrace.isOver;\n      }\n    }\n\n    var children = [buildMathML_buildGroup(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildMathML_buildGroup(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildMathML_buildGroup(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && options.style === src_Style.DISPLAY) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === \"op\" && _base.limits && options.style === src_Style.DISPLAY) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === src_Style.DISPLAY) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n // Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"atom\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      var variant = buildMathML_getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\nvar defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mi\", [buildMathML_makeText(group.text, group.mode, options)]);\n    var variant = buildMathML_getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = buildMathML_makeText(group.text, group.mode, options);\n    var variant = buildMathML_getVariant(group, options) || \"normal\";\n    var node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      // TODO(kevinb) merge adjacent <mn> nodes\n      // do it as a post processing step\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n // A map of CSS-based spacing functions to their CSS class.\n\nvar cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n  htmlBuilder: function htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        var ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\xA0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\ndefineFunctionBuilders({\n  type: \"tag\",\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mlabeledtr\", [new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)]), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)])])]);\n    table.setAttribute(\"side\", \"right\");\n    return table;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n // Non-mathy text, possibly in a font\n\nvar textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nvar textFontWeights = {\n  \"\\\\textbf\": \"textbf\"\n};\nvar textFontShapes = {\n  \"\\\\textit\": \"textit\"\n};\n\nvar optionsWithFont = function optionsWithFont(group, options) {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", // Font Shapes\n  \"\\\\textit\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true,\n    consumeMode: \"text\"\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser,\n        funcName = _ref.funcName;\n    var body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: defineFunction_ordargument(body),\n      font: funcName\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildHTML_buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], buildCommon.tryCombineChars(inner), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n});\n// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: function handler(_ref, args) {\n    var parser = _ref.parser;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildHTML_buildGroup(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: line.height\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * line.height\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: function handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new src_ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n  htmlBuilder: function htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n  mathmlBuilder: function mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = function makeVerb(group) {\n  return group.body.replace(/ /g, group.star ? \"\\u2423\" : '\\xA0');\n};\n// CONCATENATED MODULE: ./src/functions.js\n/** Include this to ensure that all functions are defined. */\n\nvar functions = _functions;\n/* harmony default export */ var src_functions = (functions); // TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/Lexer.js\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"\" + controlWordRegexString + spaceRegexString + \"*\";\nvar controlWordWhitespaceRegex = new RegExp(\"^(\" + controlWordRegexString + \")\" + spaceRegexString + \"*$\");\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036F]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + // whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nvar Lexer_Lexer =\n/*#__PURE__*/\nfunction () {\n  // category codes, only supports comment characters (14) for now\n  function Lexer(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14 // comment character\n\n    };\n  }\n\n  var _proto = Lexer.prototype;\n\n  _proto.setCatcode = function setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n  ;\n\n  _proto.lex = function lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token_Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new src_ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token_Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[2] || \" \";\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    } // Trim any trailing whitespace from control word match\n\n\n    var controlMatch = text.match(controlWordWhitespaceRegex);\n\n    if (controlMatch) {\n      text = controlMatch[1];\n    }\n\n    return new Token_Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  };\n\n  return Lexer;\n}();\n\n\n// CONCATENATED MODULE: ./src/Namespace.js\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\nvar Namespace_Namespace =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  function Namespace(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  var _proto = Namespace.prototype;\n\n  _proto.beginGroup = function beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new src_ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n  ;\n\n  _proto.has = function has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n  ;\n\n  _proto.get = function get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n  ;\n\n  _proto.set = function set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  };\n\n  return Namespace;\n}();\n\n\n// CONCATENATED MODULE: ./src/macros.js\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\n\n\n\n\nvar builtinMacros = {};\n/* harmony default export */ var macros = (builtinMacros); // This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new src_ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new src_ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\n\nvar macros_def = function def(context, global) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError(\"\\\\gdef's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text; // Count argument specifiers, and check they are in the order #1 #2 ...\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  while (arg.length === 1 && arg[0].text === \"#\") {\n    arg = context.consumeArgs(1)[0];\n\n    if (arg.length !== 1) {\n      throw new src_ParseError(\"Invalid argument number length \\\"\" + arg.length + \"\\\"\");\n    }\n\n    if (!/^[1-9]$/.test(arg[0].text)) {\n      throw new src_ParseError(\"Invalid argument number \\\"\" + arg[0].text + \"\\\"\");\n    }\n\n    numArgs++;\n\n    if (parseInt(arg[0].text) !== numArgs) {\n      throw new src_ParseError(\"Argument number \\\"\" + arg[0].text + \"\\\" out of order\");\n    }\n\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  }, global);\n  return '';\n};\n\ndefineMacro(\"\\\\gdef\", function (context) {\n  return macros_def(context, true);\n});\ndefineMacro(\"\\\\def\", function (context) {\n  return macros_def(context, false);\n});\ndefineMacro(\"\\\\global\", function (context) {\n  var next = context.consumeArgs(1)[0];\n\n  if (next.length !== 1) {\n    throw new src_ParseError(\"Invalid command after \\\\global\");\n  }\n\n  var command = next[0].text; // TODO: Should expand command\n\n  if (command === \"\\\\def\") {\n    // \\global\\def is equivalent to \\gdef\n    return macros_def(context, true);\n  } else {\n    throw new src_ParseError(\"Invalid command '\" + command + \"' after \\\\global\");\n  }\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar macros_newcommand = function newcommand(context, existsOK, nonexistsOK) {\n  var arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new src_ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new src_ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new src_ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    var argText = '';\n    var token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new src_ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs: numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", function (context) {\n  return macros_newcommand(context, false, true);\n});\ndefineMacro(\"\\\\renewcommand\", function (context) {\n  return macros_newcommand(context, true, false);\n});\ndefineMacro(\"\\\\providecommand\", function (context) {\n  return macros_newcommand(context, true, true);\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\xB7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n\ndefineMacro(\"\\\\not\", '\\\\mathrel{\\\\mathrlap\\\\@not}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\xA9\", \"\\\\copyright\");\ndefineMacro(\"\\xAE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22EE\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = '\\\\dotso';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in src_symbols.math) {\n    if (utils.contains(['bin', 'rel'], src_symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", function (context) {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new src_ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\\\\@binrel{#1}{\" + \"\\\\mathrlap{#1}\" + \"\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}\" + \"{\\\\mkern0.8mu#1}\" + \"}}{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\n\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}\"); // \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\"); // \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// semantic\n// The semantic package renders the next two items by calling a glyph from the\n// bbold package. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\u27E6\", \"\\\\mathopen{[\\\\mkern-3.2mu[}\"); // blackboard bold [\n\ndefineMacro(\"\\u27E7\", \"\\\\mathclose{]\\\\mkern-3.2mu]}\"); // blackboard bold ]\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{R}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,min}}\\\\limits\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{arg\\\\,max}}\\\\limits\");\n// CONCATENATED MODULE: ./src/MacroExpander.js\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\n\nvar MacroExpander_MacroExpander =\n/*#__PURE__*/\nfunction () {\n  function MacroExpander(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace_Namespace(macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  var _proto = MacroExpander.prototype;\n\n  _proto.feed = function feed(input) {\n    this.lexer = new Lexer_Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n  ;\n\n  _proto.beginGroup = function beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n  ;\n\n  _proto.endGroup = function endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n  ;\n\n  _proto.future = function future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n  ;\n\n  _proto.popToken = function popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n  ;\n\n  _proto.pushToken = function pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n  ;\n\n  _proto.pushTokens = function pushTokens(tokens) {\n    var _this$stack;\n\n    (_this$stack = this.stack).push.apply(_this$stack, tokens);\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n  ;\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the specified number of arguments from the token stream,\n   * and return the resulting array of arguments.\n   */\n  ;\n\n  _proto.consumeArgs = function consumeArgs(numArgs) {\n    var args = []; // obtain arguments, either single token or balanced {…} group\n\n    for (var i = 0; i < numArgs; ++i) {\n      this.consumeSpaces(); // ignore spaces before each argument\n\n      var startOfArg = this.popToken();\n\n      if (startOfArg.text === \"{\") {\n        var arg = [];\n        var depth = 1;\n\n        while (depth !== 0) {\n          var tok = this.popToken();\n          arg.push(tok);\n\n          if (tok.text === \"{\") {\n            ++depth;\n          } else if (tok.text === \"}\") {\n            --depth;\n          } else if (tok.text === \"EOF\") {\n            throw new src_ParseError(\"End of input in macro argument\", startOfArg);\n          }\n        }\n\n        arg.pop(); // remove last }\n\n        arg.reverse(); // like above, to fit in with stack order\n\n        args[i] = arg;\n      } else if (startOfArg.text === \"EOF\") {\n        throw new src_ParseError(\"End of input expecting macro argument\");\n      } else {\n        args[i] = [startOfArg];\n      }\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * At the moment, macro expansion doesn't handle delimited macros,\n   * i.e. things like those defined by \\def\\foo#1\\end{…}.\n   * See the TeX book page 202ff. for details on how those should behave.\n   */\n  ;\n\n  _proto.expandOnce = function expandOnce() {\n    var topToken = this.popToken();\n    var name = topToken.text;\n\n    var expansion = this._getExpansion(name);\n\n    if (expansion == null) {\n      // mainly checking for undefined here\n      // Fully expanded\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new src_ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    var tokens = expansion.tokens;\n\n    if (expansion.numArgs) {\n      var args = this.consumeArgs(expansion.numArgs); // paste arguments in place of the placeholders\n\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new src_ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            var _tokens;\n\n            // replace the placeholder with the indicated argument\n            (_tokens = tokens).splice.apply(_tokens, [i, 2].concat(args[+tok.text - 1]));\n          } else {\n            throw new src_ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n  ;\n\n  _proto.expandAfterFuture = function expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n  ;\n\n  _proto.expandNextToken = function expandNextToken() {\n    for (;;) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        if (expanded.text === \"\\\\relax\") {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacro = function expandMacro(name) {\n    if (!this.macros.get(name)) {\n      return undefined;\n    }\n\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushToken(new Token_Token(name));\n\n    while (this.stack.length > oldStackLength) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token_Token) {\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n  ;\n\n  _proto.expandMacroAsText = function expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(function (token) {\n        return token.text;\n      }).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n  ;\n\n  _proto._getExpansion = function _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n\n    var expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      var numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        var stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer_Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens: tokens,\n        numArgs: numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n  ;\n\n  _proto.isDefined = function isDefined(name) {\n    return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  };\n\n  return MacroExpander;\n}();\n\n\n// CONCATENATED MODULE: ./src/unicodeAccents.js\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\n/* harmony default export */ var unicodeAccents = ({\n  \"\\u0301\": {\n    text: \"\\\\'\",\n    math: '\\\\acute'\n  },\n  \"\\u0300\": {\n    text: '\\\\`',\n    math: '\\\\grave'\n  },\n  \"\\u0308\": {\n    text: '\\\\\"',\n    math: '\\\\ddot'\n  },\n  \"\\u0303\": {\n    text: '\\\\~',\n    math: '\\\\tilde'\n  },\n  \"\\u0304\": {\n    text: '\\\\=',\n    math: '\\\\bar'\n  },\n  \"\\u0306\": {\n    text: \"\\\\u\",\n    math: '\\\\breve'\n  },\n  \"\\u030C\": {\n    text: '\\\\v',\n    math: '\\\\check'\n  },\n  \"\\u0302\": {\n    text: '\\\\^',\n    math: '\\\\hat'\n  },\n  \"\\u0307\": {\n    text: '\\\\.',\n    math: '\\\\dot'\n  },\n  \"\\u030A\": {\n    text: '\\\\r',\n    math: '\\\\mathring'\n  },\n  \"\\u030B\": {\n    text: '\\\\H'\n  }\n});\n// CONCATENATED MODULE: ./src/unicodeSymbols.js\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\n/* harmony default export */ var unicodeSymbols = ({\n  \"\\xE1\": \"a\\u0301\",\n  // á = \\'{a}\n  \"\\xE0\": \"a\\u0300\",\n  // à = \\`{a}\n  \"\\xE4\": \"a\\u0308\",\n  // ä = \\\"{a}\n  \"\\u01DF\": \"a\\u0308\\u0304\",\n  // ǟ = \\\"\\={a}\n  \"\\xE3\": \"a\\u0303\",\n  // ã = \\~{a}\n  \"\\u0101\": \"a\\u0304\",\n  // ā = \\={a}\n  \"\\u0103\": \"a\\u0306\",\n  // ă = \\u{a}\n  \"\\u1EAF\": \"a\\u0306\\u0301\",\n  // ắ = \\u\\'{a}\n  \"\\u1EB1\": \"a\\u0306\\u0300\",\n  // ằ = \\u\\`{a}\n  \"\\u1EB5\": \"a\\u0306\\u0303\",\n  // ẵ = \\u\\~{a}\n  \"\\u01CE\": \"a\\u030C\",\n  // ǎ = \\v{a}\n  \"\\xE2\": \"a\\u0302\",\n  // â = \\^{a}\n  \"\\u1EA5\": \"a\\u0302\\u0301\",\n  // ấ = \\^\\'{a}\n  \"\\u1EA7\": \"a\\u0302\\u0300\",\n  // ầ = \\^\\`{a}\n  \"\\u1EAB\": \"a\\u0302\\u0303\",\n  // ẫ = \\^\\~{a}\n  \"\\u0227\": \"a\\u0307\",\n  // ȧ = \\.{a}\n  \"\\u01E1\": \"a\\u0307\\u0304\",\n  // ǡ = \\.\\={a}\n  \"\\xE5\": \"a\\u030A\",\n  // å = \\r{a}\n  \"\\u01FB\": \"a\\u030A\\u0301\",\n  // ǻ = \\r\\'{a}\n  \"\\u1E03\": \"b\\u0307\",\n  // ḃ = \\.{b}\n  \"\\u0107\": \"c\\u0301\",\n  // ć = \\'{c}\n  \"\\u010D\": \"c\\u030C\",\n  // č = \\v{c}\n  \"\\u0109\": \"c\\u0302\",\n  // ĉ = \\^{c}\n  \"\\u010B\": \"c\\u0307\",\n  // ċ = \\.{c}\n  \"\\u010F\": \"d\\u030C\",\n  // ď = \\v{d}\n  \"\\u1E0B\": \"d\\u0307\",\n  // ḋ = \\.{d}\n  \"\\xE9\": \"e\\u0301\",\n  // é = \\'{e}\n  \"\\xE8\": \"e\\u0300\",\n  // è = \\`{e}\n  \"\\xEB\": \"e\\u0308\",\n  // ë = \\\"{e}\n  \"\\u1EBD\": \"e\\u0303\",\n  // ẽ = \\~{e}\n  \"\\u0113\": \"e\\u0304\",\n  // ē = \\={e}\n  \"\\u1E17\": \"e\\u0304\\u0301\",\n  // ḗ = \\=\\'{e}\n  \"\\u1E15\": \"e\\u0304\\u0300\",\n  // ḕ = \\=\\`{e}\n  \"\\u0115\": \"e\\u0306\",\n  // ĕ = \\u{e}\n  \"\\u011B\": \"e\\u030C\",\n  // ě = \\v{e}\n  \"\\xEA\": \"e\\u0302\",\n  // ê = \\^{e}\n  \"\\u1EBF\": \"e\\u0302\\u0301\",\n  // ế = \\^\\'{e}\n  \"\\u1EC1\": \"e\\u0302\\u0300\",\n  // ề = \\^\\`{e}\n  \"\\u1EC5\": \"e\\u0302\\u0303\",\n  // ễ = \\^\\~{e}\n  \"\\u0117\": \"e\\u0307\",\n  // ė = \\.{e}\n  \"\\u1E1F\": \"f\\u0307\",\n  // ḟ = \\.{f}\n  \"\\u01F5\": \"g\\u0301\",\n  // ǵ = \\'{g}\n  \"\\u1E21\": \"g\\u0304\",\n  // ḡ = \\={g}\n  \"\\u011F\": \"g\\u0306\",\n  // ğ = \\u{g}\n  \"\\u01E7\": \"g\\u030C\",\n  // ǧ = \\v{g}\n  \"\\u011D\": \"g\\u0302\",\n  // ĝ = \\^{g}\n  \"\\u0121\": \"g\\u0307\",\n  // ġ = \\.{g}\n  \"\\u1E27\": \"h\\u0308\",\n  // ḧ = \\\"{h}\n  \"\\u021F\": \"h\\u030C\",\n  // ȟ = \\v{h}\n  \"\\u0125\": \"h\\u0302\",\n  // ĥ = \\^{h}\n  \"\\u1E23\": \"h\\u0307\",\n  // ḣ = \\.{h}\n  \"\\xED\": \"i\\u0301\",\n  // í = \\'{i}\n  \"\\xEC\": \"i\\u0300\",\n  // ì = \\`{i}\n  \"\\xEF\": \"i\\u0308\",\n  // ï = \\\"{i}\n  \"\\u1E2F\": \"i\\u0308\\u0301\",\n  // ḯ = \\\"\\'{i}\n  \"\\u0129\": \"i\\u0303\",\n  // ĩ = \\~{i}\n  \"\\u012B\": \"i\\u0304\",\n  // ī = \\={i}\n  \"\\u012D\": \"i\\u0306\",\n  // ĭ = \\u{i}\n  \"\\u01D0\": \"i\\u030C\",\n  // ǐ = \\v{i}\n  \"\\xEE\": \"i\\u0302\",\n  // î = \\^{i}\n  \"\\u01F0\": \"j\\u030C\",\n  // ǰ = \\v{j}\n  \"\\u0135\": \"j\\u0302\",\n  // ĵ = \\^{j}\n  \"\\u1E31\": \"k\\u0301\",\n  // ḱ = \\'{k}\n  \"\\u01E9\": \"k\\u030C\",\n  // ǩ = \\v{k}\n  \"\\u013A\": \"l\\u0301\",\n  // ĺ = \\'{l}\n  \"\\u013E\": \"l\\u030C\",\n  // ľ = \\v{l}\n  \"\\u1E3F\": \"m\\u0301\",\n  // ḿ = \\'{m}\n  \"\\u1E41\": \"m\\u0307\",\n  // ṁ = \\.{m}\n  \"\\u0144\": \"n\\u0301\",\n  // ń = \\'{n}\n  \"\\u01F9\": \"n\\u0300\",\n  // ǹ = \\`{n}\n  \"\\xF1\": \"n\\u0303\",\n  // ñ = \\~{n}\n  \"\\u0148\": \"n\\u030C\",\n  // ň = \\v{n}\n  \"\\u1E45\": \"n\\u0307\",\n  // ṅ = \\.{n}\n  \"\\xF3\": \"o\\u0301\",\n  // ó = \\'{o}\n  \"\\xF2\": \"o\\u0300\",\n  // ò = \\`{o}\n  \"\\xF6\": \"o\\u0308\",\n  // ö = \\\"{o}\n  \"\\u022B\": \"o\\u0308\\u0304\",\n  // ȫ = \\\"\\={o}\n  \"\\xF5\": \"o\\u0303\",\n  // õ = \\~{o}\n  \"\\u1E4D\": \"o\\u0303\\u0301\",\n  // ṍ = \\~\\'{o}\n  \"\\u1E4F\": \"o\\u0303\\u0308\",\n  // ṏ = \\~\\\"{o}\n  \"\\u022D\": \"o\\u0303\\u0304\",\n  // ȭ = \\~\\={o}\n  \"\\u014D\": \"o\\u0304\",\n  // ō = \\={o}\n  \"\\u1E53\": \"o\\u0304\\u0301\",\n  // ṓ = \\=\\'{o}\n  \"\\u1E51\": \"o\\u0304\\u0300\",\n  // ṑ = \\=\\`{o}\n  \"\\u014F\": \"o\\u0306\",\n  // ŏ = \\u{o}\n  \"\\u01D2\": \"o\\u030C\",\n  // ǒ = \\v{o}\n  \"\\xF4\": \"o\\u0302\",\n  // ô = \\^{o}\n  \"\\u1ED1\": \"o\\u0302\\u0301\",\n  // ố = \\^\\'{o}\n  \"\\u1ED3\": \"o\\u0302\\u0300\",\n  // ồ = \\^\\`{o}\n  \"\\u1ED7\": \"o\\u0302\\u0303\",\n  // ỗ = \\^\\~{o}\n  \"\\u022F\": \"o\\u0307\",\n  // ȯ = \\.{o}\n  \"\\u0231\": \"o\\u0307\\u0304\",\n  // ȱ = \\.\\={o}\n  \"\\u0151\": \"o\\u030B\",\n  // ő = \\H{o}\n  \"\\u1E55\": \"p\\u0301\",\n  // ṕ = \\'{p}\n  \"\\u1E57\": \"p\\u0307\",\n  // ṗ = \\.{p}\n  \"\\u0155\": \"r\\u0301\",\n  // ŕ = \\'{r}\n  \"\\u0159\": \"r\\u030C\",\n  // ř = \\v{r}\n  \"\\u1E59\": \"r\\u0307\",\n  // ṙ = \\.{r}\n  \"\\u015B\": \"s\\u0301\",\n  // ś = \\'{s}\n  \"\\u1E65\": \"s\\u0301\\u0307\",\n  // ṥ = \\'\\.{s}\n  \"\\u0161\": \"s\\u030C\",\n  // š = \\v{s}\n  \"\\u1E67\": \"s\\u030C\\u0307\",\n  // ṧ = \\v\\.{s}\n  \"\\u015D\": \"s\\u0302\",\n  // ŝ = \\^{s}\n  \"\\u1E61\": \"s\\u0307\",\n  // ṡ = \\.{s}\n  \"\\u1E97\": \"t\\u0308\",\n  // ẗ = \\\"{t}\n  \"\\u0165\": \"t\\u030C\",\n  // ť = \\v{t}\n  \"\\u1E6B\": \"t\\u0307\",\n  // ṫ = \\.{t}\n  \"\\xFA\": \"u\\u0301\",\n  // ú = \\'{u}\n  \"\\xF9\": \"u\\u0300\",\n  // ù = \\`{u}\n  \"\\xFC\": \"u\\u0308\",\n  // ü = \\\"{u}\n  \"\\u01D8\": \"u\\u0308\\u0301\",\n  // ǘ = \\\"\\'{u}\n  \"\\u01DC\": \"u\\u0308\\u0300\",\n  // ǜ = \\\"\\`{u}\n  \"\\u01D6\": \"u\\u0308\\u0304\",\n  // ǖ = \\\"\\={u}\n  \"\\u01DA\": \"u\\u0308\\u030C\",\n  // ǚ = \\\"\\v{u}\n  \"\\u0169\": \"u\\u0303\",\n  // ũ = \\~{u}\n  \"\\u1E79\": \"u\\u0303\\u0301\",\n  // ṹ = \\~\\'{u}\n  \"\\u016B\": \"u\\u0304\",\n  // ū = \\={u}\n  \"\\u1E7B\": \"u\\u0304\\u0308\",\n  // ṻ = \\=\\\"{u}\n  \"\\u016D\": \"u\\u0306\",\n  // ŭ = \\u{u}\n  \"\\u01D4\": \"u\\u030C\",\n  // ǔ = \\v{u}\n  \"\\xFB\": \"u\\u0302\",\n  // û = \\^{u}\n  \"\\u016F\": \"u\\u030A\",\n  // ů = \\r{u}\n  \"\\u0171\": \"u\\u030B\",\n  // ű = \\H{u}\n  \"\\u1E7D\": \"v\\u0303\",\n  // ṽ = \\~{v}\n  \"\\u1E83\": \"w\\u0301\",\n  // ẃ = \\'{w}\n  \"\\u1E81\": \"w\\u0300\",\n  // ẁ = \\`{w}\n  \"\\u1E85\": \"w\\u0308\",\n  // ẅ = \\\"{w}\n  \"\\u0175\": \"w\\u0302\",\n  // ŵ = \\^{w}\n  \"\\u1E87\": \"w\\u0307\",\n  // ẇ = \\.{w}\n  \"\\u1E98\": \"w\\u030A\",\n  // ẘ = \\r{w}\n  \"\\u1E8D\": \"x\\u0308\",\n  // ẍ = \\\"{x}\n  \"\\u1E8B\": \"x\\u0307\",\n  // ẋ = \\.{x}\n  \"\\xFD\": \"y\\u0301\",\n  // ý = \\'{y}\n  \"\\u1EF3\": \"y\\u0300\",\n  // ỳ = \\`{y}\n  \"\\xFF\": \"y\\u0308\",\n  // ÿ = \\\"{y}\n  \"\\u1EF9\": \"y\\u0303\",\n  // ỹ = \\~{y}\n  \"\\u0233\": \"y\\u0304\",\n  // ȳ = \\={y}\n  \"\\u0177\": \"y\\u0302\",\n  // ŷ = \\^{y}\n  \"\\u1E8F\": \"y\\u0307\",\n  // ẏ = \\.{y}\n  \"\\u1E99\": \"y\\u030A\",\n  // ẙ = \\r{y}\n  \"\\u017A\": \"z\\u0301\",\n  // ź = \\'{z}\n  \"\\u017E\": \"z\\u030C\",\n  // ž = \\v{z}\n  \"\\u1E91\": \"z\\u0302\",\n  // ẑ = \\^{z}\n  \"\\u017C\": \"z\\u0307\",\n  // ż = \\.{z}\n  \"\\xC1\": \"A\\u0301\",\n  // Á = \\'{A}\n  \"\\xC0\": \"A\\u0300\",\n  // À = \\`{A}\n  \"\\xC4\": \"A\\u0308\",\n  // Ä = \\\"{A}\n  \"\\u01DE\": \"A\\u0308\\u0304\",\n  // Ǟ = \\\"\\={A}\n  \"\\xC3\": \"A\\u0303\",\n  // Ã = \\~{A}\n  \"\\u0100\": \"A\\u0304\",\n  // Ā = \\={A}\n  \"\\u0102\": \"A\\u0306\",\n  // Ă = \\u{A}\n  \"\\u1EAE\": \"A\\u0306\\u0301\",\n  // Ắ = \\u\\'{A}\n  \"\\u1EB0\": \"A\\u0306\\u0300\",\n  // Ằ = \\u\\`{A}\n  \"\\u1EB4\": \"A\\u0306\\u0303\",\n  // Ẵ = \\u\\~{A}\n  \"\\u01CD\": \"A\\u030C\",\n  // Ǎ = \\v{A}\n  \"\\xC2\": \"A\\u0302\",\n  // Â = \\^{A}\n  \"\\u1EA4\": \"A\\u0302\\u0301\",\n  // Ấ = \\^\\'{A}\n  \"\\u1EA6\": \"A\\u0302\\u0300\",\n  // Ầ = \\^\\`{A}\n  \"\\u1EAA\": \"A\\u0302\\u0303\",\n  // Ẫ = \\^\\~{A}\n  \"\\u0226\": \"A\\u0307\",\n  // Ȧ = \\.{A}\n  \"\\u01E0\": \"A\\u0307\\u0304\",\n  // Ǡ = \\.\\={A}\n  \"\\xC5\": \"A\\u030A\",\n  // Å = \\r{A}\n  \"\\u01FA\": \"A\\u030A\\u0301\",\n  // Ǻ = \\r\\'{A}\n  \"\\u1E02\": \"B\\u0307\",\n  // Ḃ = \\.{B}\n  \"\\u0106\": \"C\\u0301\",\n  // Ć = \\'{C}\n  \"\\u010C\": \"C\\u030C\",\n  // Č = \\v{C}\n  \"\\u0108\": \"C\\u0302\",\n  // Ĉ = \\^{C}\n  \"\\u010A\": \"C\\u0307\",\n  // Ċ = \\.{C}\n  \"\\u010E\": \"D\\u030C\",\n  // Ď = \\v{D}\n  \"\\u1E0A\": \"D\\u0307\",\n  // Ḋ = \\.{D}\n  \"\\xC9\": \"E\\u0301\",\n  // É = \\'{E}\n  \"\\xC8\": \"E\\u0300\",\n  // È = \\`{E}\n  \"\\xCB\": \"E\\u0308\",\n  // Ë = \\\"{E}\n  \"\\u1EBC\": \"E\\u0303\",\n  // Ẽ = \\~{E}\n  \"\\u0112\": \"E\\u0304\",\n  // Ē = \\={E}\n  \"\\u1E16\": \"E\\u0304\\u0301\",\n  // Ḗ = \\=\\'{E}\n  \"\\u1E14\": \"E\\u0304\\u0300\",\n  // Ḕ = \\=\\`{E}\n  \"\\u0114\": \"E\\u0306\",\n  // Ĕ = \\u{E}\n  \"\\u011A\": \"E\\u030C\",\n  // Ě = \\v{E}\n  \"\\xCA\": \"E\\u0302\",\n  // Ê = \\^{E}\n  \"\\u1EBE\": \"E\\u0302\\u0301\",\n  // Ế = \\^\\'{E}\n  \"\\u1EC0\": \"E\\u0302\\u0300\",\n  // Ề = \\^\\`{E}\n  \"\\u1EC4\": \"E\\u0302\\u0303\",\n  // Ễ = \\^\\~{E}\n  \"\\u0116\": \"E\\u0307\",\n  // Ė = \\.{E}\n  \"\\u1E1E\": \"F\\u0307\",\n  // Ḟ = \\.{F}\n  \"\\u01F4\": \"G\\u0301\",\n  // Ǵ = \\'{G}\n  \"\\u1E20\": \"G\\u0304\",\n  // Ḡ = \\={G}\n  \"\\u011E\": \"G\\u0306\",\n  // Ğ = \\u{G}\n  \"\\u01E6\": \"G\\u030C\",\n  // Ǧ = \\v{G}\n  \"\\u011C\": \"G\\u0302\",\n  // Ĝ = \\^{G}\n  \"\\u0120\": \"G\\u0307\",\n  // Ġ = \\.{G}\n  \"\\u1E26\": \"H\\u0308\",\n  // Ḧ = \\\"{H}\n  \"\\u021E\": \"H\\u030C\",\n  // Ȟ = \\v{H}\n  \"\\u0124\": \"H\\u0302\",\n  // Ĥ = \\^{H}\n  \"\\u1E22\": \"H\\u0307\",\n  // Ḣ = \\.{H}\n  \"\\xCD\": \"I\\u0301\",\n  // Í = \\'{I}\n  \"\\xCC\": \"I\\u0300\",\n  // Ì = \\`{I}\n  \"\\xCF\": \"I\\u0308\",\n  // Ï = \\\"{I}\n  \"\\u1E2E\": \"I\\u0308\\u0301\",\n  // Ḯ = \\\"\\'{I}\n  \"\\u0128\": \"I\\u0303\",\n  // Ĩ = \\~{I}\n  \"\\u012A\": \"I\\u0304\",\n  // Ī = \\={I}\n  \"\\u012C\": \"I\\u0306\",\n  // Ĭ = \\u{I}\n  \"\\u01CF\": \"I\\u030C\",\n  // Ǐ = \\v{I}\n  \"\\xCE\": \"I\\u0302\",\n  // Î = \\^{I}\n  \"\\u0130\": \"I\\u0307\",\n  // İ = \\.{I}\n  \"\\u0134\": \"J\\u0302\",\n  // Ĵ = \\^{J}\n  \"\\u1E30\": \"K\\u0301\",\n  // Ḱ = \\'{K}\n  \"\\u01E8\": \"K\\u030C\",\n  // Ǩ = \\v{K}\n  \"\\u0139\": \"L\\u0301\",\n  // Ĺ = \\'{L}\n  \"\\u013D\": \"L\\u030C\",\n  // Ľ = \\v{L}\n  \"\\u1E3E\": \"M\\u0301\",\n  // Ḿ = \\'{M}\n  \"\\u1E40\": \"M\\u0307\",\n  // Ṁ = \\.{M}\n  \"\\u0143\": \"N\\u0301\",\n  // Ń = \\'{N}\n  \"\\u01F8\": \"N\\u0300\",\n  // Ǹ = \\`{N}\n  \"\\xD1\": \"N\\u0303\",\n  // Ñ = \\~{N}\n  \"\\u0147\": \"N\\u030C\",\n  // Ň = \\v{N}\n  \"\\u1E44\": \"N\\u0307\",\n  // Ṅ = \\.{N}\n  \"\\xD3\": \"O\\u0301\",\n  // Ó = \\'{O}\n  \"\\xD2\": \"O\\u0300\",\n  // Ò = \\`{O}\n  \"\\xD6\": \"O\\u0308\",\n  // Ö = \\\"{O}\n  \"\\u022A\": \"O\\u0308\\u0304\",\n  // Ȫ = \\\"\\={O}\n  \"\\xD5\": \"O\\u0303\",\n  // Õ = \\~{O}\n  \"\\u1E4C\": \"O\\u0303\\u0301\",\n  // Ṍ = \\~\\'{O}\n  \"\\u1E4E\": \"O\\u0303\\u0308\",\n  // Ṏ = \\~\\\"{O}\n  \"\\u022C\": \"O\\u0303\\u0304\",\n  // Ȭ = \\~\\={O}\n  \"\\u014C\": \"O\\u0304\",\n  // Ō = \\={O}\n  \"\\u1E52\": \"O\\u0304\\u0301\",\n  // Ṓ = \\=\\'{O}\n  \"\\u1E50\": \"O\\u0304\\u0300\",\n  // Ṑ = \\=\\`{O}\n  \"\\u014E\": \"O\\u0306\",\n  // Ŏ = \\u{O}\n  \"\\u01D1\": \"O\\u030C\",\n  // Ǒ = \\v{O}\n  \"\\xD4\": \"O\\u0302\",\n  // Ô = \\^{O}\n  \"\\u1ED0\": \"O\\u0302\\u0301\",\n  // Ố = \\^\\'{O}\n  \"\\u1ED2\": \"O\\u0302\\u0300\",\n  // Ồ = \\^\\`{O}\n  \"\\u1ED6\": \"O\\u0302\\u0303\",\n  // Ỗ = \\^\\~{O}\n  \"\\u022E\": \"O\\u0307\",\n  // Ȯ = \\.{O}\n  \"\\u0230\": \"O\\u0307\\u0304\",\n  // Ȱ = \\.\\={O}\n  \"\\u0150\": \"O\\u030B\",\n  // Ő = \\H{O}\n  \"\\u1E54\": \"P\\u0301\",\n  // Ṕ = \\'{P}\n  \"\\u1E56\": \"P\\u0307\",\n  // Ṗ = \\.{P}\n  \"\\u0154\": \"R\\u0301\",\n  // Ŕ = \\'{R}\n  \"\\u0158\": \"R\\u030C\",\n  // Ř = \\v{R}\n  \"\\u1E58\": \"R\\u0307\",\n  // Ṙ = \\.{R}\n  \"\\u015A\": \"S\\u0301\",\n  // Ś = \\'{S}\n  \"\\u1E64\": \"S\\u0301\\u0307\",\n  // Ṥ = \\'\\.{S}\n  \"\\u0160\": \"S\\u030C\",\n  // Š = \\v{S}\n  \"\\u1E66\": \"S\\u030C\\u0307\",\n  // Ṧ = \\v\\.{S}\n  \"\\u015C\": \"S\\u0302\",\n  // Ŝ = \\^{S}\n  \"\\u1E60\": \"S\\u0307\",\n  // Ṡ = \\.{S}\n  \"\\u0164\": \"T\\u030C\",\n  // Ť = \\v{T}\n  \"\\u1E6A\": \"T\\u0307\",\n  // Ṫ = \\.{T}\n  \"\\xDA\": \"U\\u0301\",\n  // Ú = \\'{U}\n  \"\\xD9\": \"U\\u0300\",\n  // Ù = \\`{U}\n  \"\\xDC\": \"U\\u0308\",\n  // Ü = \\\"{U}\n  \"\\u01D7\": \"U\\u0308\\u0301\",\n  // Ǘ = \\\"\\'{U}\n  \"\\u01DB\": \"U\\u0308\\u0300\",\n  // Ǜ = \\\"\\`{U}\n  \"\\u01D5\": \"U\\u0308\\u0304\",\n  // Ǖ = \\\"\\={U}\n  \"\\u01D9\": \"U\\u0308\\u030C\",\n  // Ǚ = \\\"\\v{U}\n  \"\\u0168\": \"U\\u0303\",\n  // Ũ = \\~{U}\n  \"\\u1E78\": \"U\\u0303\\u0301\",\n  // Ṹ = \\~\\'{U}\n  \"\\u016A\": \"U\\u0304\",\n  // Ū = \\={U}\n  \"\\u1E7A\": \"U\\u0304\\u0308\",\n  // Ṻ = \\=\\\"{U}\n  \"\\u016C\": \"U\\u0306\",\n  // Ŭ = \\u{U}\n  \"\\u01D3\": \"U\\u030C\",\n  // Ǔ = \\v{U}\n  \"\\xDB\": \"U\\u0302\",\n  // Û = \\^{U}\n  \"\\u016E\": \"U\\u030A\",\n  // Ů = \\r{U}\n  \"\\u0170\": \"U\\u030B\",\n  // Ű = \\H{U}\n  \"\\u1E7C\": \"V\\u0303\",\n  // Ṽ = \\~{V}\n  \"\\u1E82\": \"W\\u0301\",\n  // Ẃ = \\'{W}\n  \"\\u1E80\": \"W\\u0300\",\n  // Ẁ = \\`{W}\n  \"\\u1E84\": \"W\\u0308\",\n  // Ẅ = \\\"{W}\n  \"\\u0174\": \"W\\u0302\",\n  // Ŵ = \\^{W}\n  \"\\u1E86\": \"W\\u0307\",\n  // Ẇ = \\.{W}\n  \"\\u1E8C\": \"X\\u0308\",\n  // Ẍ = \\\"{X}\n  \"\\u1E8A\": \"X\\u0307\",\n  // Ẋ = \\.{X}\n  \"\\xDD\": \"Y\\u0301\",\n  // Ý = \\'{Y}\n  \"\\u1EF2\": \"Y\\u0300\",\n  // Ỳ = \\`{Y}\n  \"\\u0178\": \"Y\\u0308\",\n  // Ÿ = \\\"{Y}\n  \"\\u1EF8\": \"Y\\u0303\",\n  // Ỹ = \\~{Y}\n  \"\\u0232\": \"Y\\u0304\",\n  // Ȳ = \\={Y}\n  \"\\u0176\": \"Y\\u0302\",\n  // Ŷ = \\^{Y}\n  \"\\u1E8E\": \"Y\\u0307\",\n  // Ẏ = \\.{Y}\n  \"\\u0179\": \"Z\\u0301\",\n  // Ź = \\'{Z}\n  \"\\u017D\": \"Z\\u030C\",\n  // Ž = \\v{Z}\n  \"\\u1E90\": \"Z\\u0302\",\n  // Ẑ = \\^{Z}\n  \"\\u017B\": \"Z\\u0307\",\n  // Ż = \\.{Z}\n  \"\\u03AC\": \"\\u03B1\\u0301\",\n  // ά = \\'{α}\n  \"\\u1F70\": \"\\u03B1\\u0300\",\n  // ὰ = \\`{α}\n  \"\\u1FB1\": \"\\u03B1\\u0304\",\n  // ᾱ = \\={α}\n  \"\\u1FB0\": \"\\u03B1\\u0306\",\n  // ᾰ = \\u{α}\n  \"\\u03AD\": \"\\u03B5\\u0301\",\n  // έ = \\'{ε}\n  \"\\u1F72\": \"\\u03B5\\u0300\",\n  // ὲ = \\`{ε}\n  \"\\u03AE\": \"\\u03B7\\u0301\",\n  // ή = \\'{η}\n  \"\\u1F74\": \"\\u03B7\\u0300\",\n  // ὴ = \\`{η}\n  \"\\u03AF\": \"\\u03B9\\u0301\",\n  // ί = \\'{ι}\n  \"\\u1F76\": \"\\u03B9\\u0300\",\n  // ὶ = \\`{ι}\n  \"\\u03CA\": \"\\u03B9\\u0308\",\n  // ϊ = \\\"{ι}\n  \"\\u0390\": \"\\u03B9\\u0308\\u0301\",\n  // ΐ = \\\"\\'{ι}\n  \"\\u1FD2\": \"\\u03B9\\u0308\\u0300\",\n  // ῒ = \\\"\\`{ι}\n  \"\\u1FD1\": \"\\u03B9\\u0304\",\n  // ῑ = \\={ι}\n  \"\\u1FD0\": \"\\u03B9\\u0306\",\n  // ῐ = \\u{ι}\n  \"\\u03CC\": \"\\u03BF\\u0301\",\n  // ό = \\'{ο}\n  \"\\u1F78\": \"\\u03BF\\u0300\",\n  // ὸ = \\`{ο}\n  \"\\u03CD\": \"\\u03C5\\u0301\",\n  // ύ = \\'{υ}\n  \"\\u1F7A\": \"\\u03C5\\u0300\",\n  // ὺ = \\`{υ}\n  \"\\u03CB\": \"\\u03C5\\u0308\",\n  // ϋ = \\\"{υ}\n  \"\\u03B0\": \"\\u03C5\\u0308\\u0301\",\n  // ΰ = \\\"\\'{υ}\n  \"\\u1FE2\": \"\\u03C5\\u0308\\u0300\",\n  // ῢ = \\\"\\`{υ}\n  \"\\u1FE1\": \"\\u03C5\\u0304\",\n  // ῡ = \\={υ}\n  \"\\u1FE0\": \"\\u03C5\\u0306\",\n  // ῠ = \\u{υ}\n  \"\\u03CE\": \"\\u03C9\\u0301\",\n  // ώ = \\'{ω}\n  \"\\u1F7C\": \"\\u03C9\\u0300\",\n  // ὼ = \\`{ω}\n  \"\\u038E\": \"\\u03A5\\u0301\",\n  // Ύ = \\'{Υ}\n  \"\\u1FEA\": \"\\u03A5\\u0300\",\n  // Ὺ = \\`{Υ}\n  \"\\u03AB\": \"\\u03A5\\u0308\",\n  // Ϋ = \\\"{Υ}\n  \"\\u1FE9\": \"\\u03A5\\u0304\",\n  // Ῡ = \\={Υ}\n  \"\\u1FE8\": \"\\u03A5\\u0306\",\n  // Ῠ = \\u{Υ}\n  \"\\u038F\": \"\\u03A9\\u0301\",\n  // Ώ = \\'{Ω}\n  \"\\u1FFA\": \"\\u03A9\\u0300\" // Ὼ = \\`{Ω}\n\n});\n// CONCATENATED MODULE: ./src/Parser.js\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nvar Parser_Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander_MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.expect = function expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.nextToken.text !== text) {\n      throw new src_ParseError(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Considers the current look ahead token as consumed,\n   * and fetches the one after that as the new look ahead.\n   */\n  ;\n\n  _proto.consume = function consume() {\n    this.nextToken = this.gullet.expandNextToken();\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  ;\n\n  _proto.switchMode = function switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n  ;\n\n  _proto.parse = function parse() {\n    // Create a group namespace for the math expression.\n    // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n    this.gullet.beginGroup(); // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    this.consume();\n    var parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\", false); // End the group namespace for the expression\n\n    this.gullet.endGroup();\n    return parse;\n  };\n\n  _proto.parseExpression = function parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.nextToken;\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n  ;\n\n  _proto.handleInfixNodes = function handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      var node = checkNodeType(body[i], \"infix\");\n\n      if (node) {\n        if (overIndex !== -1) {\n          throw new src_ParseError(\"only one infix operator per group\", node.token);\n        }\n\n        overIndex = i;\n        funcName = node.replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var _node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        _node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        _node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [_node];\n    } else {\n      return body;\n    }\n  } // The greediness of a superscript or subscript\n  ;\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  _proto.handleSupSubscript = function handleSupSubscript(name) {\n    var symbolToken = this.nextToken;\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    var group = this.parseGroup(name, false, Parser.SUPSUB_GREEDINESS);\n\n    if (!group) {\n      throw new src_ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n  ;\n\n  _proto.handleUnsupportedCmd = function handleUnsupportedCmd() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    this.consume();\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n  ;\n\n  _proto.parseAtom = function parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup(\"atom\", false, null, breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.nextToken;\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        var opNode = checkNodeType(base, \"op\");\n\n        if (opNode) {\n          var limits = lex.text === \"\\\\limits\";\n          opNode.limits = limits;\n          opNode.alwaysHandleSupSub = true;\n        } else {\n          throw new src_ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new src_ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        var prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.nextToken.text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.nextToken.text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n  ;\n\n  _proto.parseFunction = function parseFunction(breakOnTokenText, name, // For error reporting.\n  greediness) {\n    var token = this.nextToken;\n    var func = token.text;\n    var funcData = src_functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    if (greediness != null && funcData.greediness <= greediness) {\n      throw new src_ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    } // hyperref package sets the catcode of % as an active character\n\n\n    if (funcData.argTypes && funcData.argTypes[0] === \"url\") {\n      this.gullet.lexer.setCatcode(\"%\", 13);\n    } // Consume the command token after possibly switching to the\n    // mode specified by the function (for instant mode switching),\n    // and then immediately switch back.\n\n\n    if (funcData.consumeMode) {\n      var oldMode = this.mode;\n      this.switchMode(funcData.consumeMode);\n      this.consume();\n      this.switchMode(oldMode);\n    } else {\n      this.consume();\n    }\n\n    var _this$parseArguments = this.parseArguments(func, funcData),\n        args = _this$parseArguments.args,\n        optArgs = _this$parseArguments.optArgs;\n\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n  ;\n\n  _proto.callFunction = function callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token: token,\n      breakOnTokenText: breakOnTokenText\n    };\n    var func = src_functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new src_ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var baseGreediness = funcData.greediness;\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n\n      if (i > 0 && !isOptional) {\n        this.consumeSpaces();\n      } // Also consume leading spaces in math mode, as parseSymbol\n      // won't know what to do with them.  This can only happen with\n      // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n      // In LaTeX, the \\foo's get treated as (blank) arguments).\n      // In KaTeX, for now, both spaces will get consumed.\n      // TODO(edemaine)\n\n\n      if (i === 0 && !isOptional && this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var nextToken = this.nextToken;\n      var arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional, baseGreediness);\n\n      if (!arg) {\n        if (isOptional) {\n          optArgs.push(null);\n          continue;\n        }\n\n        throw new src_ParseError(\"Expected group after '\" + func + \"'\", nextToken);\n      }\n\n      (isOptional ? optArgs : args).push(arg);\n    }\n\n    return {\n      args: args,\n      optArgs: optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n  ;\n\n  _proto.parseGroupOfType = function parseGroupOfType(name, type, optional, greediness) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseGroup(name, optional, greediness, undefined, type);\n\n      case \"raw\":\n        {\n          if (optional && this.nextToken.text === \"{\") {\n            return null;\n          }\n\n          var token = this.parseStringGroup(\"raw\", optional, true);\n\n          if (token) {\n            return {\n              type: \"raw\",\n              mode: \"text\",\n              string: token.text\n            };\n          } else {\n            throw new src_ParseError(\"Expected raw group\", this.nextToken);\n          }\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseGroup(name, optional, greediness);\n\n      default:\n        throw new src_ParseError(\"Unknown group type as \" + name, this.nextToken);\n    }\n  };\n\n  _proto.consumeSpaces = function consumeSpaces() {\n    while (this.nextToken.text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n  ;\n\n  _proto.parseStringGroup = function parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional, raw) {\n    var groupBegin = optional ? \"[\" : \"{\";\n    var groupEnd = optional ? \"]\" : \"}\";\n    var nextToken = this.nextToken;\n\n    if (nextToken.text !== groupBegin) {\n      if (optional) {\n        return null;\n      } else if (raw && nextToken.text !== \"EOF\" && /[^{}[\\]]/.test(nextToken.text)) {\n        // allow a single character in raw string group\n        this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n        this.consume();\n        return nextToken;\n      }\n    }\n\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    this.expect(groupBegin);\n    var str = \"\";\n    var firstToken = this.nextToken;\n    var nested = 0; // allow nested braces in raw string group\n\n    var lastToken = firstToken;\n\n    while (raw && nested > 0 || this.nextToken.text !== groupEnd) {\n      switch (this.nextToken.text) {\n        case \"EOF\":\n          throw new src_ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(lastToken, str));\n\n        case groupBegin:\n          nested++;\n          break;\n\n        case groupEnd:\n          nested--;\n          break;\n      }\n\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    this.mode = outerMode;\n    this.gullet.lexer.setCatcode(\"%\", 14); // reset the catcode of %\n\n    this.expect(groupEnd);\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n  ;\n\n  _proto.parseRegexGroup = function parseRegexGroup(regex, modeName) {\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    var firstToken = this.nextToken;\n    var lastToken = firstToken;\n    var str = \"\";\n\n    while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n      lastToken = this.nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new src_ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n  ;\n\n  _proto.parseColorGroup = function parseColorGroup(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n\n    if (!res) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color: color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n  ;\n\n  _proto.parseSizeGroup = function parseSizeGroup(optional) {\n    var res;\n    var isBlank = false;\n\n    if (!optional && this.nextToken.text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank: isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols.\n   */\n  ;\n\n  _proto.parseUrlGroup = function parseUrlGroup(optional) {\n    var res = this.parseStringGroup(\"url\", optional, true); // get raw string\n\n    if (!res) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n    protocol = protocol != null ? protocol[1] : \"_relative\";\n    var allowed = this.settings.allowedProtocols;\n\n    if (!utils.contains(allowed, \"*\") && !utils.contains(allowed, protocol)) {\n      throw new src_ParseError(\"Forbidden protocol '\" + protocol + \"'\", res);\n    }\n\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url: url\n    };\n  }\n  /**\n   * If `optional` is false or absent, this parses an ordinary group,\n   * which is either a single nucleus (like \"x\") or an expression\n   * in braces (like \"{x+y}\") or an implicit group, a group that starts\n   * at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   * If `optional` is true, it parses either a bracket-delimited expression\n   * (like \"[x+y]\") or returns null to indicate the absence of a\n   * bracket-enclosed group.\n   * If `mode` is present, switches to that mode while parsing the group,\n   * and switches back after.\n   */\n  ;\n\n  _proto.parseGroup = function parseGroup(name, // For error reporting.\n  optional, greediness, breakOnTokenText, mode) {\n    var outerMode = this.mode;\n    var firstToken = this.nextToken;\n    var text = firstToken.text; // Switch to specified mode\n\n    if (mode) {\n      this.switchMode(mode);\n    }\n\n    var groupEnd;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (optional ? text === \"[\" : text === \"{\" || text === \"\\\\begingroup\") {\n      groupEnd = Parser.endOfGroup[text]; // Start a new group namespace\n\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      this.consume();\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.nextToken; // End group namespace before consuming symbol after close brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else if (optional) {\n      // Return nothing for an optional group\n      result = null;\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new src_ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.handleUnsupportedCmd();\n      }\n    } // Switch mode back\n\n\n    if (mode) {\n      this.switchMode(outerMode);\n    } // Make sure we got a close brace\n\n\n    if (groupEnd) {\n      this.expect(groupEnd);\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n  ;\n\n  _proto.formLigatures = function formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like verbatim\n   */\n  ;\n\n  _proto.parseSymbol = function parseSymbol() {\n    var nucleus = this.nextToken;\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new src_ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star: star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = \"\\u0131\"; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = \"\\u0237\"; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (src_symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      var group = src_symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family: family,\n          loc: loc,\n          text: text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc: loc,\n          text: text\n        };\n      }\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      }\n\n      symbol = {\n        type: \"textord\",\n        mode: this.mode,\n        loc: SourceLocation.range(nucleus),\n        text: text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new src_ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new src_ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          base: symbol\n        };\n      }\n    }\n\n    return symbol;\n  };\n\n  return Parser;\n}();\n\nParser_Parser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser_Parser.endOfGroup = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"\\\\begingroup\": \"\\\\endgroup\"\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n\n};\nParser_Parser.SUPSUB_GREEDINESS = 1;\n\n// CONCATENATED MODULE: ./src/parseTree.js\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree_parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  var parser = new Parser_Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  var tree = parser.parse(); // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new src_ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree_parseTree);\n// CONCATENATED MODULE: ./katex.js\n/* eslint no-console:0 */\n\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar katex_render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  var node = katex_renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    katex_render = function render() {\n      throw new src_ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = katex_renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar katex_generateParseTree = function generateParseTree(expression, options) {\n  var settings = new src_Settings(options);\n  return src_parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar katex_renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof src_ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan([\"katex-error\"], [new domTree_SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar katex_renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new src_Settings(options);\n\n  try {\n    var tree = src_parseTree(expression, settings);\n    return buildTree_buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return katex_renderError(error, expression, settings);\n  }\n};\n\n/* harmony default export */ var katex_0 = ({\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.10.1\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render: katex_render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString: renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError: src_ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: katex_generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: katex_renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: katex_renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span: domTree_Span,\n    Anchor: domTree_Anchor,\n    SymbolNode: domTree_SymbolNode,\n    SvgNode: SvgNode,\n    PathNode: domTree_PathNode,\n    LineNode: LineNode\n  }\n});\n// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As ECMAScript, flow[1] and jest[2]\n * doesn't support CSS modules natively, a separate entry point is used and\n * it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n/* harmony default export */ var katex_webpack = __webpack_exports__[\"default\"] = (katex_0);\n\n/***/ })\n/******/ ])[\"default\"];\n});","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// Proceess '\\n'\n\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  return true;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","module.exports = {};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typorgapher replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n                                 .replace(/[ \\n]+/g, ' ')\n                                 .trim();\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var nextLine,\n      initial,\n      offset,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldLIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      ch,\n      pos,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      token,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldLIndent = state.sCount[startLine];\n    oldParentType = state.parentType;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldLIndent;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      state.delimiters.push({\n        marker: marker,\n        jump:   i,\n        token:  state.tokens.length - 1,\n        level:  state.level,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        delimiters = state.delimiters,\n        max = state.delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', postProcess);\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// Normalize input string\n\n'use strict';\n\n\nvar NEWLINES_RE  = /\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE      = /\\u0000/g;\n\n\nmodule.exports = function inline(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","exports.f = {}.propertyIsEnumerable;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","/*\n * List of Unicode code that are flagged as number.\n *\n * Contains Unicode code of:\n * - Nd = Number, decimal digit\n * - Nl = Number, letter\n * - No = Number, other\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Nd;|;Nl;|;No;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.N = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 178, 179, 185, 188, 189, 190, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2548, 2549, 2550, 2551, 2552, 2553, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2930, 2931, 2932, 2933, 2934, 2935, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 5870, 5871, 5872, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 8304, 8308, 8309, 8310, 8311, 8312, 8313, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8581, 8582, 8583, 8584, 8585, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 10102, 10103, 10104, 10105, 10106, 10107, 10108, 10109, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 11517, 12295, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12344, 12345, 12346, 12690, 12691, 12692, 12693, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 12872, 12873, 12874, 12875, 12876, 12877, 12878, 12879, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12928, 12929, 12930, 12931, 12932, 12933, 12934, 12935, 12936, 12937, 12977, 12978, 12979, 12980, 12981, 12982, 12983, 12984, 12985, 12986, 12987, 12988, 12989, 12990, 12991, 42528, 42529, 42530, 42531, 42532, 42533, 42534, 42535, 42536, 42537, 42726, 42727, 42728, 42729, 42730, 42731, 42732, 42733, 42734, 42735, 43056, 43057, 43058, 43059, 43060, 43061, 43216, 43217, 43218, 43219, 43220, 43221, 43222, 43223, 43224, 43225, 43264, 43265, 43266, 43267, 43268, 43269, 43270, 43271, 43272, 43273, 43472, 43473, 43474, 43475, 43476, 43477, 43478, 43479, 43480, 43481, 43504, 43505, 43506, 43507, 43508, 43509, 43510, 43511, 43512, 43513, 43600, 43601, 43602, 43603, 43604, 43605, 43606, 43607, 43608, 43609, 44016, 44017, 44018, 44019, 44020, 44021, 44022, 44023, 44024, 44025, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65799, 65800, 65801, 65802, 65803, 65804, 65805, 65806, 65807, 65808, 65809, 65810, 65811, 65812, 65813, 65814, 65815, 65816, 65817, 65818, 65819, 65820, 65821, 65822, 65823, 65824, 65825, 65826, 65827, 65828, 65829, 65830, 65831, 65832, 65833, 65834, 65835, 65836, 65837, 65838, 65839, 65840, 65841, 65842, 65843, 65856, 65857, 65858, 65859, 65860, 65861, 65862, 65863, 65864, 65865, 65866, 65867, 65868, 65869, 65870, 65871, 65872, 65873, 65874, 65875, 65876, 65877, 65878, 65879, 65880, 65881, 65882, 65883, 65884, 65885, 65886, 65887, 65888, 65889, 65890, 65891, 65892, 65893, 65894, 65895, 65896, 65897, 65898, 65899, 65900, 65901, 65902, 65903, 65904, 65905, 65906, 65907, 65908, 65909, 65910, 65911, 65912, 65930, 65931, 66273, 66274, 66275, 66276, 66277, 66278, 66279, 66280, 66281, 66282, 66283, 66284, 66285, 66286, 66287, 66288, 66289, 66290, 66291, 66292, 66293, 66294, 66295, 66296, 66297, 66298, 66299, 66336, 66337, 66338, 66339, 66369, 66378, 66513, 66514, 66515, 66516, 66517, 66720, 66721, 66722, 66723, 66724, 66725, 66726, 66727, 66728, 66729, 67672, 67673, 67674, 67675, 67676, 67677, 67678, 67679, 67705, 67706, 67707, 67708, 67709, 67710, 67711, 67751, 67752, 67753, 67754, 67755, 67756, 67757, 67758, 67759, 67835, 67836, 67837, 67838, 67839, 67862, 67863, 67864, 67865, 67866, 67867, 68028, 68029, 68032, 68033, 68034, 68035, 68036, 68037, 68038, 68039, 68040, 68041, 68042, 68043, 68044, 68045, 68046, 68047, 68050, 68051, 68052, 68053, 68054, 68055, 68056, 68057, 68058, 68059, 68060, 68061, 68062, 68063, 68064, 68065, 68066, 68067, 68068, 68069, 68070, 68071, 68072, 68073, 68074, 68075, 68076, 68077, 68078, 68079, 68080, 68081, 68082, 68083, 68084, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 68095, 68160, 68161, 68162, 68163, 68164, 68165, 68166, 68167, 68221, 68222, 68253, 68254, 68255, 68331, 68332, 68333, 68334, 68335, 68440, 68441, 68442, 68443, 68444, 68445, 68446, 68447, 68472, 68473, 68474, 68475, 68476, 68477, 68478, 68479, 68521, 68522, 68523, 68524, 68525, 68526, 68527, 68858, 68859, 68860, 68861, 68862, 68863, 69216, 69217, 69218, 69219, 69220, 69221, 69222, 69223, 69224, 69225, 69226, 69227, 69228, 69229, 69230, 69231, 69232, 69233, 69234, 69235, 69236, 69237, 69238, 69239, 69240, 69241, 69242, 69243, 69244, 69245, 69246, 69714, 69715, 69716, 69717, 69718, 69719, 69720, 69721, 69722, 69723, 69724, 69725, 69726, 69727, 69728, 69729, 69730, 69731, 69732, 69733, 69734, 69735, 69736, 69737, 69738, 69739, 69740, 69741, 69742, 69743, 69872, 69873, 69874, 69875, 69876, 69877, 69878, 69879, 69880, 69881, 69942, 69943, 69944, 69945, 69946, 69947, 69948, 69949, 69950, 69951, 70096, 70097, 70098, 70099, 70100, 70101, 70102, 70103, 70104, 70105, 70113, 70114, 70115, 70116, 70117, 70118, 70119, 70120, 70121, 70122, 70123, 70124, 70125, 70126, 70127, 70128, 70129, 70130, 70131, 70132, 70384, 70385, 70386, 70387, 70388, 70389, 70390, 70391, 70392, 70393, 70864, 70865, 70866, 70867, 70868, 70869, 70870, 70871, 70872, 70873, 71248, 71249, 71250, 71251, 71252, 71253, 71254, 71255, 71256, 71257, 71360, 71361, 71362, 71363, 71364, 71365, 71366, 71367, 71368, 71369, 71472, 71473, 71474, 71475, 71476, 71477, 71478, 71479, 71480, 71481, 71482, 71483, 71904, 71905, 71906, 71907, 71908, 71909, 71910, 71911, 71912, 71913, 71914, 71915, 71916, 71917, 71918, 71919, 71920, 71921, 71922, 74752, 74753, 74754, 74755, 74756, 74757, 74758, 74759, 74760, 74761, 74762, 74763, 74764, 74765, 74766, 74767, 74768, 74769, 74770, 74771, 74772, 74773, 74774, 74775, 74776, 74777, 74778, 74779, 74780, 74781, 74782, 74783, 74784, 74785, 74786, 74787, 74788, 74789, 74790, 74791, 74792, 74793, 74794, 74795, 74796, 74797, 74798, 74799, 74800, 74801, 74802, 74803, 74804, 74805, 74806, 74807, 74808, 74809, 74810, 74811, 74812, 74813, 74814, 74815, 74816, 74817, 74818, 74819, 74820, 74821, 74822, 74823, 74824, 74825, 74826, 74827, 74828, 74829, 74830, 74831, 74832, 74833, 74834, 74835, 74836, 74837, 74838, 74839, 74840, 74841, 74842, 74843, 74844, 74845, 74846, 74847, 74848, 74849, 74850, 74851, 74852, 74853, 74854, 74855, 74856, 74857, 74858, 74859, 74860, 74861, 74862, 92768, 92769, 92770, 92771, 92772, 92773, 92774, 92775, 92776, 92777, 93008, 93009, 93010, 93011, 93012, 93013, 93014, 93015, 93016, 93017, 93019, 93020, 93021, 93022, 93023, 93024, 93025, 119648, 119649, 119650, 119651, 119652, 119653, 119654, 119655, 119656, 119657, 119658, 119659, 119660, 119661, 119662, 119663, 119664, 119665, 120782, 120783, 120784, 120785, 120786, 120787, 120788, 120789, 120790, 120791, 120792, 120793, 120794, 120795, 120796, 120797, 120798, 120799, 120800, 120801, 120802, 120803, 120804, 120805, 120806, 120807, 120808, 120809, 120810, 120811, 120812, 120813, 120814, 120815, 120816, 120817, 120818, 120819, 120820, 120821, 120822, 120823, 120824, 120825, 120826, 120827, 120828, 120829, 120830, 120831, 125127, 125128, 125129, 125130, 125131, 125132, 125133, 125134, 125135, 127232, 127233, 127234, 127235, 127236, 127237, 127238, 127239, 127240, 127241, 127242, 127243, 127244];\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","// Proceess escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = require(\"core-js/library/fn/array/from\");","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      attrs = slf.renderAttrs(token);\n\n  return  '<code' + (attrs ? ' ' + attrs : '') + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      attrs = slf.renderAttrs(token);\n\n  return  '<pre' + (attrs ? ' ' + attrs : '') + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without mudofying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independed static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","/*\n * List of Unicode code that are flagged as mark.\n *\n * Contains Unicode code of:\n * - Mc = Mark, spacing combining\n * - Me = Mark, enclosing\n * - Mn = Mark, nonspacing\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Mc;|;Me;|;Mn;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.M = [768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1476, 1477, 1479, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1648, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1770, 1771, 1772, 1773, 1809, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2093, 2137, 2138, 2139, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2362, 2363, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2402, 2403, 2433, 2434, 2435, 2492, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2503, 2504, 2507, 2508, 2509, 2519, 2530, 2531, 2561, 2562, 2563, 2620, 2622, 2623, 2624, 2625, 2626, 2631, 2632, 2635, 2636, 2637, 2641, 2672, 2673, 2677, 2689, 2690, 2691, 2748, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2759, 2760, 2761, 2763, 2764, 2765, 2786, 2787, 2817, 2818, 2819, 2876, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2887, 2888, 2891, 2892, 2893, 2902, 2903, 2914, 2915, 2946, 3006, 3007, 3008, 3009, 3010, 3014, 3015, 3016, 3018, 3019, 3020, 3021, 3031, 3072, 3073, 3074, 3075, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3142, 3143, 3144, 3146, 3147, 3148, 3149, 3157, 3158, 3170, 3171, 3201, 3202, 3203, 3260, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3285, 3286, 3298, 3299, 3329, 3330, 3331, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3398, 3399, 3400, 3402, 3403, 3404, 3405, 3415, 3426, 3427, 3458, 3459, 3530, 3535, 3536, 3537, 3538, 3539, 3540, 3542, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3570, 3571, 3633, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3761, 3764, 3765, 3766, 3767, 3768, 3769, 3771, 3772, 3784, 3785, 3786, 3787, 3788, 3789, 3864, 3865, 3893, 3895, 3897, 3902, 3903, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4038, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4182, 4183, 4184, 4185, 4190, 4191, 4192, 4194, 4195, 4196, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4209, 4210, 4211, 4212, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4239, 4250, 4251, 4252, 4253, 4957, 4958, 4959, 5906, 5907, 5908, 5938, 5939, 5940, 5970, 5971, 6002, 6003, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6109, 6155, 6156, 6157, 6313, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6679, 6680, 6681, 6682, 6683, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6783, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6912, 6913, 6914, 6915, 6916, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7040, 7041, 7042, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7376, 7377, 7378, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7405, 7410, 7411, 7412, 7416, 7417, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7676, 7677, 7678, 7679, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 11503, 11504, 11505, 11647, 11744, 11745, 11746, 11747, 11748, 11749, 11750, 11751, 11752, 11753, 11754, 11755, 11756, 11757, 11758, 11759, 11760, 11761, 11762, 11763, 11764, 11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775, 12330, 12331, 12332, 12333, 12334, 12335, 12441, 12442, 42607, 42608, 42609, 42610, 42612, 42613, 42614, 42615, 42616, 42617, 42618, 42619, 42620, 42621, 42654, 42655, 42736, 42737, 43010, 43014, 43019, 43043, 43044, 43045, 43046, 43047, 43136, 43137, 43188, 43189, 43190, 43191, 43192, 43193, 43194, 43195, 43196, 43197, 43198, 43199, 43200, 43201, 43202, 43203, 43204, 43232, 43233, 43234, 43235, 43236, 43237, 43238, 43239, 43240, 43241, 43242, 43243, 43244, 43245, 43246, 43247, 43248, 43249, 43302, 43303, 43304, 43305, 43306, 43307, 43308, 43309, 43335, 43336, 43337, 43338, 43339, 43340, 43341, 43342, 43343, 43344, 43345, 43346, 43347, 43392, 43393, 43394, 43395, 43443, 43444, 43445, 43446, 43447, 43448, 43449, 43450, 43451, 43452, 43453, 43454, 43455, 43456, 43493, 43561, 43562, 43563, 43564, 43565, 43566, 43567, 43568, 43569, 43570, 43571, 43572, 43573, 43574, 43587, 43596, 43597, 43643, 43644, 43645, 43696, 43698, 43699, 43700, 43703, 43704, 43710, 43711, 43713, 43755, 43756, 43757, 43758, 43759, 43765, 43766, 44003, 44004, 44005, 44006, 44007, 44008, 44009, 44010, 44012, 44013, 64286, 65024, 65025, 65026, 65027, 65028, 65029, 65030, 65031, 65032, 65033, 65034, 65035, 65036, 65037, 65038, 65039, 65056, 65057, 65058, 65059, 65060, 65061, 65062, 65063, 65064, 65065, 65066, 65067, 65068, 65069, 65070, 65071, 66045, 66272, 66422, 66423, 66424, 66425, 66426, 68097, 68098, 68099, 68101, 68102, 68108, 68109, 68110, 68111, 68152, 68153, 68154, 68159, 68325, 68326, 69632, 69633, 69634, 69688, 69689, 69690, 69691, 69692, 69693, 69694, 69695, 69696, 69697, 69698, 69699, 69700, 69701, 69702, 69759, 69760, 69761, 69762, 69808, 69809, 69810, 69811, 69812, 69813, 69814, 69815, 69816, 69817, 69818, 69888, 69889, 69890, 69927, 69928, 69929, 69930, 69931, 69932, 69933, 69934, 69935, 69936, 69937, 69938, 69939, 69940, 70003, 70016, 70017, 70018, 70067, 70068, 70069, 70070, 70071, 70072, 70073, 70074, 70075, 70076, 70077, 70078, 70079, 70080, 70090, 70091, 70092, 70188, 70189, 70190, 70191, 70192, 70193, 70194, 70195, 70196, 70197, 70198, 70199, 70367, 70368, 70369, 70370, 70371, 70372, 70373, 70374, 70375, 70376, 70377, 70378, 70400, 70401, 70402, 70403, 70460, 70462, 70463, 70464, 70465, 70466, 70467, 70468, 70471, 70472, 70475, 70476, 70477, 70487, 70498, 70499, 70502, 70503, 70504, 70505, 70506, 70507, 70508, 70512, 70513, 70514, 70515, 70516, 70832, 70833, 70834, 70835, 70836, 70837, 70838, 70839, 70840, 70841, 70842, 70843, 70844, 70845, 70846, 70847, 70848, 70849, 70850, 70851, 71087, 71088, 71089, 71090, 71091, 71092, 71093, 71096, 71097, 71098, 71099, 71100, 71101, 71102, 71103, 71104, 71132, 71133, 71216, 71217, 71218, 71219, 71220, 71221, 71222, 71223, 71224, 71225, 71226, 71227, 71228, 71229, 71230, 71231, 71232, 71339, 71340, 71341, 71342, 71343, 71344, 71345, 71346, 71347, 71348, 71349, 71350, 71351, 71453, 71454, 71455, 71456, 71457, 71458, 71459, 71460, 71461, 71462, 71463, 71464, 71465, 71466, 71467, 92912, 92913, 92914, 92915, 92916, 92976, 92977, 92978, 92979, 92980, 92981, 92982, 94033, 94034, 94035, 94036, 94037, 94038, 94039, 94040, 94041, 94042, 94043, 94044, 94045, 94046, 94047, 94048, 94049, 94050, 94051, 94052, 94053, 94054, 94055, 94056, 94057, 94058, 94059, 94060, 94061, 94062, 94063, 94064, 94065, 94066, 94067, 94068, 94069, 94070, 94071, 94072, 94073, 94074, 94075, 94076, 94077, 94078, 94095, 94096, 94097, 94098, 113821, 113822, 119141, 119142, 119143, 119144, 119145, 119149, 119150, 119151, 119152, 119153, 119154, 119163, 119164, 119165, 119166, 119167, 119168, 119169, 119170, 119173, 119174, 119175, 119176, 119177, 119178, 119179, 119210, 119211, 119212, 119213, 119362, 119363, 119364, 121344, 121345, 121346, 121347, 121348, 121349, 121350, 121351, 121352, 121353, 121354, 121355, 121356, 121357, 121358, 121359, 121360, 121361, 121362, 121363, 121364, 121365, 121366, 121367, 121368, 121369, 121370, 121371, 121372, 121373, 121374, 121375, 121376, 121377, 121378, 121379, 121380, 121381, 121382, 121383, 121384, 121385, 121386, 121387, 121388, 121389, 121390, 121391, 121392, 121393, 121394, 121395, 121396, 121397, 121398, 121403, 121404, 121405, 121406, 121407, 121408, 121409, 121410, 121411, 121412, 121413, 121414, 121415, 121416, 121417, 121418, 121419, 121420, 121421, 121422, 121423, 121424, 121425, 121426, 121427, 121428, 121429, 121430, 121431, 121432, 121433, 121434, 121435, 121436, 121437, 121438, 121439, 121440, 121441, 121442, 121443, 121444, 121445, 121446, 121447, 121448, 121449, 121450, 121451, 121452, 121461, 121476, 121499, 121500, 121501, 121502, 121503, 121505, 121506, 121507, 121508, 121509, 121510, 121511, 121512, 121513, 121514, 121515, 121516, 121517, 121518, 121519, 125136, 125137, 125138, 125139, 125140, 125141, 125142, 917760, 917761, 917762, 917763, 917764, 917765, 917766, 917767, 917768, 917769, 917770, 917771, 917772, 917773, 917774, 917775, 917776, 917777, 917778, 917779, 917780, 917781, 917782, 917783, 917784, 917785, 917786, 917787, 917788, 917789, 917790, 917791, 917792, 917793, 917794, 917795, 917796, 917797, 917798, 917799, 917800, 917801, 917802, 917803, 917804, 917805, 917806, 917807, 917808, 917809, 917810, 917811, 917812, 917813, 917814, 917815, 917816, 917817, 917818, 917819, 917820, 917821, 917822, 917823, 917824, 917825, 917826, 917827, 917828, 917829, 917830, 917831, 917832, 917833, 917834, 917835, 917836, 917837, 917838, 917839, 917840, 917841, 917842, 917843, 917844, 917845, 917846, 917847, 917848, 917849, 917850, 917851, 917852, 917853, 917854, 917855, 917856, 917857, 917858, 917859, 917860, 917861, 917862, 917863, 917864, 917865, 917866, 917867, 917868, 917869, 917870, 917871, 917872, 917873, 917874, 917875, 917876, 917877, 917878, 917879, 917880, 917881, 917882, 917883, 917884, 917885, 917886, 917887, 917888, 917889, 917890, 917891, 917892, 917893, 917894, 917895, 917896, 917897, 917898, 917899, 917900, 917901, 917902, 917903, 917904, 917905, 917906, 917907, 917908, 917909, 917910, 917911, 917912, 917913, 917914, 917915, 917916, 917917, 917918, 917919, 917920, 917921, 917922, 917923, 917924, 917925, 917926, 917927, 917928, 917929, 917930, 917931, 917932, 917933, 917934, 917935, 917936, 917937, 917938, 917939, 917940, 917941, 917942, 917943, 917944, 917945, 917946, 917947, 917948, 917949, 917950, 917951, 917952, 917953, 917954, 917955, 917956, 917957, 917958, 917959, 917960, 917961, 917962, 917963, 917964, 917965, 917966, 917967, 917968, 917969, 917970, 917971, 917972, 917973, 917974, 917975, 917976, 917977, 917978, 917979, 917980, 917981, 917982, 917983, 917984, 917985, 917986, 917987, 917988, 917989, 917990, 917991, 917992, 917993, 917994, 917995, 917996, 917997, 917998, 917999];\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","// GFM table, non-standard\n\n'use strict';\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */ && (escapes % 2 === 0)) {\n      backTicked = !backTicked;\n      lastBackTick = pos;\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    } else if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine);\n    if (lineText.indexOf('|') === -1) { break; }\n\n    // keep spaces at beginning of line to indicate an empty first cell, but\n    // strip trailing whitespace\n    columns = escapedSplit(lineText.replace(/^\\||\\|\\s*$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - lineIndent % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nmodule.exports = function link_pairs(state) {\n  var i, j, lastDelim, currDelim,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    lastDelim = delimiters[i];\n\n    if (!lastDelim.close) { continue; }\n\n    j = i - lastDelim.jump - 1;\n\n    while (j >= 0) {\n      currDelim = delimiters[j];\n\n      if (currDelim.open &&\n          currDelim.marker === lastDelim.marker &&\n          currDelim.end < 0 &&\n          currDelim.level === lastDelim.level) {\n\n        lastDelim.jump = i - j;\n        lastDelim.open = false;\n        currDelim.end  = i;\n        currDelim.jump = 0;\n        break;\n      }\n\n      j -= currDelim.jump + 1;\n    }\n  }\n};\n","module.exports = function () { /* empty */ };\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","/*!\n  * vue-router v3.0.2\n  * (c) 2018 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : decodeURI(href.slice(index + 1))\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.2';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","module.exports = require('./_hide');\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      jump:   i,\n      token:  state.tokens.length - 1,\n      level:  state.level,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token, emptyLines = 0;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      emptyLines++;\n\n      // workaround for lists: 2 blank lines should terminate indented\n      // code block, but not fenced code block\n      if (emptyLines >= 2 && state.parentType === 'list') {\n        break;\n      }\n\n      nextLine++;\n      continue;\n    }\n\n    emptyLines = 0;\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","/**\n * vue-markdown v2.2.4\n * https://github.com/miaolz123/vue-markdown\n * MIT License\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-runtime/core-js/get-iterator\"), require(\"babel-runtime/core-js/object/keys\"), require(\"markdown-it\"), require(\"markdown-it-emoji\"), require(\"markdown-it-sub\"), require(\"markdown-it-sup\"), require(\"markdown-it-footnote\"), require(\"markdown-it-deflist\"), require(\"markdown-it-abbr\"), require(\"markdown-it-ins\"), require(\"markdown-it-mark\"), require(\"markdown-it-toc-and-anchor\"), require(\"markdown-it-katex\"), require(\"markdown-it-task-lists\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babel-runtime/core-js/get-iterator\", \"babel-runtime/core-js/object/keys\", \"markdown-it\", \"markdown-it-emoji\", \"markdown-it-sub\", \"markdown-it-sup\", \"markdown-it-footnote\", \"markdown-it-deflist\", \"markdown-it-abbr\", \"markdown-it-ins\", \"markdown-it-mark\", \"markdown-it-toc-and-anchor\", \"markdown-it-katex\", \"markdown-it-task-lists\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueMarkdown\"] = factory(require(\"babel-runtime/core-js/get-iterator\"), require(\"babel-runtime/core-js/object/keys\"), require(\"markdown-it\"), require(\"markdown-it-emoji\"), require(\"markdown-it-sub\"), require(\"markdown-it-sup\"), require(\"markdown-it-footnote\"), require(\"markdown-it-deflist\"), require(\"markdown-it-abbr\"), require(\"markdown-it-ins\"), require(\"markdown-it-mark\"), require(\"markdown-it-toc-and-anchor\"), require(\"markdown-it-katex\"), require(\"markdown-it-task-lists\"));\n\telse\n\t\troot[\"VueMarkdown\"] = factory(root[\"babel-runtime/core-js/get-iterator\"], root[\"babel-runtime/core-js/object/keys\"], root[\"markdown-it\"], root[\"markdown-it-emoji\"], root[\"markdown-it-sub\"], root[\"markdown-it-sup\"], root[\"markdown-it-footnote\"], root[\"markdown-it-deflist\"], root[\"markdown-it-abbr\"], root[\"markdown-it-ins\"], root[\"markdown-it-mark\"], root[\"markdown-it-toc-and-anchor\"], root[\"markdown-it-katex\"], root[\"markdown-it-task-lists\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _getIterator2 = __webpack_require__(1);\n\n\tvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\n\tvar _keys = __webpack_require__(2);\n\n\tvar _keys2 = _interopRequireDefault(_keys);\n\n\tvar _markdownIt = __webpack_require__(3);\n\n\tvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\n\tvar _markdownItEmoji = __webpack_require__(4);\n\n\tvar _markdownItEmoji2 = _interopRequireDefault(_markdownItEmoji);\n\n\tvar _markdownItSub = __webpack_require__(5);\n\n\tvar _markdownItSub2 = _interopRequireDefault(_markdownItSub);\n\n\tvar _markdownItSup = __webpack_require__(6);\n\n\tvar _markdownItSup2 = _interopRequireDefault(_markdownItSup);\n\n\tvar _markdownItFootnote = __webpack_require__(7);\n\n\tvar _markdownItFootnote2 = _interopRequireDefault(_markdownItFootnote);\n\n\tvar _markdownItDeflist = __webpack_require__(8);\n\n\tvar _markdownItDeflist2 = _interopRequireDefault(_markdownItDeflist);\n\n\tvar _markdownItAbbr = __webpack_require__(9);\n\n\tvar _markdownItAbbr2 = _interopRequireDefault(_markdownItAbbr);\n\n\tvar _markdownItIns = __webpack_require__(10);\n\n\tvar _markdownItIns2 = _interopRequireDefault(_markdownItIns);\n\n\tvar _markdownItMark = __webpack_require__(11);\n\n\tvar _markdownItMark2 = _interopRequireDefault(_markdownItMark);\n\n\tvar _markdownItTocAndAnchor = __webpack_require__(12);\n\n\tvar _markdownItTocAndAnchor2 = _interopRequireDefault(_markdownItTocAndAnchor);\n\n\tvar _markdownItKatex = __webpack_require__(13);\n\n\tvar _markdownItKatex2 = _interopRequireDefault(_markdownItKatex);\n\n\tvar _markdownItTaskLists = __webpack_require__(14);\n\n\tvar _markdownItTaskLists2 = _interopRequireDefault(_markdownItTaskLists);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  md: new _markdownIt2.default(),\n\n\t  template: '<div><slot></slot></div>',\n\n\t  data: function data() {\n\t    return {\n\t      sourceData: this.source\n\t    };\n\t  },\n\n\n\t  props: {\n\t    watches: {\n\t      type: Array,\n\t      default: function _default() {\n\t        return ['source', 'show', 'toc'];\n\t      }\n\t    },\n\t    source: {\n\t      type: String,\n\t      default: ''\n\t    },\n\t    show: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    highlight: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    html: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    xhtmlOut: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    breaks: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    linkify: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    emoji: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    typographer: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    langPrefix: {\n\t      type: String,\n\t      default: 'language-'\n\t    },\n\t    quotes: {\n\t      type: String,\n\t      default: '“”‘’'\n\t    },\n\t    tableClass: {\n\t      type: String,\n\t      default: 'table'\n\t    },\n\t    taskLists: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    toc: {\n\t      type: Boolean,\n\t      default: false\n\t    },\n\t    tocId: {\n\t      type: String\n\t    },\n\t    tocClass: {\n\t      type: String,\n\t      default: 'table-of-contents'\n\t    },\n\t    tocFirstLevel: {\n\t      type: Number,\n\t      default: 2\n\t    },\n\t    tocLastLevel: {\n\t      type: Number\n\t    },\n\t    tocAnchorLink: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    tocAnchorClass: {\n\t      type: String,\n\t      default: 'toc-anchor'\n\t    },\n\t    tocAnchorLinkSymbol: {\n\t      type: String,\n\t      default: '#'\n\t    },\n\t    tocAnchorLinkSpace: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    tocAnchorLinkClass: {\n\t      type: String,\n\t      default: 'toc-anchor-link'\n\t    },\n\t    anchorAttributes: {\n\t      type: Object,\n\t      default: function _default() {\n\t        return {};\n\t      }\n\t    },\n\t    prerender: {\n\t      type: Function,\n\t      default: function _default(sourceData) {\n\t        return sourceData;\n\t      }\n\t    },\n\t    postrender: {\n\t      type: Function,\n\t      default: function _default(htmlData) {\n\t        return htmlData;\n\t      }\n\t    }\n\t  },\n\n\t  computed: {\n\t    tocLastLevelComputed: function tocLastLevelComputed() {\n\t      return this.tocLastLevel > this.tocFirstLevel ? this.tocLastLevel : this.tocFirstLevel + 1;\n\t    }\n\t  },\n\n\t  render: function render(createElement) {\n\t    var _this = this;\n\n\t    this.md = new _markdownIt2.default().use(_markdownItSub2.default).use(_markdownItSup2.default).use(_markdownItFootnote2.default).use(_markdownItDeflist2.default).use(_markdownItAbbr2.default).use(_markdownItIns2.default).use(_markdownItMark2.default).use(_markdownItKatex2.default, { \"throwOnError\": false, \"errorColor\": \" #cc0000\" }).use(_markdownItTaskLists2.default, { enabled: this.taskLists });\n\n\t    if (this.emoji) {\n\t      this.md.use(_markdownItEmoji2.default);\n\t    }\n\n\t    this.md.set({\n\t      html: this.html,\n\t      xhtmlOut: this.xhtmlOut,\n\t      breaks: this.breaks,\n\t      linkify: this.linkify,\n\t      typographer: this.typographer,\n\t      langPrefix: this.langPrefix,\n\t      quotes: this.quotes\n\t    });\n\t    this.md.renderer.rules.table_open = function () {\n\t      return '<table class=\"' + _this.tableClass + '\">\\n';\n\t    };\n\t    var defaultLinkRenderer = this.md.renderer.rules.link_open || function (tokens, idx, options, env, self) {\n\t      return self.renderToken(tokens, idx, options);\n\t    };\n\t    this.md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n\t      (0, _keys2.default)(_this.anchorAttributes).map(function (attribute) {\n\t        var aIndex = tokens[idx].attrIndex(attribute);\n\t        var value = _this.anchorAttributes[attribute];\n\t        if (aIndex < 0) {\n\t          tokens[idx].attrPush([attribute, value]); // add new attribute\n\t        } else {\n\t          tokens[idx].attrs[aIndex][1] = value;\n\t        }\n\t      });\n\t      return defaultLinkRenderer(tokens, idx, options, env, self);\n\t    };\n\n\t    if (this.toc) {\n\t      this.md.use(_markdownItTocAndAnchor2.default, {\n\t        tocClassName: this.tocClass,\n\t        tocFirstLevel: this.tocFirstLevel,\n\t        tocLastLevel: this.tocLastLevelComputed,\n\t        anchorLink: this.tocAnchorLink,\n\t        anchorLinkSymbol: this.tocAnchorLinkSymbol,\n\t        anchorLinkSpace: this.tocAnchorLinkSpace,\n\t        anchorClassName: this.tocAnchorClass,\n\t        anchorLinkSymbolClassName: this.tocAnchorLinkClass,\n\t        tocCallback: function tocCallback(tocMarkdown, tocArray, tocHtml) {\n\t          if (tocHtml) {\n\t            if (_this.tocId && document.getElementById(_this.tocId)) {\n\t              document.getElementById(_this.tocId).innerHTML = tocHtml;\n\t            }\n\n\t            _this.$emit('toc-rendered', tocHtml);\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    var outHtml = this.show ? this.md.render(this.prerender(this.sourceData)) : '';\n\t    outHtml = this.postrender(outHtml);\n\n\t    this.$emit('rendered', outHtml);\n\t    return createElement('div', {\n\t      domProps: {\n\t        innerHTML: outHtml\n\t      }\n\t    });\n\t  },\n\t  beforeMount: function beforeMount() {\n\t    var _this2 = this;\n\n\t    if (this.$slots.default) {\n\t      this.sourceData = '';\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = (0, _getIterator3.default)(this.$slots.default), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var slot = _step.value;\n\n\t          this.sourceData += slot.text;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    this.$watch('source', function () {\n\t      _this2.sourceData = _this2.prerender(_this2.source);\n\t      _this2.$forceUpdate();\n\t    });\n\n\t    this.watches.forEach(function (v) {\n\t      _this2.$watch(v, function () {\n\t        _this2.$forceUpdate();\n\t      });\n\t    });\n\t  }\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ })\n/******/ ])\n});\n;","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","/* Process inline math */\n/*\nLike markdown-it-simplemath, this is a stripped down, simplified version of:\nhttps://github.com/runarberg/markdown-it-math\n\nIt differs in that it takes (a subset of) LaTeX as input and relies on KaTeX\nfor rendering output.\n*/\n\n/*jslint node: true */\n'use strict';\n\nvar katex = require('katex');\n\n// Test if potential opening or closing delimieter\n// Assumes that there is a \"$\" at state.src[pos]\nfunction isValidDelim(state, pos) {\n    var prevChar, nextChar,\n        max = state.posMax,\n        can_open = true,\n        can_close = true;\n\n    prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n    nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n    // Check non-whitespace conditions for opening and closing, and\n    // check that closing delimeter isn't followed by a number\n    if (prevChar === 0x20/* \" \" */ || prevChar === 0x09/* \\t */ ||\n            (nextChar >= 0x30/* \"0\" */ && nextChar <= 0x39/* \"9\" */)) {\n        can_close = false;\n    }\n    if (nextChar === 0x20/* \" \" */ || nextChar === 0x09/* \\t */) {\n        can_open = false;\n    }\n\n    return {\n        can_open: can_open,\n        can_close: can_close\n    };\n}\n\nfunction math_inline(state, silent) {\n    var start, match, token, res, pos, esc_count;\n\n    if (state.src[state.pos] !== \"$\") { return false; }\n\n    res = isValidDelim(state, state.pos);\n    if (!res.can_open) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos += 1;\n        return true;\n    }\n\n    // First check for and bypass all properly escaped delimieters\n    // This loop will assume that the first leading backtick can not\n    // be the first character in state.src, which is known since\n    // we have found an opening delimieter already.\n    start = state.pos + 1;\n    match = start;\n    while ( (match = state.src.indexOf(\"$\", match)) !== -1) {\n        // Found potential $, look for escapes, pos will point to\n        // first non escape when complete\n        pos = match - 1;\n        while (state.src[pos] === \"\\\\\") { pos -= 1; }\n\n        // Even number of escapes, potential closing delimiter found\n        if ( ((match - pos) % 2) == 1 ) { break; }\n        match += 1;\n    }\n\n    // No closing delimter found.  Consume $ and continue.\n    if (match === -1) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    // Check if we have empty content, ie: $$.  Do not parse.\n    if (match - start === 0) {\n        if (!silent) { state.pending += \"$$\"; }\n        state.pos = start + 1;\n        return true;\n    }\n\n    // Check for valid closing delimiter\n    res = isValidDelim(state, match);\n    if (!res.can_close) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    if (!silent) {\n        token         = state.push('math_inline', 'math', 0);\n        token.markup  = \"$\";\n        token.content = state.src.slice(start, match);\n    }\n\n    state.pos = match + 1;\n    return true;\n}\n\nfunction math_block(state, start, end, silent){\n    var firstLine, lastLine, next, lastPos, found = false, token,\n        pos = state.bMarks[start] + state.tShift[start],\n        max = state.eMarks[start]\n\n    if(pos + 2 > max){ return false; }\n    if(state.src.slice(pos,pos+2)!=='$$'){ return false; }\n\n    pos += 2;\n    firstLine = state.src.slice(pos,max);\n\n    if(silent){ return true; }\n    if(firstLine.trim().slice(-2)==='$$'){\n        // Single line expression\n        firstLine = firstLine.trim().slice(0, -2);\n        found = true;\n    }\n\n    for(next = start; !found; ){\n\n        next++;\n\n        if(next >= end){ break; }\n\n        pos = state.bMarks[next]+state.tShift[next];\n        max = state.eMarks[next];\n\n        if(pos < max && state.tShift[next] < state.blkIndent){\n            // non-empty line with negative indent should stop the list:\n            break;\n        }\n\n        if(state.src.slice(pos,max).trim().slice(-2)==='$$'){\n            lastPos = state.src.slice(0,max).lastIndexOf('$$');\n            lastLine = state.src.slice(pos,lastPos);\n            found = true;\n        }\n\n    }\n\n    state.line = next + 1;\n\n    token = state.push('math_block', 'math', 0);\n    token.block = true;\n    token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '')\n    + state.getLines(start + 1, next, state.tShift[start], true)\n    + (lastLine && lastLine.trim() ? lastLine : '');\n    token.map = [ start, state.line ];\n    token.markup = '$$';\n    return true;\n}\n\nmodule.exports = function math_plugin(md, options) {\n    // Default options\n\n    options = options || {};\n\n    // set KaTeX as the renderer for markdown-it-simplemath\n    var katexInline = function(latex){\n        options.displayMode = false;\n        try{\n            return katex.renderToString(latex, options);\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    };\n\n    var inlineRenderer = function(tokens, idx){\n        return katexInline(tokens[idx].content);\n    };\n\n    var katexBlock = function(latex){\n        options.displayMode = true;\n        try{\n            return \"<p>\" + katex.renderToString(latex, options) + \"</p>\";\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    }\n\n    var blockRenderer = function(tokens, idx){\n        return  katexBlock(tokens[idx].content) + '\\n';\n    }\n\n    md.inline.ruler.after('escape', 'math_inline', math_inline);\n    md.block.ruler.after('blockquote', 'math_block', math_block, {\n        alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n    });\n    md.renderer.rules.math_inline = inlineRenderer;\n    md.renderer.rules.math_block = blockRenderer;\n};\n","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type !== 'text') { continue; }\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type !== 'text') { continue; }\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\n\n// Use direct extract instead of `regenerate` to reduse browserified size\nvar src_Any = exports.src_Any = require('uc.micro/properties/Any/regex').source;\nvar src_Cc  = exports.src_Cc = require('uc.micro/categories/Cc/regex').source;\nvar src_Z   = exports.src_Z  = require('uc.micro/categories/Z/regex').source;\nvar src_P   = exports.src_P  = require('uc.micro/categories/P/regex').source;\n\n// \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\nvar src_ZPCc = exports.src_ZPCc = [ src_Z, src_P, src_Cc ].join('|');\n\n// \\p{\\Z\\Cc} (white spaces + control)\nvar src_ZCc = exports.src_ZCc = [ src_Z, src_Cc ].join('|');\n\n// All possible word characters (everything without punctuation, spaces & controls)\n// Defined via punctuation & spaces to save space\n// Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\nvar src_pseudo_letter       = '(?:(?!>|<|' + src_ZPCc + ')' + src_Any + ')';\n// The same as abothe but without [0-9]\n// var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar src_ip4 = exports.src_ip4 =\n\n  '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n// Prohibit [@/] in user/pass to avoid wrong domain fetch.\nexports.src_auth    = '(?:(?:(?!' + src_ZCc + '|[@/]).)+@)?';\n\nvar src_port = exports.src_port =\n\n  '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\nvar src_host_terminator = exports.src_host_terminator =\n\n  '(?=$|>|<|' + src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + src_ZPCc + '))';\n\nvar src_path = exports.src_path =\n\n  '(?:' +\n    '[/?#]' +\n      '(?:' +\n        '(?!' + src_ZCc + '|[()[\\\\]{}.,\"\\'?!\\\\-<>]).|' +\n        '\\\\[(?:(?!' + src_ZCc + '|\\\\]).)*\\\\]|' +\n        '\\\\((?:(?!' + src_ZCc + '|[)]).)*\\\\)|' +\n        '\\\\{(?:(?!' + src_ZCc + '|[}]).)*\\\\}|' +\n        '\\\\\"(?:(?!' + src_ZCc + '|[\"]).)+\\\\\"|' +\n        \"\\\\'(?:(?!\" + src_ZCc + \"|[']).)+\\\\'|\" +\n        \"\\\\'(?=\" + src_pseudo_letter + ').|' +  // allow `I'm_king` if no pair found\n        '\\\\.{2,3}[a-zA-Z0-9%/]|' + // github has ... in commit range links. Restrict to\n                                   // - english\n                                   // - percent-encoded\n                                   // - parts of file path\n                                   // until more examples found.\n        '\\\\.(?!' + src_ZCc + '|[.]).|' +\n        '\\\\-(?!--(?:[^-]|$))(?:-*)|' +  // `---` => long dash, terminate\n        '\\\\,(?!' + src_ZCc + ').|' +      // allow `,,,` in paths\n        '\\\\!(?!' + src_ZCc + '|[!]).|' +\n        '\\\\?(?!' + src_ZCc + '|[?]).' +\n      ')+' +\n    '|\\\\/' +\n  ')?';\n\nvar src_email_name = exports.src_email_name =\n\n  '[\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]+';\n\nvar src_xn = exports.src_xn =\n\n  'xn--[a-z0-9\\\\-]{1,59}';\n\n// More to read about domain names\n// http://serverfault.com/questions/638260/\n\nvar src_domain_root = exports.src_domain_root =\n\n  // Allow letters & digits (http://test1)\n  '(?:' +\n    src_xn +\n    '|' +\n    src_pseudo_letter + '{1,63}' +\n  ')';\n\nvar src_domain = exports.src_domain =\n\n  '(?:' +\n    src_xn +\n    '|' +\n    '(?:' + src_pseudo_letter + ')' +\n    '|' +\n    // don't allow `--` in domain names, because:\n    // - that can conflict with markdown &mdash; / &ndash;\n    // - nobody use those anyway\n    '(?:' + src_pseudo_letter + '(?:-(?!-)|' + src_pseudo_letter + '){0,61}' + src_pseudo_letter + ')' +\n  ')';\n\nvar src_host = exports.src_host =\n\n  '(?:' +\n  // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n    '(?:(?:(?:' + src_domain + ')\\\\.)*' + src_domain_root + ')' +\n  ')';\n\nvar tpl_host_fuzzy = exports.tpl_host_fuzzy =\n\n  '(?:' +\n    src_ip4 +\n  '|' +\n    '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))' +\n  ')';\n\nvar tpl_host_no_ip_fuzzy = exports.tpl_host_no_ip_fuzzy =\n\n  '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))';\n\nexports.src_host_strict =\n\n  src_host + src_host_terminator;\n\nvar tpl_host_fuzzy_strict = exports.tpl_host_fuzzy_strict =\n\n  tpl_host_fuzzy + src_host_terminator;\n\nexports.src_host_port_strict =\n\n  src_host + src_port + src_host_terminator;\n\nvar tpl_host_port_fuzzy_strict = exports.tpl_host_port_fuzzy_strict =\n\n  tpl_host_fuzzy + src_port + src_host_terminator;\n\nvar tpl_host_port_no_ip_fuzzy_strict = exports.tpl_host_port_no_ip_fuzzy_strict =\n\n  tpl_host_no_ip_fuzzy + src_port + src_host_terminator;\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Main rules\n\n// Rude test fuzzy links by host, for quick deny\nexports.tpl_host_fuzzy_test =\n\n  'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + src_ZPCc + '|>|$))';\n\nexports.tpl_email_fuzzy =\n\n    '(^|<|>|\\\\(|' + src_ZCc + ')(' + src_email_name + '@' + tpl_host_fuzzy_strict + ')';\n\nexports.tpl_link_fuzzy =\n    // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n    // but can start with > (markdown blockquote)\n    '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +\n    '((?![$+<=>^`|])' + tpl_host_port_fuzzy_strict + src_path + ')';\n\nexports.tpl_link_no_ip_fuzzy =\n    // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n    // but can start with > (markdown blockquote)\n    '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +\n    '((?![$+<=>^`|])' + tpl_host_port_no_ip_fuzzy_strict + src_path + ')';\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","module.exports = true;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographyc replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n    if (token.type === 'text') {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n    if (token.type === 'text') {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n                    .replace(/\\+-/g, '±')\n                    // .., ..., ....... -> …\n                    // but ?..... & !..... -> ?.. & !..\n                    .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n                    .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n                    // em-dash\n                    .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n                    // en-dash\n                    .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n                    .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/maps/entities.json');\n","// Markdown-it plugin to render GitHub-style task lists; see\n//\n// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\n// https://github.com/blog/1825-task-lists-in-all-markdown-documents\n\nvar disableCheckboxes = true;\nvar useLabelWrapper = false;\nvar useLabelAfter = false;\n\nmodule.exports = function(md, options) {\n\tif (options) {\n\t\tdisableCheckboxes = !options.enabled;\n\t\tuseLabelWrapper = !!options.label;\n\t\tuseLabelAfter = !!options.labelAfter;\n\t}\n\n\tmd.core.ruler.after('inline', 'github-task-lists', function(state) {\n\t\tvar tokens = state.tokens;\n\t\tfor (var i = 2; i < tokens.length; i++) {\n\t\t\tif (isTodoItem(tokens, i)) {\n\t\t\t\ttodoify(tokens[i], state.Token);\n\t\t\t\tattrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));\n\t\t\t\tattrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');\n\t\t\t}\n\t\t}\n\t});\n};\n\nfunction attrSet(token, name, value) {\n\tvar index = token.attrIndex(name);\n\tvar attr = [name, value];\n\n\tif (index < 0) {\n\t\ttoken.attrPush(attr);\n\t} else {\n\t\ttoken.attrs[index] = attr;\n\t}\n}\n\nfunction parentToken(tokens, index) {\n\tvar targetLevel = tokens[index].level - 1;\n\tfor (var i = index - 1; i >= 0; i--) {\n\t\tif (tokens[i].level === targetLevel) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction isTodoItem(tokens, index) {\n\treturn isInline(tokens[index]) &&\n\t       isParagraph(tokens[index - 1]) &&\n\t       isListItem(tokens[index - 2]) &&\n\t       startsWithTodoMarkdown(tokens[index]);\n}\n\nfunction todoify(token, TokenConstructor) {\n\ttoken.children.unshift(makeCheckbox(token, TokenConstructor));\n\ttoken.children[1].content = token.children[1].content.slice(3);\n\ttoken.content = token.content.slice(3);\n\n\tif (useLabelWrapper) {\n\t\tif (useLabelAfter) {\n\t\t\ttoken.children.pop();\n\n\t\t\t// Use large random number as id property of the checkbox.\n\t\t\tvar id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n\t\t\ttoken.children[0].content = token.children[0].content.slice(0, -1) + ' id=\"' + id + '\">';\n\t\t\ttoken.children.push(afterLabel(token.content, id, TokenConstructor));\n\t\t} else {\n\t\t\ttoken.children.unshift(beginLabel(TokenConstructor));\n\t\t\ttoken.children.push(endLabel(TokenConstructor));\n\t\t}\n\t}\n}\n\nfunction makeCheckbox(token, TokenConstructor) {\n\tvar checkbox = new TokenConstructor('html_inline', '', 0);\n\tvar disabledAttr = disableCheckboxes ? ' disabled=\"\" ' : '';\n\tif (token.content.indexOf('[ ] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\"' + disabledAttr + 'type=\"checkbox\">';\n\t} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\" checked=\"\"' + disabledAttr + 'type=\"checkbox\">';\n\t}\n\treturn checkbox;\n}\n\n// these next two functions are kind of hacky; probably should really be a\n// true block-level token with .tag=='label'\nfunction beginLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label>';\n\treturn token;\n}\n\nfunction endLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '</label>';\n\treturn token;\n}\n\nfunction afterLabel(content, id, TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label class=\"task-list-item-label\" for=\"' + id + '\">' + content + '</label>';\n\ttoken.attrs = [{for: id}];\n\treturn token;\n}\n\nfunction isInline(token) { return token.type === 'inline'; }\nfunction isParagraph(token) { return token.type === 'paragraph_open'; }\nfunction isListItem(token) { return token.type === 'list_item_open'; }\n\nfunction startsWithTodoMarkdown(token) {\n\t// leading whitespace in a list item is already trimmed off by markdown-it\n\treturn token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;\n}\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // Token level.\n      //\n      level:  state.level,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the next delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i + 1 < max &&\n               delimiters[i + 1].end === startDelim.end - 1 &&\n               delimiters[i + 1].token === startDelim.token + 1 &&\n               delimiters[startDelim.end - 1].token === endDelim.token - 1 &&\n               delimiters[i + 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i + 1].token].content = '';\n      state.tokens[delimiters[startDelim.end - 1].token].content = '';\n      i++;\n    }\n  }\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"core-js/library/fn/is-iterable\");","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x2B/* + */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      state.delimiters.push({\n        marker: marker,\n        jump:   i,\n        token:  state.tokens.length - 1,\n        level:  state.level,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        delimiters = state.delimiters,\n        max = state.delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'ins_open';\n      token.tag     = 'ins';\n      token.nesting = 1;\n      token.markup  = '++';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'ins_close';\n      token.tag     = 'ins';\n      token.nesting = -1;\n      token.markup  = '++';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize);\n  md.inline.ruler2.before('emphasis', 'ins', postProcess);\n};\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'pre',\n  'section',\n  'source',\n  'title',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar isSpace     = require('../common/utils').isSpace;\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */ || isSpace(code)) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","(function() {\n  var L = require('./L').L,\n      N = require('./N').N,\n      Z = require('./Z').Z,\n      M = require('./M').M,\n      unorm = require('unorm');\n\n  var _unicodeCategory = function(code) {\n    if (~L.indexOf(code)) return 'L';\n    if (~N.indexOf(code)) return 'N';\n    if (~Z.indexOf(code)) return 'Z';\n    if (~M.indexOf(code)) return 'M';\n    return undefined;\n  };\n\n  module.exports = function(string, options) {\n    string = string || '';\n    options = options || {};\n    var allowedChars = options.allowedChars || '-_~';\n    var lower = typeof options.lower === 'boolean' ? options.lower : true;\n    var spaces = typeof options.spaces === 'boolean' ? options.spaces : false;\n    var rv = [];\n    var chars = unorm.nfkc(string);\n    for(var i = 0; i < chars.length; i++) {\n      var c = chars[i];\n      var code = c.charCodeAt(0);\n      // Allow Common CJK Unified Ideographs\n      // See: http://www.unicode.org/versions/Unicode6.0.0/ch12.pdf - Table 12-2 \n      if (0x4E00 <= code && code <= 0x9FFF) {\n        rv.push(c);\n        continue;\n      }\n\n      // Allow Hangul\n      if (0xAC00 <= code && code <= 0xD7A3) {\n        rv.push(c);\n        continue;\n      }\n\n      // Japanese ideographic punctuation\n      if ((0x3000 <= code && code <= 0x3002) || (0xFF01 <= code && code <= 0xFF02)) {\n        rv.push(' ');\n      }\n\n      if (allowedChars.indexOf(c) != -1) {\n        rv.push(c);\n        continue;\n      }\n      var val = _unicodeCategory(code);\n      if (val && ~'LNM'.indexOf(val)) rv.push(c);\n      if (val && ~'Z'.indexOf(val)) rv.push(' ');\n    }\n    var slug = rv.join('').replace(/^\\s+|\\s+$/g, '').replace(/\\s+/g,' ');\n    if (!spaces) slug = slug.replace(/[\\s\\-]+/g,'-');\n    if (lower) slug = slug.toLowerCase();\n    return slug;\n  };\n}());","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction _footnote_ref(tokens, idx) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n}\nfunction _footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\nfunction _footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\nfunction _footnote_open(tokens, idx) {\n  var id = Number(tokens[idx].meta.id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n}\nfunction _footnote_close() {\n  return '</li>\\n';\n}\nfunction _footnote_anchor(tokens, idx) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">\\u21a9</a>'; /* ↩ */\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nmodule.exports = function sub_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = _footnote_ref;\n  md.renderer.rules.footnote_block_open   = _footnote_block_open;\n  md.renderer.rules.footnote_block_close  = _footnote_block_close;\n  md.renderer.rules.footnote_open         = _footnote_open;\n  md.renderer.rules.footnote_close        = _footnote_close;\n  md.renderer.rules.footnote_anchor       = _footnote_anchor;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = { tokens: tokens };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function(tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = '';\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldSCount, oldBMarks, oldIndent, oldParentType, lines, initial, offset, ch,\n      terminatorRules, token,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space (but not tab, check cmark impl) after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - offset % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < oldIndent) { break; }\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space (but not tab, check cmark impl) after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - offset % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = assign({}, require('./lib/re'));\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest       = RegExp(\n                            '(' + self.re.schema_test.source + ')|' +\n                            '(' + self.re.host_fuzzy_test.source + ')|' +\n                            '@',\n                            'i');\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"],"sourceRoot":""}